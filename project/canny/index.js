(()=>{"use strict";class Const_Const{static IsRouglyZero(t){return Math.abs(t)<this.TOLERANCE}}Const_Const.TOLERANCE=1e-4,Const_Const.TOL_SQUARED=Math.pow(Const_Const.TOLERANCE,2),Const_Const.MAX_U16=65536,Const_Const.PLANE_RENDER_LINECOUNT=9,Const_Const.PLANE_RENDER_LINEDISTANCE=.3,Const_Const.CIRCLE_SEGMENTS=100,Const_Const.BEZIER_SEGMENTS=100;class FloatMatrix_FloatMatrix{constructor(t,e,r=[]){this.height=t,this.width=e,this.data=new Float32Array(this.width*this.height),r==[]||0==r.length||this.setData(r)}print(){let t=[];for(var e=0;e<this.width;e++){t.push("|");for(var r=0;r<this.height;r++){let i=this.get(r,e).toFixed(2);i=i.padStart(8," "),t.push(i),r<this.width-2&&t.push("  ")}t.push("  |\n")}console.log(t.join(""))}setData(t){if(t.length!=this.height*this.width)throw"data.length does not match width * height "+t.length.toString();this.data.set(t)}count(){return this.height}getDimensions(){return[this.height,this.width]}fill(t){let e=this.height*this.width;for(let r=0;r<e;r++)this.data[r]=t}fillWith(t,e=this.width){let r=e;if(r>this.width)throw"values per entry is larger than this._width. This will spill over.";for(let e=0;e<this.height;e++)for(let i=0;i<r;i++)this.set(e,i,t[e*r+i])}fillFrom(t){if(t.height<this.height||t.width<this.width)throw new Error("need same dimentions");for(let e=0;e<t.height;e++)for(let r=0;r<2;r++)this.set(e,r,t.get(e,r));return this}get(t,e){return this.data[t*this.width+e]}getRow(t){let e=new Float32Array(this.width);for(let r=0;r<this.width;r++)e[r]=this.get(t,r);return e}getColumn(t){let e=new Float32Array(this.height);for(let r=0;r<this.height;r++){let i=r*this.width+t;e[r]=this.data[i]}return e}set(t,e,r){this.data[t*this.width+e]=r}setRow(t,e){for(let r=0;r<this.width;r++)this.set(t,r,e[r])}forEachValue(t){for(let e=0;e<this.data.length;e++)this.data[e]=t(this.data[e],e);return this}takeRows(t){const e=t.length;let r=new FloatMatrix_FloatMatrix(e,this.width);for(let i=0;i<e;i++){let e=t[i];r.setRow(i,this.getRow(e))}return r}mapWith(t,e){let r=this.clone(),i=Math.min(this.width,t.height),s=Math.min(this.height,t.height);for(var a=0;a<s;a++)for(var o=0;o<i;o++)r.set(a,o,e(this.get(a,o),t.get(a,o)));return r}multiplied(t){let e=this;if(t.height!==e.width)throw new Error(`Columns in A should be the same as the number of rows in B\n                b.width ${t.height},\n                a.height ${e.width}`);for(var r=new FloatMatrix_FloatMatrix(e.height,t.width),i=0;i<r.height;i++)for(var s=0;s<t.width;s++)for(var a=0;a<e.width;a++)r.set(i,s,r.get(i,s)+e.get(i,a)*t.get(a,s));return r}multiply(t){let e=this.multiplied(t);return this.data=e.data,this}static fromNative(t){let e=t.length,r=t[0].length,i=new FloatMatrix_FloatMatrix(e,r);for(var s=0;s<t.length;s++)for(var a=0;a<t[0].length;a++)i.set(s,a,t[s][a]);return i}toNative(){let t=[];for(var e=0;e<this.height;e++){t[e]=[];for(var r=0;r<this.width;r++)t[e][r]=this.get(e,r)}return t}clone(){let t=new FloatMatrix_FloatMatrix(this.height,this.width);for(let e=0;e<this.data.length;e++)t.data[e]=this.data[e];return t}}class GeonMath{static clamp(t,e,r){return Math.min(Math.max(t,e),r)}static smooth(t){return t*t*t*(t*(6*t-15)+10)}static fraction(t,e,r){return(t-e)/(r-e)}static lerp(t,e,r){return t+r*(e-t)}static radToDeg(t){return 180*t/Math.PI}static degToRad(t){return t*Math.PI/180}static factorial(t){let e=1;for(let r=1;r<t+1;r++)e*=r;return e}static stack(t){let e=0;for(let r=1;r<t+1;r++)e+=r;return e}static sample(t,e){let r=e*(t.length-1),i=Math.floor(r),s=Math.ceil(r);return this.lerp(t[i],t[s],r-i)}static sampleSmooth(t,e){let r=e*(t.length-1),i=Math.floor(r),s=Math.ceil(r);return this.lerp(t[i],t[s],this.smooth(r-i))}static between(t,e){let r=0,i=t.length-1;for(let s=0;s<t.length;s++){if(r>i){console.log("start",r,"end",i);let t=i;i=r,r=t;break}let s=Math.round((i-r)/2);if(e<t[s])r=s;else{if(!(e>t[s])){r=s,i=s;break}i=s}}return[r,i]}}class Vector2_Vector2{constructor(t,e){this.x=t,this.y=e}get data(){return[this.x,this.y]}static new(t=0,e=0){return new Vector2_Vector2(t,e)}static fromArray(t){return new Vector2_Vector2(t[0],t[1])}static fromLerp(t,e,r){return new Vector2_Vector2(t.x+(e.x-t.x)*r,t.y+(e.y-t.y)*r)}static fromRandom(t){return new Vector2_Vector2(t.get(),t.get())}static fromRandomAngle(){let t=Math.random()*Math.PI*2;return new Vector2_Vector2(Math.cos(t),Math.sin(t))}static fromCircle(t,e,r){return new Vector2_Vector2(t.x+e*Math.sin(r),t.y+e*Math.cos(r))}static fromCopy(t){return this.zero().copy(t)}static zero(){return new Vector2_Vector2(0,0)}static NaN(){return new Vector2_Vector2(NaN,NaN)}static fromCircumcenter(t,e,r){const i=t.squareSum(),s=e.squareSum(),a=r.squareSum();let o=2*(t.x*(e.y-r.y)+e.x*(r.y-t.y)+r.x*(t.y-e.y));if(o<1e-6)return Vector2_Vector2.NaN();let n=(i*(e.y-r.y)+s*(r.y-t.y)+a*(t.y-e.y))/o,h=(i*(r.x-e.x)+s*(t.x-r.x)+a*(e.x-t.x))/o;return new Vector2_Vector2(n,h)}static sign(t,e,r){return(t.x-r.x)*(e.y-r.y)-(e.x-r.x)*(t.y-r.y)}set(t,e){return this.x=t,this.y=e,this}roughlyEquals(t,e){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e}equals(t){return t.x===this.x&&t.y===this.y}toString(){return`Vector2(${this.x}, ${this.y})`}clone(){return new Vector2_Vector2(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}added(t){return new Vector2_Vector2(this.x+t.x,this.y+t.y)}addn(t,e){return this.x+=t,this.y+=e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subbed(t){return new Vector2_Vector2(this.x-t.x,this.y-t.y)}mul(t){return this.x*=t.x,this.y*=t.y,this}scale(t){return this.x*=t,this.y*=t,this}scaled(t){return new Vector2_Vector2(this.x*t,this.y*t)}divVector(t){return this.x/=t.x,this.y/=t.y,this}div(t){return this.x/=t,this.y/=t,this}dived(t){return new Vector2_Vector2(this.x/t,this.y/t)}minimum(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}maximum(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const r=this.length();return this.div(r||1).scale(Math.max(t,Math.min(e,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}rounded(){return Vector2_Vector2.new(Math.round(this.x),Math.round(this.y))}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}squareSum(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.lengthSquared())}lengthSquared(){return this.x*this.x+this.y*this.y}manhat(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.div(this.length()||1)}normalized(){return this.dived(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}disTo(t){return Math.sqrt(this.disToSquared(t))}disToSquared(t){let e=this.x-t.x,r=this.y-t.y;return e*e+r*r}disToManhat(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().scale(t)}lerp(t,e){return new Vector2_Vector2(this.x+(t.x-this.x)*e,this.y+(t.y-this.y)*e)}sign(t,e){return Vector2_Vector2.sign(this,t,e)}projectOnVector(t){const e=t.lengthSquared();if(0===e)return this.set(0,0);const r=t.dot(this)/e;return this.copy(t).scale(r)}}class Vector3_Vector3{constructor(t,e,r){this.x=t,this.y=e,this.z=r}static new(t=0,e=0,r=0){return new Vector3_Vector3(t,e,r)}get data(){return[this.x,this.y,this.z]}static from2d(t){return new Vector3_Vector3(t.x,t.y,0)}static calculateWheelOrder(t,e,r){let i=[];t.forEach((t=>{i.push(new Vector2_Vector2(t.dot(e),t.dot(r)).angle())}));let s=Util.range(t.length);return s.sort(((t,e)=>i[t]-i[e])),s}static fromLerp(t,e,r){return new Vector3_Vector3(t.x+(e.x-t.x)*r,t.y+(e.y-t.y)*r,t.z+(e.z-t.z)*r)}static fromArray(t){return new Vector3_Vector3(t[0],t[1],t[2])}static fromRandom(t){return new Vector3_Vector3(t.get(),t.get(),t.get())}static fromRandomUnit(t){return this.fromRandom(t).sub(Vector3_Vector3.new(.5,.5,.5)).normalize()}static fromSphere(t,e,r){const i=Math.sin(r)*t;return this.constructor(i*Math.sin(e),Math.cos(r)*t,i*Math.cos(e))}static fromCylinder(t,e,r){return this.constructor(t*Math.sin(e),r,t*Math.cos(e))}static fromLerpWeights(t,e,r,i,s){if(Math.abs(s-r)<1e-5)return t;if(Math.abs(s-i)<1e-5)return e;if(Math.abs(r-i)<1e-5)return t;let a=(s-r)/(i-r);return new Vector3_Vector3(t.x+a*(e.x-t.x),t.y+a*(e.y-t.y),t.z+a*(e.z-t.z))}static zero(){return new Vector3_Vector3(0,0,0)}static unitX(){return new Vector3_Vector3(1,0,0)}static unitY(){return new Vector3_Vector3(0,1,0)}static unitZ(){return new Vector3_Vector3(0,0,1)}toArray(){return new Float32Array([this.x,this.y,this.z])}set(t,e,r){return this.x=t,this.y=e,this.z=r,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}toString(){return`Vector3(${this.x}, ${this.y}, ${this.z})`}toVector2(){return new Vector2_Vector2(this.x,this.y)}clone(){return new Vector3_Vector3(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}to2D(){return new Vector2_Vector2(this.x,this.y)}largestValue(){return Math.max(this.x,this.y,this.z)}added(t){return new Vector3_Vector3(this.x+t.x,this.y+t.y,this.z+t.z)}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}subbed(t){return new Vector3_Vector3(this.x-t.x,this.y-t.y,this.z-t.z)}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}item(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return 1;default:throw"nope"}}scaled(t){return new Vector3_Vector3(this.x*t,this.y*t,this.z*t)}scale(t){return this.x*=t,this.y*=t,this.z*=t,this}mul(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplied(t){return new Vector3_Vector3(this.x*t.x,this.y*t.y,this.z*t.z)}divVector(t){return new Vector3_Vector3(this.x/t.x,this.y/t.y,this.z/t.z)}divided(t){return new Vector3_Vector3(this.x/t,this.y/t,this.z/t)}div(t){return this.x/=t,this.y/=t,this.z/=t,this}minimumed(t){return new Vector3_Vector3(Math.min(this.x,t.x),Math.min(this.y,t.y),Math.min(this.z,t.z))}maximumed(t){return new Vector3_Vector3(Math.max(this.x,t.x),Math.max(this.y,t.y),Math.max(this.z,t.z))}clamped(t,e){return new Vector3_Vector3(Math.max(t.x,Math.min(e.x,this.x)),Math.max(t.y,Math.min(e.y,this.y)),Math.max(t.z,Math.min(e.z,this.z)))}clampScalared(t,e){return new Vector3_Vector3(GeonMath.clamp(this.x,t,e),GeonMath.clamp(this.y,t,e),GeonMath.clamp(this.z,t,e))}clampLengthed(t,e){const r=this.length();return this.div(r||1).scale(Math.max(t,Math.min(e,r)))}floored(){return new Vector3_Vector3(Math.floor(this.x),Math.floor(this.y),Math.floor(this.z))}ceiled(){return new Vector3_Vector3(Math.ceil(this.x),Math.ceil(this.y),Math.ceil(this.z))}rounded(){return new Vector3_Vector3(Math.round(this.x),Math.round(this.y),Math.round(this.z))}roundedToZero(){return new Vector3_Vector3(this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z<0?Math.ceil(this.z):Math.floor(this.z))}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}negated(){return new Vector3_Vector3(-this.x,-this.y,-this.z)}angle(t,e){let r=this.subbed(e.scaled(this.dot(e))),i=t.subbed(e.scaled(t.dot(e)));return console.log(r),console.log(i),0}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}cross(t){const e=this.x,r=this.y,i=this.z,s=t.x,a=t.y,o=t.z;return new Vector3_Vector3(r*o-i*a,i*s-e*o,e*a-r*s)}getLengthSquared(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.getLengthSquared())}manhat(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.div(this.length()||1)}normalized(){return this.divided(this.length()||1)}isNormal(){return Math.abs(this.length()-1)<Const_Const.TOLERANCE}disTo(t){return Math.sqrt(this.disToSquared(t))}disToSquared(t){const e=this.x-t.x,r=this.y-t.y,i=this.z-t.z;return e*e+r*r+i*i}disToManhat(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setLength(t){return this.normalize().scale(t)}lerp(t,e){return Vector3_Vector3.fromLerp(this,t,e)}projectOnVector(t){const e=t.getLengthSquared();if(0===e)return this.set(0,0,0);const r=t.dot(this)/e;return this.copy(t).scale(r)}projectedOnPlane(e){return t.copy(this).projectOnVector(e),this.minimumed(t)}mirrored(e){return this.minimumed(t.copy(e).scale(2*this.dot(e)))}rotated(t,e){return Matrix4_Matrix4.newAxisRotation(t,e).multiplyVector(this)}}const t=new Vector3_Vector3(0,0,0);class Matrix4_Matrix4 extends FloatMatrix_FloatMatrix{constructor(t=[]){super(4,4,t)}static new(t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]){return new Matrix4_Matrix4(t)}static newIdentity(){return new Matrix4_Matrix4([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}static newCopy(t){let e=new Matrix4_Matrix4;for(let r=0;r<16;r++)e.data[r]=t.data[r];return e}get position(){let t=this.data,e=Vector3_Vector3.new();return e.x=t[12],e.y=t[13],e.z=t[14],e}clone(){return Matrix4_Matrix4.newCopy(this)}multiplied(t){const e=t.data,r=this.data;var i=r[0],s=r[1],a=r[2],o=r[3],n=r[4],h=r[5],l=r[6],d=r[7],c=r[8],u=r[9],m=r[10],f=r[11],g=r[12],p=r[13],w=r[14],x=r[15],_=e[0],M=e[1],v=e[2],V=e[3],b=e[4],y=e[5],P=e[6],S=e[7],R=e[8],A=e[9],C=e[10],E=e[11],D=e[12],T=e[13],z=e[14],L=e[15];return new Matrix4_Matrix4([i*_+s*b+a*R+o*D,i*M+s*y+a*A+o*T,i*v+s*P+a*C+o*z,i*V+s*S+a*E+o*L,n*_+h*b+l*R+d*D,n*M+h*y+l*A+d*T,n*v+h*P+l*C+d*z,n*V+h*S+l*E+d*L,c*_+u*b+m*R+f*D,c*M+u*y+m*A+f*T,c*v+u*P+m*C+f*z,c*V+u*S+m*E+f*L,g*_+p*b+w*R+x*D,g*M+p*y+w*A+x*T,g*v+p*P+w*C+x*z,g*V+p*S+w*E+x*L])}multiply(t){return this.data=this.multiplied(t).data,this}transpose(){let t=new Matrix4_Matrix4,e=t.data,r=this.data;return e[0]=r[0],e[1]=r[4],e[2]=r[8],e[3]=r[12],e[4]=r[1],e[5]=r[5],e[6]=r[9],e[7]=r[13],e[8]=r[2],e[9]=r[6],e[10]=r[10],e[11]=r[14],e[12]=r[3],e[13]=r[7],e[14]=r[11],e[15]=r[15],t}static newLookAt(t,e,r){let i=new Matrix4_Matrix4,s=i.data,a=t.clone().sub(e).normalize(),o=r.clone().cross(r).normalize(),n=a.clone().cross(o).normalize();return s[0]=o.x,s[1]=o.y,s[2]=o.z,s[3]=0,s[4]=n.x,s[5]=n.y,s[6]=n.z,s[7]=0,s[8]=a.x,s[9]=a.y,s[10]=a.z,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,i}static newPerspective(t,e,r,i){let s=new Matrix4_Matrix4,a=s.data;var o=Math.tan(.5*Math.PI-.5*t),n=1/(r-i);return a[0]=o/e,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=o,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=(r+i)*n,a[11]=-1,a[12]=0,a[13]=0,a[14]=r*i*n*2,a[15]=0,s}static newOrthographic(t,e,r,i,s,a){let o=new Matrix4_Matrix4,n=o.data;return n[0]=2/(e-t),n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=2/(i-r),n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=2/(s-a),n[11]=0,n[12]=(t+e)/(t-e),n[13]=(r+i)/(r-i),n[14]=(s+a)/(s-a),n[15]=1,o}static newFrustum(t,e,r,i,s,a){let o=new Matrix4_Matrix4,n=o.data;var h=e-t,l=i-r,d=a-s;return n[0]=2*s/h,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=2*s/l,n[6]=0,n[7]=0,n[8]=(t+e)/h,n[9]=(i+r)/l,n[10]=-(a+s)/d,n[11]=-1,n[12]=0,n[13]=0,n[14]=-2*s*a/d,n[15]=0,o}static newTranslation(t,e,r){return new Matrix4_Matrix4([1,0,0,0,0,1,0,0,0,0,1,0,t,e,r,1])}static newTranslate(t){return new Matrix4_Matrix4([1,0,0,0,0,1,0,0,0,0,1,0,t.x,t.y,t.z,1])}static newXRotation(t){var e=Math.cos(t),r=Math.sin(t);return new Matrix4_Matrix4([1,0,0,0,0,e,-r,0,0,r,e,0,0,0,0,1])}static newYRotation(t){var e=Math.cos(t),r=Math.sin(t);return new Matrix4_Matrix4([e,0,r,0,0,1,0,0,-r,0,e,0,0,0,0,1])}static newZRotation(t){let e=new Matrix4_Matrix4,r=e.data;var i=Math.cos(t),s=Math.sin(t);return r[0]=i,r[1]=s,r[2]=0,r[3]=0,r[4]=-s,r[5]=i,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=1,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,e}static newAxisRotation(t,e){let r=new Matrix4_Matrix4,i=r.data,s=t.x,a=t.y,o=t.z,n=Math.sqrt(s*s+a*a+o*o);s/=n,a/=n,o/=n;let h=s*s,l=a*a,d=o*o,c=Math.cos(e),u=Math.sin(e),m=1-c;return i[0]=h+(1-h)*c,i[1]=s*a*m+o*u,i[2]=s*o*m-a*u,i[3]=0,i[4]=s*a*m-o*u,i[5]=l+(1-l)*c,i[6]=a*o*m+s*u,i[7]=0,i[8]=s*o*m+a*u,i[9]=a*o*m-s*u,i[10]=d+(1-d)*c,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,r}axisRotate(t,e){let r=new Matrix4_Matrix4,i=r.data,s=this.data;var a=t.x,o=t.y,n=t.z,h=Math.sqrt(a*a+o*o+n*n),l=(a/=h)*a,d=(o/=h)*o,c=(n/=h)*n,u=Math.cos(e),m=Math.sin(e),f=1-u,g=l+(1-l)*u,p=a*o*f+n*m,w=a*n*f-o*m,x=a*o*f-n*m,_=d+(1-d)*u,M=o*n*f+a*m,v=a*n*f+o*m,V=o*n*f-a*m,b=c+(1-c)*u,y=s[0],P=s[1],S=s[2],R=s[3],A=s[4],C=s[5],E=s[6],D=s[7],T=s[8],z=s[9],L=s[10],F=s[11];return i[0]=g*y+p*A+w*T,i[1]=g*P+p*C+w*z,i[2]=g*S+p*E+w*L,i[3]=g*R+p*D+w*F,i[4]=x*y+_*A+M*T,i[5]=x*P+_*C+M*z,i[6]=x*S+_*E+M*L,i[7]=x*R+_*D+M*F,i[8]=v*y+V*A+b*T,i[9]=v*P+V*C+b*z,i[10]=v*S+V*E+b*L,i[11]=v*R+V*D+b*F,s!==i&&(i[12]=s[12],i[13]=s[13],i[14]=s[14],i[15]=s[15]),r}static newScaler(t,e,r){return new Matrix4_Matrix4([t,0,0,0,0,e,0,0,0,0,r,0,0,0,0,1])}scale(t,e,r){let i=new Matrix4_Matrix4,s=i.data,a=this.data;return s[0]=t*a[0],s[1]=t*a[1],s[2]=t*a[2],s[3]=t*a[3],s[4]=e*a[4],s[5]=e*a[5],s[6]=e*a[6],s[7]=e*a[7],s[8]=r*a[8],s[9]=r*a[9],s[10]=r*a[10],s[11]=r*a[11],a!==s&&(s[12]=a[12],s[13]=a[13],s[14]=a[14],s[15]=a[15]),i}newCompose(t,e,r){let i=new Matrix4_Matrix4,s=i.data;const a=e.x,o=e.y,n=e.z,h=e.w,l=a+a,d=o+o,c=n+n,u=a*l,m=a*d,f=a*c,g=o*d,p=o*c,w=n*c,x=h*l,_=h*d,M=h*c,v=r.x,V=r.y,b=r.z;return s[0]=(1-(g+w))*v,s[1]=(m+M)*v,s[2]=(f-_)*v,s[3]=0,s[4]=(m-M)*V,s[5]=(1-(u+w))*V,s[6]=(p+x)*V,s[7]=0,s[8]=(f+_)*b,s[9]=(p-x)*b,s[10]=(1-(u+g))*b,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,i}decompose(){const t=this.data;let e=Vector3_Vector3.new();e.x=t[12],e.y=t[13],e.z=t[14];let r=Vector3_Vector3.new(t[0],t[1],t[2]).length(),i=Vector3_Vector3.new(t[4],t[5],t[6]).length(),s=Vector3_Vector3.new(t[8],t[9],t[10]).length();this.determinate()<0&&(r=-r);let a=Vector3_Vector3.new();return a.x=r,a.y=i,a.z=s,[e,Vector3_Vector3.new(1/r,1/i,1/s),a]}determinate(){let t=this.data;var e=t[0],r=t[1],i=t[2],s=t[3],a=t[4],o=t[5],n=t[6],h=t[7],l=t[8],d=t[9],c=t[10],u=t[11],m=t[12],f=t[13],g=t[14],p=t[15],w=c*p,x=g*u,_=n*p,M=g*h,v=n*u,V=c*h,b=i*p,y=g*s,P=i*u,S=c*s,R=i*h,A=n*s;return 1/(e*(w*o+M*d+v*f-(x*o+_*d+V*f))+a*(x*r+b*d+S*f-(w*r+y*d+P*f))+l*(_*r+y*o+R*f-(M*r+b*o+A*f))+m*(V*r+P*o+A*d-(v*r+S*o+R*d)))}inverse(){let t=new Matrix4_Matrix4,e=t.data,r=this.data;var i=r[0],s=r[1],a=r[2],o=r[3],n=r[4],h=r[5],l=r[6],d=r[7],c=r[8],u=r[9],m=r[10],f=r[11],g=r[12],p=r[13],w=r[14],x=r[15],_=m*x,M=w*f,v=l*x,V=w*d,b=l*f,y=m*d,P=a*x,S=w*o,R=a*f,A=m*o,C=a*d,E=l*o,D=c*p,T=g*u,z=n*p,L=g*h,F=n*u,I=c*h,B=i*p,N=g*s,U=i*u,H=c*s,G=i*h,k=n*s,O=_*h+V*u+b*p-(M*h+v*u+y*p),Y=M*s+P*u+A*p-(_*s+S*u+R*p),W=v*s+S*h+C*p-(V*s+P*h+E*p),q=y*s+R*h+E*u-(b*s+A*h+C*u),X=1/(i*O+n*Y+c*W+g*q);return e[0]=X*O,e[1]=X*Y,e[2]=X*W,e[3]=X*q,e[4]=X*(M*n+v*c+y*g-(_*n+V*c+b*g)),e[5]=X*(_*i+S*c+R*g-(M*i+P*c+A*g)),e[6]=X*(V*i+P*n+E*g-(v*i+S*n+C*g)),e[7]=X*(b*i+A*n+C*c-(y*i+R*n+E*c)),e[8]=X*(D*d+L*f+F*x-(T*d+z*f+I*x)),e[9]=X*(T*o+B*f+H*x-(D*o+N*f+U*x)),e[10]=X*(z*o+N*d+G*x-(L*o+B*d+k*x)),e[11]=X*(I*o+U*d+k*f-(F*o+H*d+G*f)),e[12]=X*(z*m+I*w+T*l-(F*w+D*l+L*m)),e[13]=X*(U*w+D*a+N*m-(B*m+H*w+T*a)),e[14]=X*(B*l+k*w+L*a-(G*w+z*a+N*l)),e[15]=X*(G*m+F*a+H*l-(U*l+k*m+I*a)),t}multiplyVector(t){let e=new Array(3);for(var r=0;r<3;++r){e[r]=0;for(var i=0;i<4;++i)e[r]+=t.item(i)*this.get(i,r)}return new Vector3_Vector3(e[0],e[1],e[2])}multipliedVectorList(t){let e=Array(t.length);for(let r=0;r<t.length;r++)e[r]=this.multiplyVector(t[r]);return e}}class Geometry{rotateX(t){let e=Matrix4_Matrix4.newXRotation(t);return this.transform(e)}rotateY(t){let e=Matrix4_Matrix4.newYRotation(t);return this.transform(e)}rotateZ(t){let e=Matrix4_Matrix4.newZRotation(t);return this.transform(e)}rotate(t,e){let r=Matrix4_Matrix4.newAxisRotation(e,t);return this.transform(r)}move(t){let e=Matrix4_Matrix4.newTranslate(t);return this.transform(e)}scale(t){let e=Matrix4_Matrix4.newScaler(t.x,t.y,t.z);return this.transform(e)}rotatedX(t){let e=Matrix4_Matrix4.newXRotation(t);return this.transformed(e)}rotatedY(t){let e=Matrix4_Matrix4.newYRotation(t);return this.transformed(e)}rotatedZ(t){let e=Matrix4_Matrix4.newZRotation(t);return this.transformed(e)}rotated(t,e){let r=Matrix4_Matrix4.newAxisRotation(e,t);return this.transformed(r)}moved(t){let e=Matrix4_Matrix4.newTranslate(t);return this.transformed(e)}scaled(t){let e=Matrix4_Matrix4.newScaler(t.x,t.y,t.z);return this.transformed(e)}}class MultiVector2_MultiVector2 extends Geometry{constructor(t){super(),this._matrix=t}static new(t){return new MultiVector2_MultiVector2(new FloatMatrix_FloatMatrix(t,2))}static fromList(t){let e=t.length,r=MultiVector2_MultiVector2.new(e);for(let e=0;e<t.length;e++)r._matrix.set(e,0,t[e].x),r._matrix.set(e,1,t[e].y);return r}static fromMatrix(t){if(2!=t.width)throw new Error("incorrect.");return new MultiVector2_MultiVector2(t)}static fromData(t){let e=MultiVector2_MultiVector2.new(t.length/2);return e._matrix.fillWith(t),e}get width(){return this._matrix.width}get height(){return this._matrix.height}get dimensions(){return this._matrix.width}get count(){return this._matrix.height}get matrix(){return this._matrix}forEach(t){for(let e=0;e<this.count;e++){let r=this.get(e);t(r,e),this.set(e,r)}return this}map(t){let e=this.clone();for(let r=0;r<this.count;r++){let i=this.get(r),s=t(i,r);s instanceof Vector2_Vector2?e.set(r,s):e.set(r,i)}return e}take(t){const e=t.length;let r=MultiVector2_MultiVector2.new(e);for(let i=0;i<e;i++){let e=t[i];r.set(i,this.get(e))}return r}set(t,e){this._matrix.data[t*this._matrix.width+0]=e.x,this._matrix.data[t*this._matrix.width+1]=e.y}setXY(t,e,r){this._matrix.data[t*this._matrix.width+0]=e,this._matrix.data[t*this._matrix.width+1]=r}get(t){return new Vector2_Vector2(this._matrix.data[t*this.width+0],this._matrix.data[t*this.width+1])}toMatrixSlice(){return this._matrix}toList(){let t=[];for(let e=0;e<this.height;e++)t.push(this.get(e));return t}to3D(){let t=MultiVector3_MultiVector3.new(this.count);for(let e=0;e<this.count;e++){let r=this._matrix.getRow(e);t.setXYZ(e,r[0],r[1],0)}return t}clone(){let t=MultiVector2_MultiVector2.new(this.count);return t._matrix=this._matrix.clone(),t}transform(t){return this._matrix.multiply(t),this}transformed(t){let e=MultiVector2_MultiVector2.new(this.count);return e._matrix=this._matrix.multiplied(t),e}}class MultiVector3_MultiVector3 extends Geometry{constructor(t){super(),this._matrix=t}static new(t){return new MultiVector3_MultiVector3(new FloatMatrix_FloatMatrix(t,3))}static fromList(t){let e=t.length,r=MultiVector3_MultiVector3.new(e);return r.fillFromList(t),r}static fromNative(t){return new MultiVector3_MultiVector3(FloatMatrix_FloatMatrix.fromNative(t))}static fromData(t){let e=MultiVector3_MultiVector3.new(t.length/3);return e._matrix.fillWith(t),e}static fromMatrix(t){if(3!=t.width)throw new Error("incorrect.");return new MultiVector3_MultiVector3(t)}get width(){return this._matrix.width}get height(){return this._matrix.height}get dimensions(){return this._matrix.width}get count(){return this._matrix.height}get matrix(){return this._matrix}setXYZ(t,e,r,i){this._matrix.data[t*this.width+0]=e,this._matrix.data[t*this.width+1]=r,this._matrix.data[t*this.width+2]=i}set(t,e){this._matrix.data[t*this.width+0]=e.x,this._matrix.data[t*this.width+1]=e.y,this._matrix.data[t*this.width+2]=e.z}get(t){return new Vector3_Vector3(this._matrix.data[t*this.width+0],this._matrix.data[t*this.width+1],this._matrix.data[t*this.width+2])}slice(){return this._matrix}fillFromList(t){for(let e=0;e<t.length;e++)this.set(e,t[e])}forEach(t){for(let e=0;e<this.count;e++){let r=this.get(e);r=t(r,e),r instanceof Vector3_Vector3&&this.set(e,r)}return this}take(t){const e=t.length;let r=MultiVector3_MultiVector3.new(e);for(let i=0;i<e;i++){let e=t[i];r.set(i,this.get(e))}return r}takeRange(t,e){let r=MultiVector3_MultiVector3.new(e-t),i=0;for(let s=t;s<e;s++)r.set(i,this.get(s)),i++;return r}map(t){let e=this.clone();for(let r=0;r<this.count;r++){let i=this.get(r),s=t(i,r);s instanceof Vector3_Vector3?e.set(r,s):e.set(r,i)}return e}mapWith(t,e){let r=this._matrix.mapWith(t._matrix,e);return new MultiVector3_MultiVector3(r)}toList(){let t=[];for(let e=0;e<this.height;e++)t.push(this.get(e));return t}to2D(){let t=MultiVector2_MultiVector2.new(this.count);return this.forEach(((e,r)=>{t.setXY(r,e.x,e.y)})),t}mean(){let t=Vector3_Vector3.zero(),e=this.count;for(let r=0;r<e;r++)t.x+=this._matrix.data[3*r],t.y+=this._matrix.data[3*r+1],t.z+=this._matrix.data[3*r+2];return t.scale(1/e)}average(){return this.mean()}closestId(t){let e=1/0,r=-1;return this.forEach(((i,s)=>{let a=t.disToSquared(i);a<e&&(e=a,r=s)})),r}closestIds(t,e){let r=[];for(let i=0;i<e;i++){let e=1/0,i=-1;this.forEach(((s,a)=>{if(r.includes(i))return;let o=t.disToSquared(s);o<e&&(e=o,i=a)})),r.push(i)}return r}clone(){return new MultiVector3_MultiVector3(this._matrix.clone())}transform(t){for(let e=0;e<this.height;e++){let r=this.get(e);r=t.multiplyVector(r),this.set(e,r)}return this}move(t){for(let e=0;e<this.height;e++){let r=this.get(e);r.add(t),this.set(e,r)}return this}scale(t){for(let e=0;e<this.height;e++){let r=this.get(e);r.mul(t),this.set(e,r)}return this}transformed(t){return new MultiVector3_MultiVector3(function calc(t,e){let r=new FloatMatrix_FloatMatrix(t.height,e.width);for(var i=0;i<t.height;i++)for(var s=0;s<4;s++){for(var a=0;a<3;a++)r.set(i,s,r.get(i,s)+t.get(i,a)*e.get(a,s));r.set(i,s,r.get(i,s)+1*e.get(3,s))}return r}(this._matrix,t))}moved(t){let e=Matrix4_Matrix4.newTranslate(t);return this.transformed(e)}scaled(t){let e=Matrix4_Matrix4.newScaler(t.x,t.y,t.z);return this.transformed(e)}}class Util{static range(t){let e=[];for(let r=0;r<t;r++)e.push(r);return e}static collect(t){let e=new Array;for(let r of t)e.push(r);return e}static lowestScore(t,e,r=1e-10){let i=1/0;for(;t.t1-t.t0>r;)i=(t.t1+t.t0)/2,e(i-r)<e(i+r)?t.t1=i:t.t0=i;return i}static lowestScoreSquared(t,e,r=1e-10){let i=1/0,s=1/0;for(;t.x.t1-t.x.t0>r||t.y.t1-t.y.t0>r;)i=(t.x.t1+t.x.t0)/2,s=(t.y.t1+t.y.t0)/2,e(i-r,s)<e(i+r,s)?t.x.t1=i:t.x.t0=i,e(i,s-r)<e(i,s+r)?t.y.t1=s:t.y.t0=s;return Vector2_Vector2.new(i,s)}static iterateTriangle(t,e){return GeonMath.stack(t)+e}static getTriangleBase(t,e){let r=MultiVector3_MultiVector3.new(e),i=e-1,s=0;for(let e=0;e<=i;e++){let a=Util.iterateTriangle(i,e);r.set(s,t.get(a)),s++}return r}static getTriangleLeft(t,e){let r=MultiVector3_MultiVector3.new(e),i=0;for(let s=e-1;s>-1;s-=1)r.set(i,t.get(Util.iterateTriangle(s,0))),i++;return r}static getTriangleRight(t,e){let r=MultiVector3_MultiVector3.new(e),i=0;for(let s=e-1;s>-1;s-=1)r.set(i,t.get(Util.iterateTriangle(s,s))),i++;return r}}class Kernels{static generateGaussianKernel(t,e){var r,i,s,a,o,n,h,l,d,c,u,m,f,g,p,w;for(o=t,2.718,a=new FloatMatrix_FloatMatrix(e,e),n=0,i=d=0,f=e-1;0<=f?d<=f:d>=f;i=0<=f?++d:--d)for(h=-(e-1)/2+i,s=c=0,g=e-1;0<=g?c<=g:c>=g;s=0<=g?++c:--c)l=-(e-1)/2+s,r=1/(2*Math.PI*o*o)*Math.pow(2.718,-(h*h+l*l)/(2*o*o)),a.set(i,s,r),n+=r;for(i=u=0,p=e-1;0<=p?u<=p:u>=p;i=0<=p?++u:--u)for(s=m=0,w=e-1;0<=w?m<=w:m>=w;s=0<=w?++m:--m)a.set(i,s,a.get(i,s)/n);return a}static buildSobelKernel(t,e){}}Kernels.SmoothKernel=new FloatMatrix_FloatMatrix(3,3,[1,1,1,1,1,1,1,1,1]).forEachValue((t=>1*t/9)),Kernels.SmoothKernel5=new FloatMatrix_FloatMatrix(5,5,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]).forEachValue((t=>1*t/25)),Kernels.Gauss5=new FloatMatrix_FloatMatrix(5,5,[2,4,5,4,2,4,9,12,9,4,5,12,15,12,5,4,9,12,9,4,2,4,5,4,2]).forEachValue((t=>1*t/159)),Kernels.DiagonalKernel=new FloatMatrix_FloatMatrix(3,3,[1,0,-1,0,0,0,-1,0,1]),Kernels.SobelLeft=new FloatMatrix_FloatMatrix(3,3,[1,2,1,0,0,0,-1,-2,-1]),Kernels.SobelRight=new FloatMatrix_FloatMatrix(3,3,[-1,-2,-1,0,0,0,1,2,1]),Kernels.SobelUp=new FloatMatrix_FloatMatrix(3,3,[1,0,-1,2,0,-2,1,0,-1]),Kernels.SobelDown=new FloatMatrix_FloatMatrix(3,3,[-1,0,1,-2,0,2,-1,0,1]);class MultiShader{setAndRender(t,e){this.set(t,o.DynamicDraw),this.render(e)}}var e,r;!function(t){t[t.Invalid=0]="Invalid",t[t.Points=1]="Points",t[t.Lines=2]="Lines",t[t.Triangles=3]="Triangles",t[t.Quads=4]="Quads"}(e||(e={})),function(t){t[t.None=0]="None",t[t.Vertex=1]="Vertex",t[t.Face=2]="Face",t[t.MultiVertex=3]="MultiVertex"}(r||(r={}));class Mesh_Mesh{constructor(t,e,i,s){this.verts=t,this.links=e,this._uvs=i,this._normals=s,this._normalKind=r.None}get maxSize(){return this.links?this.links.data.length:this.verts.count}clone(){return new Mesh_Mesh(this.verts.clone(),this.links.clone())}static new(t,e,r,i){return new Mesh_Mesh(t,e,r,i)}static fromLists(t,e){return new Mesh_Mesh(MultiVector3_MultiVector3.fromList(t),IntMatrix_IntMatrix.fromList(e,3))}static newEmpty(t,e,r){return new Mesh_Mesh(MultiVector3_MultiVector3.new(t),new IntMatrix_IntMatrix(e,r))}static newLines(t,e){let r=MultiVector3_MultiVector3.fromList(t),i=IntMatrix_IntMatrix.fromList(e,2);return new Mesh_Mesh(r,i)}static fromBiSurface(t,e=10,r=10){let i=e+1,s=r+1,a=MultiVector3_MultiVector3.new(i*s),o=new IntMatrix_IntMatrix(e*r*2,3);for(let o=0;o<i;o++)for(let i=0;i<s;i++){let n=o*s+i;a.set(n,t.pointAt(o/e,i/r))}for(let t=0;t<e;t++)for(let e=0;e<r;e++){let a=2*(t*r+e),n=t*i+e,h=n+s,l=n+1,d=h+1;o.setRow(a,[n,h,d]),o.setRow(a+1,[l,n,d])}return new Mesh_Mesh(a,o)}static fromTriSurface(t,e=10){let r=e+1,i=MultiVector3_MultiVector3.new(GeonMath.stack(r)),s=new IntMatrix_IntMatrix(GeonMath.stack(r),3);return new Mesh_Mesh(i,s)}static zero(){return new Mesh_Mesh(MultiVector3_MultiVector3.new(0),new IntMatrix_IntMatrix(0,0))}static fromJoin(t){let e=0,r=0;for(let i of t)e+=i.verts.count,r+=i.links.count();let i=MultiVector3_MultiVector3.new(e),s=new IntMatrix_IntMatrix(r,3),a=0,o=0;for(let e of t){for(let t=0;t<e.verts.count;t++)i.set(a+t,e.verts.get(t));for(let t=0;t<e.links.count();t++){let r=e.links.getRow(t);for(let t=0;t<r.length;t++)r[t]=r[t]+a;s.setRow(o+t,r)}a+=e.verts.count,o+=e.links.count()}return new Mesh_Mesh(i,s)}static fromRectangle(t){let e=t.getCorners(),r=[];return r.push(...quadToTri(i[0])),this.fromLists(e,r)}static newQuad(t){let e=[...quadToTri(i[0])];return this.fromLists(t,e)}static newOct(t){let e=[];for(let t of i)e.push(...quadToTri(t));return this.fromLists(t,e)}static fromCube(t){let e=t.getCorners();return Mesh_Mesh.newOct(e)}static newIcosahedron(t=1){let e=new Graph,r=t,i=r*((1+Math.pow(5,.5))/2),addVert=t=>{e.addVert(t,t)};addVert(new Vector3_Vector3(-r,-i,0)),addVert(new Vector3_Vector3(r,-i,0)),addVert(new Vector3_Vector3(-r,i,0)),addVert(new Vector3_Vector3(r,i,0)),addVert(new Vector3_Vector3(0,-r,-i)),addVert(new Vector3_Vector3(0,r,-i)),addVert(new Vector3_Vector3(0,-r,i)),addVert(new Vector3_Vector3(0,r,i)),addVert(new Vector3_Vector3(-i,0,-r)),addVert(new Vector3_Vector3(-i,0,r)),addVert(new Vector3_Vector3(i,0,-r)),addVert(new Vector3_Vector3(i,0,r));let addEdge=(t,r)=>{e.addEdge(t,r)};for(let t=0;t<12;t+=4){addEdge(t+0,t+1),addEdge(t+2,t+3);let e=(t+4)%12;addEdge(t+0,e+2),addEdge(t+0,e+0),addEdge(t+1,e+2),addEdge(t+1,e+0),addEdge(t+2,e+3),addEdge(t+2,e+1),addEdge(t+3,e+3),addEdge(t+3,e+1)}return this.fromGraph(e)}static newSphere(t,e,r,i){let s=r*i+2,a=MultiVector3_MultiVector3.new(s),setVert=function(r,i){a.set(r,i.scale(e).add(t))};setVert(0,new Vector3_Vector3(0,0,1));for(let t=0;t<r;t++)for(let e=0;e<i;e++){let s=Math.PI*(t+1)/(r+1),a=2*Math.PI*e/i,o=Math.sin(s)*Math.cos(a),n=Math.sin(s)*Math.sin(a),h=Math.cos(s);setVert(1+t*i+e,new Vector3_Vector3(o,n,h))}setVert(s-1,new Vector3_Vector3(0,0,-1));let o=i*r*2,n=new IntMatrix_IntMatrix(o,3);n.fill(-1);let setFace=function(t,e){n.setRow(t,e)};for(let t=0;t<i;t++)setFace(t,[0,t+1,(t+1)%i+1]);for(let t=0;t<r-1;t++){let e=i*t+1,r=e+i;for(let s=0;s<i;s++){let a=e+(s+1)%i,o=r+s,n=r+(s+1)%i,h=i+i*t*2+2*s;setFace(h,[e+s,o,a]),setFace(h+1,[o,n,a])}}for(let t=0;t<i;t++){let e=s-i-1;setFace(o-i+t,[s-1,e+(t+1)%i,e+t])}return new Mesh_Mesh(a,n)}static newCylinder(t,e,r,i){let s=e.subbed(t),a=2*i+2,o=2*(a-2),n=MultiVector3_MultiVector3.new(a),setVert=function(t,e){n.set(t,e)},h=Plane_Plane.fromPN(t,s),l=Plane_Plane.fromPN(e,s);setVert(0,t);for(let t=0;t<i;t++){let e=new Vector3_Vector3(Math.cos(2*Math.PI*t/i),Math.sin(2*Math.PI*t/i),0).scale(r);e=h.matrix.multiplyVector(e),setVert(t+1,e)}let d=a/2;for(let t=0;t<i;t++){let e=new Vector3_Vector3(Math.cos(2*Math.PI*t/i),Math.sin(2*Math.PI*t/i),0).scale(r);e=l.matrix.multiplyVector(e),setVert(d+t,e)}setVert(a-1,e);let c=new IntMatrix_IntMatrix(o,3);c.fill(-1);let setFace=function(t,e){c.setRow(t,e)};for(let t=0;t<i;t++){let e=1+t,r=1+(t+1)%i,s=a-1,o=d+t,n=d+(t+1)%i;setFace(4*t,[0,r,e]),setFace(4*t+1,[e,r,o]),setFace(4*t+2,[r,n,o]),setFace(4*t+3,[s,o,n])}return new Mesh_Mesh(n,c)}static newCone(t,e,r,i){let s=i+2,a=2*i,o=MultiVector3_MultiVector3.new(s),setVert=function(e,r){o.set(e,r.add(t))},n=new IntMatrix_IntMatrix(a,3);n.fill(-1);let setFace=function(t,e){n.setRow(t,e)};setVert(0,new Vector3_Vector3(0,0,0));for(let t=0;t<i;t++)setVert(t+1,new Vector3_Vector3(Math.cos(2*Math.PI*t/i),Math.sin(2*Math.PI*t/i),0).scale(e));setVert(s-1,new Vector3_Vector3(0,0,r));for(let t=0;t<i;t++){let e=s-1,r=1+t,a=1+(t+1)%i;setFace(2*t,[0,a,r]),setFace(2*t+1,[r,a,e])}return new Mesh_Mesh(o,n)}static newTorus(t,e,r,i){let s=r*i,a=MultiVector3_MultiVector3.new(s),o=MultiVector3_MultiVector3.new(s);for(let s=0;s<r;s++){let n=2*Math.PI*s/r,h=Vector3_Vector3.new(Math.cos(n)*t,Math.sin(n)*t,0);for(let t=0;t<i;t++){let r=2*Math.PI*t/i,l=Vector3_Vector3.new(Math.cos(r)*Math.cos(n),Math.cos(r)*Math.sin(n),Math.sin(r)).normalize();o.set(s*i+t,l),a.set(s*i+t,l.scale(e).add(h))}}let n,h=IntMatrix_IntMatrix.new(2*s,3),getIndex=(t,e)=>t%r*i+e%i;for(let t=0;t<r;t++)for(let e=0;e<i;e++){let r=getIndex(t,e),i=getIndex(t,e+1),s=getIndex(t+1,e),a=getIndex(t+1,e+1),o=2*r;h.setRow(o,[r,s,i]),h.setRow(o+1,[i,s,a])}return Mesh_Mesh.new(a,h,n,o)}static fromGraph(t){let e=MultiVector3_MultiVector3.fromList(t.allVertPositions()),r=t.allVertLoopsAsInts(),i=new IntMatrix_IntMatrix(r.length,3);return r.forEach(((t,e)=>{3==t.length?i.setRow(e,t):console.log("cant convert loop")})),Mesh_Mesh.new(e,i)}toLines(){const getLines=t=>{let e=this.links.count()*t,r=new IntMatrix_IntMatrix(e,2);for(let e=0;e<this.links.count();e++)for(let i=0;i<t;i++){let s=(i+1)%t,a=e*t+i;r.set(a,0,this.links.get(e,i)),r.set(a,1,this.links.get(e,s))}return r};let t=this.getType();if(t==e.Lines)return this.clone();if(t==e.Triangles){let t=getLines(3);return Mesh_Mesh.new(this.verts.clone(),t)}if(t==e.Quads){let t=getLines(4);return Mesh_Mesh.new(this.verts.clone(),t)}return console.warn("cannot convert to lines"),Mesh_Mesh.newEmpty(0,0,0)}ToShaderMesh(){return ShaderMesh_ShaderMesh.fromMesh(this)}toGraph(){return Graph.fromMesh(this)}toLinearMesh(){this.ensureFaceNormals();let t=this.links.data.length,e=this.links.count(),r=MultiVector3_MultiVector3.new(t),i=MultiVector3_MultiVector3.new(t);for(let t=0;t<e;t++){let e=this.normals.get(t);this.links.getRow(t).forEach(((s,a)=>{let o=3*t+a;r.set(o,this.verts.get(s)),i.set(o,e)}))}let s=IntMatrix_IntMatrix.fromList([],3);return s._width=3,s._height=t/3,s.data=getDefaultIndices(t),new Mesh_Mesh(r,s,void 0,i)}getVerticesOfFace(t){let e=MultiVector3_MultiVector3.new(this.links._width);return this.links.getRow(t).forEach(((t,r)=>{e.set(r,this.verts.get(t))})),e}get type(){return this.getType()}getType(){return this.links._width==e.Points?e.Points:this.links._width==e.Lines?e.Lines:this.links._width==e.Triangles?e.Triangles:this.links._width==e.Quads?e.Quads:e.Invalid}get normals(){return this._normals}get normalKind(){return this._normalKind}calcAndSetFaceNormals(){this._normalKind=r.Face,this._normals=this.calculateFaceNormals()}calcAndSetVertexNormals(){this._normalKind=r.Vertex,this._normals=this.calculateVertexNormals()}ensureVertexNormals(){return this._normals&&this._normals.count==this.verts.count?void(this._normalKind=r.Vertex):void this.calcAndSetVertexNormals()}ensureFaceNormals(){return this._normals&&this._normals.count==this.links.count()?(this._normalKind=r.Face,!0):(this.calcAndSetFaceNormals(),!1)}ensureMultiFaceNormals(){return!(!this._normals||this.normals.count!=this.maxSize)&&(this._normalKind=r.MultiVertex,!0)}calculateFaceNormals(){if(this.getType()!=e.Triangles)return console.error("can only calculate normals from triangular meshes"),MultiVector3_MultiVector3.new(0);let t=this.links.count(),r=MultiVector3_MultiVector3.new(t);for(let e=0;e<t;e++){let t=this.getVerticesOfFace(e),i=t.get(1).subbed(t.get(0)).cross(t.get(2).subbed(t.get(0))).normalize();r.set(e,i)}return r}calculateVertexNormals(){let t=this.links.count(),e=this.OLDcalculateFaceNormals(),r=MultiVector3_MultiVector3.new(this.verts.count);for(let i=0;i<t;i++){let t=e[i];this.links.getRow(i).forEach((e=>{let i=r.get(e);r.set(e,i.add(t))}))}for(let t=0;t<r.count;t++)r.set(t,r.get(t).normalize());return r}OLDcalculateFaceNormals(){let t=[];if(this.getType()!=e.Triangles)return console.error("can only calculate normals from triangular meshes"),t;let r=this.links.count();for(let e=0;e<r;e++){let r=this.getVerticesOfFace(e).toList(),i=r[1].subbed(r[0]).cross(r[2].subbed(r[0])).normalize();t.push(i)}return t}OLDcalculateVertexNormals(){let t=this.links.count(),e=this.OLDcalculateFaceNormals(),r=MultiVector3_MultiVector3.new(this.verts.count);for(let i=0;i<t;i++){let t=e[i];this.links.getRow(i).forEach((e=>{let i=r.get(e);r.set(e,i.add(t))}))}let i=r.toList();for(let t=0;t<i.length;t++)i[t].normalize();return i}get uvs(){return this._uvs}ensureUVs(){return!(!this._uvs||this._uvs.count!=this.maxSize)||(this._uvs=MultiVector2_MultiVector2.new(this.maxSize),!1)}}const i=[[0,1,3,2],[4,0,2,6],[1,0,4,5],[1,5,7,3],[2,3,7,6],[5,4,6,7]];function quadToTri(t){return[t[0],t[2],t[1],t[0],t[3],t[2]]}class Perlin{constructor(){this.permutation=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],this.repeat=0,this.repeat=0,this.p=new Array(512);for(let t=0;t<512;t++)this.p[t]=this.permutation[t%256]}static new(){return new Perlin}grad(t,e,r,i){switch(15&t){case 0:return e+r;case 1:return-e+r;case 2:return e-r;case 3:return-e-r;case 4:return e+i;case 5:return-e+i;case 6:return e-i;case 7:return-e-i;case 8:return r+i;case 9:return-r+i;case 10:return r-i;case 11:return-r-i;case 12:return r+e;case 13:return-r+i;case 14:return r-e;case 15:return-r-i;default:return 0}}inc(t){return t++,this.repeat>0&&(t%=this.repeat),t}noise(t,e,r){this.repeat>0&&(t%=this.repeat,e%=this.repeat,r%=this.repeat);let i,s,a,o,n=255&Math.floor(t),h=255&Math.floor(e),l=255&Math.floor(r),d=t-Math.floor(t),c=e-Math.floor(e),u=r-Math.floor(r),m=this.p,f=m[m[m[n]+h]+l],g=m[m[m[n]+this.inc(h)]+l],p=m[m[m[n]+h]+this.inc(l)],w=m[m[m[n]+this.inc(h)]+this.inc(l)],x=m[m[m[this.inc(n)]+h]+l],_=m[m[m[this.inc(n)]+this.inc(h)]+l],M=m[m[m[this.inc(n)]+h]+this.inc(l)],v=m[m[m[this.inc(n)]+this.inc(h)]+this.inc(l)],V=GeonMath.smooth(d),b=GeonMath.smooth(c),y=GeonMath.smooth(u);return i=GeonMath.lerp(this.grad(f,d,c,u),this.grad(x,d-1,c,u),V),s=GeonMath.lerp(this.grad(g,d,c-1,u),this.grad(_,d-1,c-1,u),V),a=GeonMath.lerp(i,s,b),i=GeonMath.lerp(this.grad(p,d,c,u-1),this.grad(M,d-1,c,u-1),V),s=GeonMath.lerp(this.grad(w,d,c-1,u-1),this.grad(v,d-1,c-1,u-1),V),o=GeonMath.lerp(i,s,b),(GeonMath.lerp(a,o,y)+1)/2}}class App{constructor(t,e=""){this.gl=t,this.name=this.constructor.name,this.description=e}ui(t){}start(){}update(t){}draw(t){}}var s,a;!function(t){t[t.A=0]="A",t[t.B=1]="B",t[t.C=2]="C",t[t.D=3]="D",t[t.E=4]="E",t[t.F=5]="F",t[t.G=6]="G",t[t.H=7]="H",t[t.I=8]="I",t[t.J=9]="J",t[t.K=10]="K",t[t.L=11]="L",t[t.M=12]="M",t[t.N=13]="N",t[t.O=14]="O",t[t.P=15]="P",t[t.Q=16]="Q",t[t.R=17]="R",t[t.S=18]="S",t[t.T=19]="T",t[t.U=20]="U",t[t.V=21]="V",t[t.W=22]="W",t[t.X=23]="X",t[t.Y=24]="Y",t[t.Z=25]="Z",t[t.Up=26]="Up",t[t.Down=27]="Down",t[t.Left=28]="Left",t[t.Right=29]="Right",t[t.Space=30]="Space",t[t.Control=31]="Control",t[t.Alt=32]="Alt",t[t.Shift=33]="Shift",t[t.Enter=34]="Enter",t[t.Esc=35]="Esc",t[t.N1=36]="N1",t[t.N2=37]="N2",t[t.N3=38]="N3",t[t.N4=39]="N4",t[t.N5=40]="N5",t[t.N6=41]="N6",t[t.N7=42]="N7",t[t.N8=43]="N8",t[t.N9=44]="N9",t[t.N0=45]="N0",t[t.Plus=46]="Plus",t[t.Minus=47]="Minus",t[t.Backspace=48]="Backspace"}(s||(s={}));class InputState{constructor(t){this.mousePos=Vector2_Vector2.zero(),this.mousePosBuffered=Vector2_Vector2.zero(),this.mousePosPrev=Vector2_Vector2.zero(),this.mouseDelta=Vector2_Vector2.zero(),this.mouseLeftDown=!1,this.mouseLeftPressed=!1,this.mouseLeftPrev=!1,this.mouseRightDown=!1,this.mouseRightPressed=!1,this.mouseRightPrev=!1,this.mouseMiddleDown=!1,this.mouseMiddlePressed=!1,this.mouseMiddlePrev=!1,this.keysDown={},this.keysPressed=[],this.scrollValue=0,this.scrollValuePrevious=0,this.mouseScrollDelta=0,this.mouseScrollBuffered=0,this.canvas=t,this.tick=0,this.oldTime=Date.now(),this.newTime=this.oldTime,this.startTime=Date.now(),this.minimumTick=1e3/144,t.addEventListener("mousedown",this.setMouseDown.bind(this)),t.addEventListener("mouseup",this.setMouseUp.bind(this)),t.addEventListener("contextmenu",(t=>{t.preventDefault(),t.stopPropagation()})),document.addEventListener("mousemove",this.onMouseMove.bind(this)),t.addEventListener("wheel",this.setMouseScroll.bind(this)),document.addEventListener("touchmove",this.setTouch.bind(this)),t.addEventListener("touchstart",this.setTouch.bind(this)),t.addEventListener("touchend",this.setTouchUp.bind(this)),t.addEventListener("keydown",this.onKeyDown.bind(this)),t.addEventListener("keyup",this.onKeyUp.bind(this)),t.focus()}static new(t){return new InputState(t)}preUpdate(t){if(this.newTime=Date.now(),this.oldTime=this.newTime,this.tick=t,this.mousePosBuffered.equals(this.mousePos)?this.mouseDelta=Vector2_Vector2.zero():(this.mousePos=this.mousePosBuffered.clone(),this.mouseDelta=this.mousePos.subbed(this.mousePosPrev),this.mousePosPrev=this.mousePos.clone()),this.mouseLeftPressed=this.mouseLeftPrev!=this.mouseLeftDown&&this.mouseLeftDown,this.mouseRightPressed=this.mouseRightPrev!=this.mouseRightDown&&this.mouseRightDown,this.mouseMiddlePressed=this.mouseMiddlePrev!=this.mouseMiddleDown&&this.mouseMiddleDown,0!=this.mouseScrollBuffered){let t=.1;this.mouseScrollBuffered<0&&(t=-.1),this.scrollValue=Math.max(0,this.scrollValue+t),this.mouseScrollDelta=t,this.mouseScrollBuffered=0}else this.mouseScrollDelta=0}setScrollValue(t){this.scrollValue=Math.max(0,t)}postUpdate(){this.mouseLeftPrev=this.mouseLeftDown,this.mouseRightPrev=this.mouseRightDown,this.mouseMiddlePrev=this.mouseMiddleDown,this.keysPressed=[]}IsKeyDown(t){return this.keysDown[t]}IsKeyPressed(t){for(let e of this.keysPressed)if(e===t)return!0;return!1}onKeyDown(t){let e=t.key.toLowerCase();1!=this.keysDown[e]&&(this.keysDown[e]=!0,this.keysPressed.push(e))}onKeyUp(t){let e=t.key.toLowerCase();this.keysDown[e]=!1}onKeyPressed(t){}setTouch(t){t.preventDefault(),this.mousePos=new Vector2_Vector2(t.touches[0].clientX,t.touches[0].clientY),this.mouseLeftDown=!0}setTouchUp(t){t.preventDefault(),this.mouseLeftDown=!1}setMouseScroll(t){this.mouseScrollBuffered=t.deltaY}onMouseMove(t){this.setMousePos(t.clientX,t.clientY)}setMousePos(t,e){this.mousePosBuffered=new Vector2_Vector2(t,e)}setMouseUp(t){let e=t.buttons;e<4&&(this.mouseMiddleDown=!1),e<2&&(this.mouseRightDown=!1),e<1&&(this.mouseLeftDown=!1,this.onMouseLeftUp&&this.onMouseLeftUp())}setMouseDown(t){t.preventDefault(),t.stopPropagation(),this.canvas.focus();let e=t.buttons;return e>=4&&(e-=4,this.mouseMiddleDown=!0),e>=2&&(e-=2,this.mouseRightDown=!0),e>=1&&(e-=1,this.mouseLeftDown=!0),!1}}class FpsCounter{constructor(){this.fps=0,this.updateEveryXTicks=100,this.elapsed=0,this.frames=0}static new(){return new FpsCounter}_update(t){this.frames+=1,this.elapsed+=t,this.elapsed>this.updateEveryXTicks&&(this.setFps(),this.elapsed=0,this.frames=0)}update(t){this._update(t.tick)}setFps(){this.fps=Math.round(this.frames/this.elapsed*1e3)}getFps(){return this.fps}}class Parameter{constructor(t,e,r=-1/0,i=1/0,s=.1){this.name=t,this.min=r,this.max=i,this.step=s,this.state=e,this.set(this.state)}static new(t,e,r=-1/0,i=1/0,s=.1){return new Parameter(t,e,r,i,s)}static newBoolean(t,e){return new Parameter(t,e?1:0,0,1,1)}get(){return this.state}getDomain(){return Domain_Domain.new(this.min,this.max)}set(t,e=!0){GeonMath.clamp(t,this.min,this.max);let r=t-this.min,i=Math.round(r/this.step),s=this.min+this.step*i;this.state=GeonMath.clamp(s,this.min,this.max),e&&this.onset()}getNPermutations(){return Math.min((this.max-this.min)/this.step+1)}setSlider(t){this.slider=t}setSliderAndText(t,e){this.slider=t,this.text=e}onset(){this.slider&&(this.slider.valueAsNumber=this.state),this.text&&(this.text.innerText=this.state.toString())}}class EnumParameter{constructor(t,e){this.p=t,this.values=e}static new(t,e,r){return new EnumParameter(new Parameter(t,e,0,r.length-1,1),r)}getName(){return this.values[this.get()]}get(){return this.p.get()}set(t){return this.p.set(t)}getNPermutations(){return this.p.getNPermutations()}setSlider(t){this.slider=t}setSliderAndText(t,e){this.slider=t,this.text=e}onset(){this.slider&&(this.slider.valueAsNumber=this.get()),this.text&&(this.text.innerText=this.getName())}}class UI{constructor(t){this.globalContext=t,this.currentContext=t}static new(t){return new UI(t)}toggleVisibility(){this.globalContext.hidden?this.show():this.hide()}clear(){let t=this.currentContext;for(;t.hasChildNodes();)t.removeChild(t.lastChild)}hide(){this.globalContext.hidden=!0}show(){this.globalContext.hidden=!1}addContext(t){this.currentContext=this.globalContext;let e=this.addDiv(t+" app-interface");this.currentContext=e}setContext(t){let e=this.globalContext.querySelector("."+t);this.currentContext=e}removeContext(t){this.setContext(t);for(let t=this.currentContext.childElementCount-1;t>=0;t-=1)this.currentContext.removeChild(this.currentContext.children.item(t));let e=this.currentContext;this.currentContext=this.globalContext,this.currentContext.removeChild(e)}addElement(t,e=""){let r=document.createElement(t);return r.className=e,this.currentContext.appendChild(r),r}addDiv(t,e=[]){let r=this.addElement("div",t);return e.forEach((t=>{r.appendChild(t)})),r}addBooleanParameter(t,e=(()=>{})){let r=this.addElement("input","checkbox");r.type="checkbox",r.addEventListener("change",(()=>{let i=r.checked;t.set(i?1:0),e(r.valueAsNumber),a.innerText=t.name})),r.checked=1==t.get();let i=this.addElement("label","check-container"),s=this.addElement("span","checkmark");i.appendChild(r),i.appendChild(s);let a=this.addElement("p","control-text");return a.innerText=t.name,this.addDiv("control",[a,i]),r}add3DParameter(t,e,r,i,s){Vector3_Vector3.zero();this.addParameter(new Parameter(t+"-x",i.x,e.x.t0,e.x.t1,r),(t=>{i.x=t,s&&s()})),this.addParameter(new Parameter(t+"-y",i.y,e.y.t0,e.y.t1,r),(t=>{i.y=t,s&&s()})),this.addParameter(new Parameter(t+"-z",i.z,e.z.t0,e.z.t1,r),(t=>{i.z=t,s&&s()}))}addParameter(t,e=(()=>{})){let r;r=t instanceof EnumParameter?t.p:t;let i=this.addRangeInput(r,e),s=this.addElement("p","control-text");s.innerText=r.name;let a=this.addElement("p","control-value");return a.innerText=t instanceof EnumParameter?t.getName():i.value,this.addDiv("control",[s,i,a]),t.setSliderAndText(i,a),i.oninput=()=>{r.set(i.valueAsNumber,!1),e(i.valueAsNumber),a.innerText=t instanceof EnumParameter?t.getName():i.value},i}addColorParameter(t,e,r=(()=>{})){console.log("default",e);let i=this.addElement("input","colorpicker");i.type="color",i.value=e,i.addEventListener("change",(()=>{i.checked;r(i.value)}));let s=this.addElement("p","control-text");return s.innerText=t,this.addDiv("control",[s,i]),i}addRangeInput(t,e=(()=>{})){let r=this.addElement("input","control-slider");return r.type="range",r.min=t.min.toString(),r.max=t.max.toString(),r.valueAsNumber=t.state,r.step=t.step.toString(),r}addText(t){this.addElement("p","ui-text").innerText=t}addButton(t,e){let r=this.addElement("button","control-button");r.innerText=t,r.addEventListener("click",e);let i=this.addElement("p","control-text");return this.addDiv("control",[i,r])}addDropdown(t,e){let r=t.values.length,i=this.addElement("select","enum-selector dropdown-select");for(let e=0;e<r;e++){let r=this.addElement("option","enum-item");r.innerText=t.values[e],i.appendChild(r)}return i.addEventListener("change",(r=>{let i=r.target.selectedIndex;t.set(i),e(i)})),this.addDiv("dropdown-dark",[i]),i}}class Core{constructor(t,e,r){this.fullscreen=!0,this.fpsInTitle=!0,this.canvas=t,this.gl=e,this.state=new InputState(t),this.fpsCounter=new FpsCounter,this.ui=new UI(r),this.apps=new Map}addApp(t){this.apps.set(t.name,t),this.activateApp(t)}removeApp(t){this.ui.removeContext(t),this.apps.delete(t)}activateApp(t){this.ui.addContext(t.name),this.ui.addText(t.description),t.ui(this.ui),t.start()}update(t){this.state.preUpdate(t),this.fpsCounter.update(this.state),this.apps.forEach((t=>{t.update(this.state)})),this.state.postUpdate()}draw(){const t=this.canvas,e=this.gl;this.fpsInTitle&&(document.title="fps: "+this.fpsCounter.getFps()),this.fullscreen&&(window.innerHeight==t.height&&window.innerWidth==t.width||(t.height=window.innerHeight,t.style.height=window.innerHeight.toString(),t.width=window.innerWidth,t.style.width=window.innerWidth.toString(),e.viewport(0,0,window.innerWidth,window.innerHeight))),this.gl.clearColor(0,0,0,0),this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),this.apps.forEach((t=>{t.draw(this.gl)}))}}class SwapApp extends App{constructor(t,e,r){super(t),this.currentAppIndex=-1,this.isuihidden=!1,this.core=e,this.possibleApps=r}getAppNames(){let t=[],e=this.possibleApps.length;for(let r=0;r<e;r++)t.push(this.possibleApps[r].name.replace("App",""));return t}ui(t){let e=this.getAppNames();this.param=EnumParameter.new("apps",0,e),t.addDropdown(this.param,(t=>{this.swap(t)}))}swapFromUrl(t,e){let r=t.substr(1),i=this.getAppNames();for(let t=0;t<i.length;t++)if(i[t].toLowerCase()===r)return void this.swap(t);console.log("no hash match, defaulting..."),this.swap(e)}swap(t){let e=this.possibleApps[t];if(this.currentAppIndex>-1){let t=this.possibleApps[this.currentAppIndex];console.log("removing",t.name),this.core.removeApp(t.name)}console.log("constructing",e.name),this.currentAppIndex=t;let r=new e(this.gl);location.hash="#"+e.name.replace("App","").toLowerCase(),this.core.addApp(r)}update(t){t.IsKeyPressed("m")&&this.core.ui.toggleVisibility()}}class IntCube{constructor(t,e,r,i=[]){this._height=t,this._width=e,this._depth=r;let s=this._width*this._height*this._depth;this.data=new Int32Array(s),i==[]||0==i.length?this.fill(0):this.setData(i)}size(){return this._width*this._height*this._depth}clone(){let t=new IntCube(this._height,this._width,this._depth);return t.data=this.data,t}setData(t){if(t.length!=this.size())throw"data.length does not match width * height "+t.length.toString();this.data.set(t)}fill(t){let e=this.size();for(let r=0;r<e;r++)this.data[r]=t}inRange(t,e,r){return!(t<0||e<0||r<0||t>this._width-1||e>this._height-1||r>this._depth-1)}getIndex(t,e,r){return t*(this._height*this._depth)+e*this._depth+r}getCoords(t){let e=Math.floor(t/(this._height*this._depth))%this._width,r=Math.floor(t/this._depth)%this._height,i=t%this._depth;return new Vector3_Vector3(e,r,i)}get(t,e,r){return this.data[this.getIndex(t,e,r)]}tryGet(t,e,r){return this.inRange(t,e,r)?this.data[this.getIndex(t,e,r)]:void 0}set(t,e,r,i){this.data[this.getIndex(t,e,r)]=i}trySet(t,e,r,i){this.inRange(t,e,r)&&(this.data[this.getIndex(t,e,r)]=i)}iter(t){for(let e=0;e<this.data.length;e++)t(this.data[e],e)}map(t){for(let e=0;e<this.data.length;e++)this.data[e]=t(this.data[e],e)}trueForAll(t){for(let e=0;e<this.data.length;e++)if(!t(this.data[e],e))return!1;return!0}}class IntMatrix_IntMatrix{constructor(t,e,r=[]){this._height=t,this._width=e,this.data=new Uint16Array(this._width*this._height),r==[]||0==r.length?this.fill(0):this.setData(r)}static new(t,e,r=[]){return new IntMatrix_IntMatrix(t,e,r)}static fromList(t,e){let r=t.length/e,i=new IntMatrix_IntMatrix(r,e);for(let e=0;e<t.length;e++)i.data[e]=t[e];return i}print(){let t=[];for(var e=0;e<this._height;e++){t.push("|");for(var r=0;r<this._width;r++){let i=this.get(e,r).toFixed(2);i=i.padStart(8," "),t.push(i),r<this._width-2&&t.push("  ")}t.push("  |\n")}console.log(t.join(""))}clone(){let t=new IntMatrix_IntMatrix(this._height,this._width);return t.data=this.data,t}setData(t){if(t.length!=this._height*this._width)throw"data.length does not match width * height "+t.length.toString();this.data.set(t)}count(){return this._height}getDimensions(){return[this._height,this._width]}inRange(t,e){return!(t<0||t>this._height-1||e<0||e>this._width-1)}fill(t){let e=this._height*this._width;for(let r=0;r<e;r++)this.data[r]=t}fillWith(t,e=this._width){let r=e;if(r>this._width)throw"values per entry is larger than this._width. This will spill over.";for(let e=0;e<this._height;e++)for(let i=0;i<r;i++)this.set(e,i,t[e*r+i])}get(t,e){return this.inRange(t,e)?this.data[t*this._width+e]:(console.warn("out of range!"),0)}getRow(t){let e=new Uint16Array(this._width);for(let r=0;r<this._width;r++)e[r]=this.get(t,r);return e}getColumn(t){let e=new Uint16Array(this._height);for(let r=0;r<this._height;r++){let i=r*this._width+t;e[r]=this.data[i]}return e}set(t,e,r){this.inRange(t,e)?this.data[t*this._width+e]=r:console.warn("out of range!")}setRow(t,e){for(let r=0;r<this._width;r++)this.set(t,r,e[r])}takeRows(t){console.log(this._height,this._width);const e=t.length;let r=new IntMatrix_IntMatrix(e,this._width);for(let i=0;i<e;i++){let e=t[i];r.setRow(i,this.getRow(e))}return r}getData(){return this.data}forEachValue(t){for(let e=0;e<this.data.length;e++)this.data[e]=t(this.data[e],e);return this}forEachRow(t){for(let e=0;e<this._height;e++){let r=this.getRow(e);t(r,e),this.setRow(e,r)}return this}trueForAll(t){for(let e=0;e<this.data.length;e++)if(!t(this.data[e],e))return!1;return!0}}function ToFloatMatrix(t){return t instanceof FloatMatrix_FloatMatrix?t:t instanceof MultiVector2_MultiVector2?t.toMatrixSlice():t instanceof MultiVector3_MultiVector3?t.slice():t[0]instanceof Vector2_Vector2?MultiVector2_MultiVector2.fromList(t).toMatrixSlice():MultiVector3_MultiVector3.fromList(t).slice()}class ShaderMesh_ShaderMesh{constructor(t,e,i,s,a){this._normKind=r.None,this.color=[1,1,1,1],this.linecolor=[1,1,1,1];this.mesh=Mesh_Mesh.newEmpty(t,s,3),this.norms=MultiVector3_MultiVector3.new(e),this.uvs=MultiVector2_MultiVector2.new(i),this.ambi=new Float32Array(t),this.texture=a,this.position=Matrix4_Matrix4.newIdentity()}static new(t,e,r,i,s){return new ShaderMesh_ShaderMesh(t,e,r,i,s)}static fromRectDoubleSided(t,e){let r=t.getCorners(),i=[];i.push(0,1,3,0,3,2,0,3,1,0,2,3);let s=new ShaderMesh_ShaderMesh(4,0,0,4,e);return s.setUvs(new Float32Array([0,0,0,1,1,0,1,1,0,0,1,0,0,1,1,1])),s.mesh.verts.fillFromList(r),s.mesh.links.setData(i),s}static fromRect(t,e){let r=t.getCorners(),i=[];i.push(...quadToTri([0,1,3,2]));let s=new ShaderMesh_ShaderMesh(4,0,0,2);return s.setUvs(new Float32Array([0,0,0,1,1,0,1,1])),s.mesh.verts.fillFromList(r),s.mesh.links.setData(i),s}static fromImage(t,e,r=!0,i=1,s=!0,a=!0){let o;o=r?Domain_Domain2.fromWH(-t.width/2*i,-t.height/2*i,t.width*i,t.height*i):Domain_Domain2.fromWH(0,0,t.width*i,t.height*i);let n,h=new Rectangle3(e,o);if(n=a?ShaderMesh_ShaderMesh.fromRectDoubleSided(h):ShaderMesh_ShaderMesh.fromRect(h),s){let e=HelpGl.getNearestCorrectTextureSize(t.width),r=HelpGl.getNearestCorrectTextureSize(t.height);if(e!==t.width||r!==t.height){t.width,t.height;t=t.buffer(e,r)}}return n.setTexture(t.toImageData()),n}static fromMesh(t){let e=new ShaderMesh_ShaderMesh(t.verts.count,0,0,t.links.count());return e.mesh=t,e}static fromData(t,e,r,i){let s=new ShaderMesh_ShaderMesh(t.length/3,e.length/3,r.length/2,i.length/3);return s.mesh.verts.slice().fillWith(t),s.mesh.links.fillWith(i),s.norms.slice().fillWith(e),s.uvs=MultiVector2_MultiVector2.fromData(r),s}static fromGraph(t){let e=t.toMesh(),i=ShaderMesh_ShaderMesh.fromMesh(e);return i.norms=MultiVector3_MultiVector3.fromList(t.allNorms()),i._normKind=r.Vertex,i}transform(t){for(let e=0;e<this.mesh.verts.count;e++){let r=this.mesh.verts.get(e),i=this.norms.get(e);this.mesh.verts.set(e,t.multiplyVector(r)),this.norms.set(e,t.multiplyVector(i))}}getAdjacentFaces(t){let e=[],r=this.mesh.links.count();for(let i=0;i<r;i++)this.mesh.links.getRow(i).find((e=>e==t))&&e.push(i);return e}getFaceVertices(t){return this.mesh.getVerticesOfFace(t)}getType(){return this.mesh.getType()}getNormalType(){return this._normKind}setTexture(t){this.texture=t}setUvs(t){t instanceof Float32Array?this.uvs=MultiVector2_MultiVector2.fromData(t):this.uvs=t}exportToObj(t){throw"todo"}calculateFaceNormals(){if(this.getType()!=e.Triangles)return console.error("can only calculate normals from triangular meshes"),void(this.norms=MultiVector3_MultiVector3.new(0));let t=this.mesh.OLDcalculateFaceNormals();this.norms=MultiVector3_MultiVector3.fromList(t),this._normKind=r.Face}calculateVertexNormals(){let t=this.mesh.OLDcalculateVertexNormals();this.norms=MultiVector3_MultiVector3.fromList(t),this._normKind=r.Vertex}calculateMultiVertexNormals(){this._normKind=r.MultiVertex,this.calculateFaceNormals();let t=this.mesh.verts.map(((e,r)=>{let i=this.getAdjacentFaces(r);t.set(r,this.norms.take(i).average())}));this.norms=t}}function ProcessObjFaceVertex(t){let e=[],r=t.split("/");if(1==r.length)e.push(parseInt(r[0])-1);else{if(3!=r.length)throw"invalid face found when processing";e.push(parseInt(r[0])-1)}return e}function ProcessObjFace(t){let e=[];if(4==t.length){let r=ProcessObjFaceVertex(t[0]),i=ProcessObjFaceVertex(t[1]),s=ProcessObjFaceVertex(t[2]),a=ProcessObjFaceVertex(t[3]);e.push(...r,...i,...s,...r,...s,...a)}else if(3==t.length){let r=ProcessObjFaceVertex(t[0]),i=ProcessObjFaceVertex(t[1]),s=ProcessObjFaceVertex(t[2]);e.push(...r,...i,...s)}return e}!function(t){t.imagedataFromTrueGreyscale=function imagedataFromTrueGreyscale(t){let e=new Uint8ClampedArray(t.width*t.height*4);for(let r=0;r<t.width;r++)for(let i=0;i<t.height;i++){let s=t.get(i,r)[0];0==r&&0==i&&console.log(t.get(100,100)),e[4*(r*t.width+i)]=s,e[4*(r*t.width+i)+1]=s,e[4*(r*t.width+i)+2]=s,e[4*(r*t.width+i)+3]=255}return new ImageData(e,t.width,t.height)},t.fakeGreyscale=function fakeGreyscale(t){if(4!=t.pixelSize)throw"please, only use this when pixelsize is 4";let e=new Image_GeonImage(t.width,t.height,4);for(let r=0;r<t.height;r++)for(let i=0;i<t.width;i++){let s=t.get(i,r),a=(s[0]+s[1]+s[2])/3;e.set(i,r,[a,a,a,255])}return e},t.trueGreyscale=function trueGreyscale(t){let e=new Image_GeonImage(t.width,t.height,1);for(let t=0;t<e.height;t++)for(let r=0;r<e.width;r++)e.data[1*(t*e.width+r)]=0;return e},t.sobelMD=function sobelMD(t){let e=Kernels.SobelLeft,r=Kernels.SobelUp,i=e.count()/2-.5,s=t.width-2*i,a=t.height-2*i,o=new Image_GeonImage(s,a,t.pixelSize),n=new Image_GeonImage(s,a,t.pixelSize);for(let s=i;s<t.width-i;s++)for(let a=i;a<t.height-i;a++){let h=t.getWithKernel(s,a,e,i),l=t.getWithKernel(s,a,r,i),d=h[0],c=l[0],u=Math.pow(d*d+c*c,.5),m=s-i,f=a-i;n.set(m,f,[(d+255)/2,(c+255)/2,255,255]),o.set(m,f,[u,u,u,255])}return[o,n]},t.thetaMap=function thetaMap(t){return t.forEachPixel(((t,e,r)=>{let i=Math.atan2(t[1]-128,t[0]-128);return i=(i+Math.PI)/(2*Math.PI),i*=255,[i,i,i,255]}))},t.clampGreyscale=function clampGreyscale(t,e){return t.forEachGreyscalePixel((t=>Math.round(t/255*e)%e))},t.cannyNonMaximumSuppression=function cannyNonMaximumSuppression(t,e){let magGet=(e,r)=>t.get(e,r)[0],r=new Image_GeonImage(t.width-2,t.height-2,t.pixelSize);for(let i=1;i<t.width-1;i++)for(let s=1;s<t.height-1;s++){const t=magGet(i,s),a=e.get(i,s)[0]%128;let o=t;a>=16&&a<48?(magGet(i+1,s+1)>t||magGet(i-1,s-1)>t)&&(o=0):a>=48&&a<80?(magGet(i,s-1)>t||magGet(i,s+1)>t)&&(o=0):a>=80&&a<112?(magGet(i+1,s-1)>t||magGet(i-1,s+1)>t)&&(o=0):(magGet(i-1,s)>t||magGet(i+1,s)>t)&&(o=0),r.set(i,s,[o,o,o,255])}return r},t.cannyThreshold=function cannyThreshold(t,e,r,i,s){return t.forEachGreyscalePixel((t=>t<e?0:t>=e&&t<r?i:s))},t.cannyHysteresis=function cannyHysteresis(t,e,r){let i=Image_GeonImage.new(t.width,t.height),condition=r=>t.getWithIndex(r)[0]==e,action=t=>{i.setWithIndex(t,[r,r,r,255])},s=t.width*t.height;for(let e=0;e<s;e++){if(t.getWithIndex(e)[0]!=r)continue;let i=t.indexToVec(e);t.bucketFillCustom(i,condition,action,t.getNbIndices8.bind(t))}return i},t.canny=function canny(e){let r=e.toGreyscale().applyKernel(Kernels.Gauss5),[i,s]=t.sobelMD(r),a=t.thetaMap(s);t.clampGreyscale(a,8)},t.bucketFill=function bucketFill(t,e,r,i=!1){return t.clone(),t.bucketFill(e,r,i),t}}(a||(a={}));class Image_GeonImage{constructor(t,e,r=4,i){this.width=t,this.height=e,this.pixelSize=r,this.data=i||new Uint8ClampedArray(this.width*this.height*this.pixelSize)}static new(t,e){return new Image_GeonImage(t,e)}static fromImageData(t){let e=new Image_GeonImage(t.width,t.height);return e.setData(t.data),e}toImageData(){if(1==this.pixelSize)return console.log("conferting to rgba..."),a.imagedataFromTrueGreyscale(this);if(4!=this.pixelSize)throw"pixelsize must be 4 for toImageData to work";return new ImageData(this.data,this.width,this.height)}setData(t){if(t.length!=this.height*this.width*this.pixelSize)throw"data.length does not match width * height ";this.data=t}clone(){let t=new Image_GeonImage(this.width,this.height,this.pixelSize);return t.setData(this.data),t}fill(t){for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++)this.set(r,e,t);return this}fillEvery(t){for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++)this.set(r,e,t());return this}forEach(t){for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++)this.set(r,e,t(r,e))}forEachPixel(t){let e=new Image_GeonImage(this.width,this.height,this.pixelSize);for(let r=0;r<this.width;r++)for(let i=0;i<this.height;i++){let s=this.get(r,i);s=t(s,r,i),e.set(r,i,s)}return e}forEachGreyscalePixel(t){let e=new Image_GeonImage(this.width,this.height,this.pixelSize);for(let r=0;r<this.width;r++)for(let i=0;i<this.height;i++){let s=this.get(r,i)[0];s=t(s,r,i),e.set(r,i,[s,s,s,255])}return e}includes(t,e){return t<this.width&&t>=0&&e<this.height&&e>=0}set(t,e,r){this.data[4*(e*this.width+t)]=r[0],this.data[4*(e*this.width+t)+1]=r[1],this.data[4*(e*this.width+t)+2]=r[2],this.data[4*(e*this.width+t)+3]=r[3]}get(t,e){return[this.data[4*(e*this.width+t)],this.data[4*(e*this.width+t)+1],this.data[4*(e*this.width+t)+2],this.data[4*(e*this.width+t)+3]]}getWithIndex(t){return[this.data[4*t],this.data[4*t+1],this.data[4*t+2],this.data[4*t+3]]}setWithIndex(t,e){this.data[4*t]=e[0],this.data[4*t+1]=e[1],this.data[4*t+2]=e[2],this.data[4*t+3]=e[3]}vecToIndex(t,e){return e*this.width+t}indexToVec(t){let e=Math.floor(t/this.width),r=t-e*this.width;return Vector2_Vector2.new(r,e)}getNbIndices(t){let e=new Array;return t>=this.width*this.height||(t%this.width!=0&&e.push(t-1),(t+1)%this.width!=0&&e.push(t+1),t-this.width>0&&e.push(t-this.width),t+this.width<this.width*this.height&&e.push(t+this.width)),e}getNbIndices8(t){let e=new Array,r=this.width*this.height;if(t>=r)return e;let i=t%this.width!=0,s=(t+1)%this.width!=0,a=t-this.width>0,o=t+this.width<r;return i&&e.push(t-1),s&&e.push(t+1),a&&e.push(t-this.width),o&&e.push(t+this.width),a&&i&&e.push(t-this.width-1),a&&s&&e.push(t-this.width+1),o&&i&&e.push(t+this.width-1),o&&s&&e.push(t+this.width+1),e}flipHor(){let t=new Image_GeonImage(this.width,this.height,this.pixelSize);for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++){let i=this.width-1-r;t.set(r,e,this.get(i,e))}return t}flipVer(){let t=new Image_GeonImage(this.width,this.height,this.pixelSize);for(let e=0;e<this.height;e++){let r=this.height-1-e;for(let i=0;i<this.width;i++)t.set(i,e,this.get(i,r))}return t}applyKernel(t){let e=t.count()/2-.5,r=new Image_GeonImage(this.width-2*e,this.height-2*e,this.pixelSize);for(let i=e;i<this.width-e;i++)for(let s=e;s<this.height-e;s++){let a=this.getWithKernel(i,s,t,e);r.set(i-e,s-e,a)}return r}getMinMax(){let t=1/0,e=0;for(let r=0;r<this.data.length;r++)this.data[r]<t?t=this.data[r]:this.data[r]>e&&(e=this.data[r]);return[t,e]}applyThreshold(t,e){return this.apply(((r,i)=>{let s=this.get(r,i);return s[0]<t?[0,0,0,0]:s[0]>e?[255,255,255,255]:s}))}apply(t){let e=new Image_GeonImage(this.width,this.height,this.pixelSize);for(let r=0;r<this.height;r++)for(let i=0;i<this.width;i++)e.set(i,r,t(i,r));return e}getWithKernel(t,e,r,i){let s=[0,0,0,255],[a,o]=r.getDimensions();for(let n=0;n<a;n++)for(let a=0;a<o;a++){let o=r.get(n,a),h=this.get(t+n-i,e+a-i);for(let t=0;t<3;t++)s[t]+=h[t]*o}return s}setAplha(t){for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++){let i=this.get(r,e);this.set(r,e,[i[0],i[1],i[2],t])}return this}scale(t,e){return this.resize(Math.round(this.width*t),Math.round(this.height*e))}resize(t,e){const r=new Image_GeonImage(t,e,this.pixelSize),i=this,s=1/r.width*i.width,a=1/r.height*i.height;for(let t=0;t<r.height;t++)for(let e=0;e<r.width;e++){let o=i.get(Math.round(e*s),Math.round(t*a));r.set(e,t,o)}return r}buffer(t,e){const r=new Image_GeonImage(t,e,this.pixelSize),i=this;for(let s=0;s<e;s++)for(let e=0;e<t;e++)i.includes(e,s)&&r.set(e,s,i.get(e,s));return r}trimWithDomain(t){const e=Math.round(t.x.t0),r=Math.round(t.x.t1),i=Math.round(t.y.t0),s=Math.round(t.y.t1);return this.trim(e,i,r,s)}trim(t,e,r,i){const s=r-t,a=i-e,o=new Image_GeonImage(s,a,this.pixelSize);for(let r=0;r<a;r++)for(let i=0;i<s;i++){let s=this.get(i+t,r+e);o.set(i,r,s)}return o}toGreyscale(){if(4!=this.pixelSize)throw"please, only use this when pixelsize is 4";let t=new Image_GeonImage(this.width,this.height,4);for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++){let i=this.get(r,e),s=(i[0]+i[1]+i[2])/3;t.set(r,e,[s,s,s,255])}return t}toRGBA(){return this}bucketFill(t,e,r=!1){let i,s=this.get(t.x,t.y),a=e.toInt();i=r?this.getNbIndices8.bind(this):this.getNbIndices.bind(this),this.bucketFillCustom(t,(t=>{let e=this.getWithIndex(t);return e[0]==s[0]&&e[1]==s[1]&&e[2]==s[2]&&e[3]==s[3]}),(t=>{this.setWithIndex(t,a)}),i)}bucketFillCustom(t,e,r,i){let s=new Set,a=new Array,o=this.vecToIndex(t.x,t.y);for(a.push(o),s.add(o);a.length>0;){let t=a.pop();r(t);for(let r of i(t))s.has(r)||(s.add(r),e(r)&&a.push(r))}}}function addDropFileEventListeners(t,e){console.log("setting up drag events..."),t.addEventListener("dragenter",(function(t){return t.preventDefault(),console.log("entering entering..."),!0}),!0),t.addEventListener("dragover",(function(t){return t.preventDefault(),console.log("over drag...."),!0}),!0),t.addEventListener("dragleave",(function(t){return t.preventDefault(),console.log("leaving drag...."),!0}),!0),t.addEventListener("drop",(function(t){t.stopPropagation(),t.preventDefault();var r=t.dataTransfer.files;return e(r),!0}),!0)}function loadImageFromSrc(t){return new Promise((function(e,r){let i=document.createElement("img");i.src=t,i.onload=()=>e(loadImageHelper2(i)),i.onerror=()=>r(new Error(`Script load error for ${i}`))}))}function loadImageHelper1(t){return new Promise((function(e,r){let i=document.createElement("img");i.src=t.result,i.onload=()=>e(loadImageHelper2(i)),i.onerror=()=>r(new Error(`Script load error for ${i}`))}))}function loadImageHelper2(t){var e;let r=document.createElement("canvas");r.width=t.width,r.height=t.height;let i=r.getContext("2d");i.drawImage(t,0,0);let s=i.getImageData(0,0,t.width,t.height);return null===(e=r.parentNode)||void 0===e||e.removeChild(r),s}class MultiLine{constructor(t,e){this.verts=ToFloatMatrix(t),this.links=null==e?getDefaultIndices(this.verts.height):e}static fromLines(t){let e=ToFloatMatrix(t);return new MultiLine(e)}static fromMesh(t,e=!1){let r=t.mesh,i=6*r.links.count(),s=new Uint16Array(i);for(let t=0;t<r.links.count();t++){let e=6*t;s[e]=r.links.get(t,0),s[e+1]=r.links.get(t,1),s[e+2]=r.links.get(t,1),s[e+3]=r.links.get(t,2),s[e+4]=r.links.get(t,2),s[e+5]=r.links.get(t,0)}return new MultiLine(e?t.uvs.toMatrixSlice():r.verts.slice(),s)}static fromGrid(t,e,r){let i=(e-1)*r/2,s=MultiVector3_MultiVector3.new(4*e);for(let t=0;t<e;t++){let e=r*t-i;s.set(2*t,new Vector3_Vector3(e,-i,0)),s.set(2*t+1,new Vector3_Vector3(e,i,0))}for(let t=0;t<e;t++){s.set(2*e+2*t,new Vector3_Vector3(-i,r*t-i,0)),s.set(2*e+2*t+1,new Vector3_Vector3(i,r*t-i,0))}return s.forEach((e=>t.pushToWorld(e))),new MultiLine(s.slice())}static fromPlane(t){let e=Const_Const.PLANE_RENDER_LINECOUNT,r=Const_Const.PLANE_RENDER_LINEDISTANCE,i=r/10,s=(e-1)*r/2,a=MultiVector3_MultiVector3.new(4*e+10);for(let t=0;t<e;t++){let e=r*t-s;a.set(2*t,new Vector3_Vector3(e,-s,0)),a.set(2*t+1,new Vector3_Vector3(e,s,0))}for(let t=0;t<e;t++){a.set(2*e+2*t,new Vector3_Vector3(-s,r*t-s,0)),a.set(2*e+2*t+1,new Vector3_Vector3(s,r*t-s,0))}let o=a.count-10;a.set(o,new Vector3_Vector3(s+i,-i,0)),a.set(o+1,new Vector3_Vector3(s+4*i,i,0));let n=a.count-8;a.set(n,new Vector3_Vector3(s+i,i,0)),a.set(n+1,new Vector3_Vector3(s+4*i,-i,0));let h=a.count-6;a.set(h,new Vector3_Vector3(0,s+2.5*i,0)),a.set(h+1,new Vector3_Vector3(i,s+4*i,0));let l=a.count-4;a.set(l,new Vector3_Vector3(i,s+i,0)),a.set(l+1,new Vector3_Vector3(-i,s+4*i,0));let d=a.count-2;return a.set(d,new Vector3_Vector3(0,0,0)),a.set(d+1,new Vector3_Vector3(0,0,r)),a.forEach((e=>t.pushToWorld(e))),new MultiLine(a.slice())}static fromCircle(t,e=Const_Const.CIRCLE_SEGMENTS){let r=e,i=MultiVector3_MultiVector3.new(r);for(let e=0;e<r;e++){let s=e/r*(2*Math.PI);i.set(e,t.plane.pushToWorld(new Vector3_Vector3(Math.cos(s)*t.radius,Math.sin(s)*t.radius,0)))}return new MultiLine(i.slice(),getPairIndices(r,!0))}static fromPolyline(t){return new MultiLine(t.verts,getPairIndices(t.verts.count,!1))}static fromBezier(t,e=Const_Const.BEZIER_SEGMENTS){let r=e+1,i=MultiVector3_MultiVector3.new(r);for(let s=0;s<r;s++){let r=s/e;i.set(s,t.pointAt(r))}return new MultiLine(i.slice(),getPairIndices(r,!1))}static fromCube(t){let e=MultiVector3_MultiVector3.fromList(t.getCorners());return new MultiLine(e)}static fromJoin(t){let e=0,r=0;for(let i of t)e+=i.links.length,r+=i.verts.count();let i=MultiVector3_MultiVector3.new(r),s=new Uint16Array(e),a=0,o=0;for(let e of t){for(let t=0;t<e.verts.count();t++)i.slice().setRow(a+t,e.verts.getRow(t));for(let t=0;t<e.links.length;t++)s[o+t]=e.links[t]+a;a+=e.verts.count(),o+=e.links.length}return new MultiLine(i,s)}}function getDefaultIndices(t){let e=new Uint16Array(t);for(let r=0;r<t;r++)e[r]=r;return e}function getPairIndices(t,e){let r=2*t;e||(r-=2);let i=new Uint16Array(r);for(let e=0;e<t;e++)i[2*e]=e,i[2*e+1]=(e+1)%t;return i}class Plane_Plane{constructor(t){this._matrix=t}static fromPN(t,e){let r=e.cross(Vector3_Vector3.unitX());r.length()<Const_Const.TOLERANCE&&(r=e.cross(Vector3_Vector3.unitY()));let i=r.normalize(),s=e.cross(i).normalize(),a=Plane_Plane.planeMatrixFromVecs(t,i,s,e);return new Plane_Plane(a)}static fromPVV(t,e,r){let i=e.clone().cross(r).normalize(),s=t.clone(),a=e.normalize(),o=e.clone().cross(i),n=Plane_Plane.planeMatrixFromVecs(s,a,o,i);return new Plane_Plane(n)}static from3pt(t,e,r){let i=e.clone().sub(t),s=r.clone().sub(t);return this.fromPVV(t,i,s)}static WorldXY(){return Plane_Plane.from3pt(Vector3_Vector3.zero(),Vector3_Vector3.unitX(),Vector3_Vector3.unitY())}static WorldYZ(){return Plane_Plane.from3pt(Vector3_Vector3.zero(),Vector3_Vector3.unitY(),Vector3_Vector3.unitZ())}static WorldXZ(){return Plane_Plane.from3pt(Vector3_Vector3.zero(),Vector3_Vector3.unitX(),Vector3_Vector3.unitZ())}static fromLeastSquares(t){let e=t.mean(),r=Statistics_Stat.cov(t.slice()),[i,s]=Statistics_Stat.eig(r);console.log(i);let a=Vector3_Vector3.fromArray(s.getColumn(0)),o=Vector3_Vector3.fromArray(s.getColumn(1));return Plane_Plane.fromPVV(e,a,o)}static fromXYLeastSquares(t){let e=t.mean();return Plane_Plane.WorldXY().transform(Matrix4_Matrix4.newTranslation(e.x,e.y,e.z))}static planeMatrixFromVecs(t,e,r,i){return new Matrix4_Matrix4([e.x,e.y,e.z,0,r.x,r.y,r.z,0,i.x,i.y,i.z,0,t.x,t.y,t.z,1])}get ihat(){return Vector3_Vector3.fromArray(this._matrix.getRow(0))}get jhat(){return Vector3_Vector3.fromArray(this._matrix.getRow(1))}get khat(){return Vector3_Vector3.fromArray(this._matrix.getRow(2))}get center(){return Vector3_Vector3.fromArray(this._matrix.getRow(3))}get matrix(){return this._matrix.clone()}get normal(){return this.khat}get d(){return this.closestPoint(Vector3_Vector3.zero())[1]}set ihat(t){this._matrix.setRow(0,[t.x,t.y,t.z,0])}set jhat(t){this._matrix.setRow(1,[t.x,t.y,t.z,0])}set khat(t){this._matrix.setRow(2,[t.x,t.y,t.z,0])}set center(t){this._matrix.setRow(3,[t.x,t.y,t.z,1])}set matrix(t){this._matrix=t}get inverse(){return this._matrix.inverse()}distanceTo(t){return this.khat.dot(t)+this.d}setPosition(t){this.center=t}setNormal(t){this.khat=t}clone(){return new Plane_Plane(this._matrix.clone())}transform(t){return this._matrix=this._matrix.multiply(t),this}moveTo(t){return this.center=t,this}pullToPlane(t){return this.inverse.multiplyVector(t)}pushToWorld(t){return this.matrix.multiplyVector(t)}closestPoint(t){let e=this.pullToPlane(t),r=e.z;return e.z=0,[this.pushToWorld(e),r]}rotateVector(t,e){let r=this.pullToPlane(t);return r=Matrix4_Matrix4.newAxisRotation(this.normal,e).multiplyVector(r),this.pushToWorld(r)}}class Circle3{constructor(t,e){this.plane=t,this.radius=e}static new(t,e){return new Circle3(t,e)}static newPlanar(t,e){return new Circle3(Plane_Plane.WorldXY().moveTo(t),e)}static fromCircle2(t,e=Plane_Plane.WorldXY()){let r=e.pushToWorld(Vector3_Vector3.from2d(t.center));return(e=e.clone()).center=r,new Circle3(e,t.radius)}buffer(){return MultiLine.fromCircle(this)}includes(t){let[e,r]=this.plane.closestPoint(t);r/=3;let i=this.plane.center.clone().disTo(e)-this.radius;return Math.pow(r,2)+Math.pow(i,2)<Const_Const.TOL_SQUARED}}class Cube{constructor(t,e){this.plane=t,this.domain=e}static new(t,e){return new Cube(t,e)}static fromRadius(t,e){return new Cube(Plane_Plane.WorldXY().moveTo(t),Domain3.fromRadius(e))}getCorners(){return this.domain.corners(this.plane.matrix)}}class Domain_Domain{constructor(t=0,e=1){this.t0=t,this.t1=e}static new(t=0,e=1){return new Domain_Domain(t,e)}static fromRadius(t){return new Domain_Domain(-t,t)}static fromInclude(t){let e=Number.MAX_VALUE,r=Number.MIN_VALUE;for(let i=0;i<t.length;i++)t[i]<e&&(e=t[i]),t[i]>r&&(r=t[i]);return new Domain_Domain(e,r)}offset(t,e){return this.t0+=t,this.t1+=e,this}includes(t){return t>=this.t0&&t<=this.t1}includesEx(t){return t>=this.t0&&t<this.t1}size(){return this.t1-this.t0}normalize(t){return(t-this.t0)/this.size()}elevate(t){return t*this.size()+this.t0}lerp(t){return this.elevate(t)}remap(t,e=new Domain_Domain){let r=this.normalize(t);return e.elevate(r)}spawn(t){let e=new Float32Array(t),r=this.size()/(t-1);for(let i=0;i<t;i++)e[i]=this.t0+i*r;return e}*iter(t){let e=this.size()/(t-1);for(let r=0;r<t;r++){let t=this.t0+r*e;yield t}}*iterStep(t){for(let e=this.t0;e<=this.t1;e+=t)yield e}comform(t){return t<this.t0?this.t0:t>this.t1?this.t1:t}}class Domain_Domain2{constructor(t=new Domain_Domain,e=new Domain_Domain){this.x=t,this.y=e}static fromRadii(t,e){return new Domain_Domain2(Domain_Domain.fromRadius(t),Domain_Domain.fromRadius(e))}static fromRadius(t){return new Domain_Domain2(Domain_Domain.fromRadius(t),Domain_Domain.fromRadius(t))}static fromBounds(t,e,r,i){return new Domain_Domain2(new Domain_Domain(t,e),new Domain_Domain(r,i))}static fromWH(t,e,r,i){return new Domain_Domain2(new Domain_Domain(t,t+r),new Domain_Domain(e,e+i))}static fromInclude(t){let e=t.toMatrixSlice();return new Domain_Domain2(Domain_Domain.fromInclude(e.getColumn(0)),Domain_Domain.fromInclude(e.getColumn(1)))}offset(t){let e=t;if(4!=e.length)throw"need 4 values";return this.x.offset(e[0],e[1]),this.y.offset(e[2],e[3]),this}includes(t){return this.x.includes(t.x)&&this.y.includes(t.y)}includesEx(t){return this.x.includesEx(t.x)&&this.y.includesEx(t.y)}size(){return new Vector2_Vector2(this.x.size(),this.y.size())}normalize(t){return new Vector2_Vector2(this.x.normalize(t.x),this.y.normalize(t.y))}elevate(t){return new Vector2_Vector2(this.x.elevate(t.x),this.y.elevate(t.y))}remap(t,e=new Domain_Domain2){let r=this.normalize(t);return e.elevate(r)}corners(){let t=[];for(let e of[this.x.t0,this.x.t1])for(let r of[this.y.t0,this.y.t1])t.push(new Vector2_Vector2(e,r));return t}spawn(t,e){let r=MultiVector2_MultiVector2.new(t*e),i=0,s=this.y.spawn(e),a=this.x.spawn(t);for(const t of s)for(const e of a)r.setXY(i,e,t),i++;return r}populate(t,e){let r=MultiVector2_MultiVector2.new(t);for(let t=0;t<r.count;t++)r.set(t,this.elevate(Vector2_Vector2.fromRandom(e)));return r}}class Domain3{constructor(t=new Domain_Domain,e=new Domain_Domain,r=new Domain_Domain){this.x=t,this.y=e,this.z=r}static fromBounds(t,e,r,i,s,a){return new Domain3(new Domain_Domain(t,e),new Domain_Domain(r,i),new Domain_Domain(s,a))}static fromRadius(t){return new Domain3(Domain_Domain.fromRadius(t),Domain_Domain.fromRadius(t),Domain_Domain.fromRadius(t))}static fromRadii(t,e,r){return new Domain3(Domain_Domain.fromRadius(t),Domain_Domain.fromRadius(e),Domain_Domain.fromRadius(r))}static fromInclude(t){return new Domain3(Domain_Domain.fromInclude(t.slice().getColumn(0)),Domain_Domain.fromInclude(t.slice().getColumn(1)),Domain_Domain.fromInclude(t.slice().getColumn(2)))}offset(t){let e=t;if(6!=e.length)throw"need 6 values";return this.x.offset(e[0],e[1]),this.y.offset(e[2],e[3]),this.z.offset(e[4],e[5]),this}includes(t){return this.x.includes(t.x)&&this.y.includes(t.y)&&this.z.includes(t.z)}size(){return new Vector3_Vector3(this.x.size(),this.y.size(),this.z.size())}normalize(t){return new Vector3_Vector3(this.x.normalize(t.x),this.y.normalize(t.y),this.z.normalize(t.z))}elevate(t){return new Vector3_Vector3(this.x.elevate(t.x),this.y.elevate(t.y),this.z.elevate(t.z))}remap(t,e=new Domain3){let r=this.normalize(t);return e.elevate(r)}remapAll(t,e=new Domain3){let r=MultiVector3_MultiVector3.new(t.count);for(let i=0;i<t.count;i++){let s=this.normalize(t.get(i));r.set(i,e.elevate(s))}return r}corners(t){let e=[];for(let r of[this.x.t0,this.x.t1])for(let i of[this.y.t0,this.y.t1])for(let s of[this.z.t0,this.z.t1])e.push(t.multiplyVector(new Vector3_Vector3(r,i,s)));return e}spawn(t,e,r){let i=MultiVector3_MultiVector3.new(t*e),s=0,a=this.z.spawn(r),o=this.y.spawn(e),n=this.x.spawn(t);for(const t of a)for(const e of o)for(const r of n)i.setXYZ(s,r,e,t),s++;return i}populate(t,e){let r=MultiVector3_MultiVector3.new(t);for(let t=0;t<r.count;t++)r.set(t,this.elevate(Vector3_Vector3.fromRandom(e)));return r}}class Matrix3_Matrix3 extends FloatMatrix_FloatMatrix{constructor(t=[]){super(3,3,t)}static new(t=[1,0,0,0,1,0,0,0,1]){return new Matrix3_Matrix3(t)}static newIdentity(){return new Matrix3_Matrix3([1,0,0,0,1,0,0,0,1])}static newProjection(t,e){return new Matrix3_Matrix3([2/t,0,0,0,-2/e,0,-1,1,1])}static newTranslation(t,e){return new Matrix3_Matrix3([1,0,0,0,1,0,t,e,1])}static newRotation(t){var e=Math.cos(t),r=Math.sin(t);return new Matrix3_Matrix3([e,-r,0,r,e,0,0,0,1])}static newScalar(t,e){return new Matrix3_Matrix3([t,0,0,0,e,0,0,0,1])}toMat4(){let t=this.data;return new Matrix4_Matrix4([t[0],t[1],0,t[2],t[3],t[4],0,t[5],0,0,1,0,t[6],t[7],0,t[8]])}project(t,e){return this.multiply(Matrix3_Matrix3.newProjection(t,e))}translateN(t,e){return this.multiply(Matrix3_Matrix3.newTranslation(t,e))}translate(t){return this.multiply(Matrix3_Matrix3.newTranslation(t.x,t.y))}rotate(t){return this.multiply(Matrix3_Matrix3.newRotation(t))}scale(t,e){return this.multiply(Matrix3_Matrix3.newScalar(t,e))}multiply(t){let e=this.data,r=t.data;var i=e[0],s=e[1],a=e[2],o=e[3],n=e[4],h=e[5],l=e[6],d=e[7],c=e[8],u=r[0],m=r[1],f=r[2],g=r[3],p=r[4],w=r[5],x=r[6],_=r[7],M=r[8];return new Matrix3_Matrix3([u*i+m*o+f*l,u*s+m*n+f*d,u*a+m*h+f*c,g*i+p*o+w*l,g*s+p*n+w*d,g*a+p*h+w*c,x*i+_*o+M*l,x*s+_*n+M*d,x*a+_*h+M*c])}transformVector(t){let e=this.data,r=t.x,i=t.y,s=r*e[2]+i*e[5]+e[8];return t.x=(r*e[0]+i*e[3]+e[6])/s,t.y=(r*e[1]+i*e[4]+e[7])/s,t}inverse(){let t=this.data;var e=t[4]*t[8]-t[5]*t[7],r=t[1]*t[8]-t[2]*t[7],i=t[1]*t[5]-t[2]*t[4],s=1/(t[0]*e-t[3]*r+t[6]*i);return this.setData([s*e,-s*r,s*i,-s*(t[3]*t[8]-t[5]*t[6]),s*(t[0]*t[8]-t[2]*t[6]),-s*(t[0]*t[5]-t[2]*t[3]),s*(t[3]*t[7]-t[4]*t[6]),-s*(t[0]*t[7]-t[1]*t[6]),s*(t[0]*t[4]-t[1]*t[3])]),this}}class Rectangle3{constructor(t,e){this.plane=t,this.domain=e}static new(t,e){return new Rectangle3(t,e)}getCorners(){return this.domain.corners().map((t=>this.plane.pushToWorld(Vector3_Vector3.from2d(t))))}}class Curve extends Geometry{constructor(t,e,r=Domain_Domain.new(0,1)){super(),this.verts=t,this.degree=e,this.domain=r}toPolyline(t){let e=t+1,r=MultiVector3_MultiVector3.new(e);for(let i=0;i<e;i++){let e=i/t;r.set(i,this.pointAt(this.domain.elevate(e)))}return Polyline.new(r)}buffer(t=Const_Const.BEZIER_SEGMENTS){return MultiLine.fromPolyline(this.toPolyline(t))}}class Polynomial_Polynomial{static bernstein(t,e,r){return this.getBicoef(r,e)*Math.pow(t,e)*Math.pow(1-t,r-e)}static coxdeboor(t,e,r,i){if(0==r)return t>=i[e]&&t<i[e+1]?1:0;let s=i[e+r]-i[e],a=i[e+r+1]-i[e+1],o=(t-i[e])/s,n=(i[e+r+1]-t)/a;return o*this.coxdeboor(t,e,r-1,i)+n*this.coxdeboor(t,e+1,r-1,i)}static coxdeboorTriangle(t,e,r,i){let s=i.length,a=new Float32Array(GeonMath.stack(s)),o=Util.iterateTriangle,n=s-1;for(let r=0;r<=n;r++){let s=o(n,r);(i[e]<=t||t<i[e+1])&&(a[s]=1),a[s]=0}for(let n=s-2;n>-1;n-=1)for(let s=0;s<=n;s++){let h=o(n,s),l=a[o(n+1,s)],d=a[o(n+1,s+1)],c=(t-i[e])/(i[e+r]-i[e]),u=(i[e+r+1]-t)/(i[e+r+1]-i[e+1]);a[h]=c*l+u*d}return a}static getBicoef(t,e){return this._pascal[t][e]}static calcBicoef(t,e){let r=GeonMath.factorial;return r(t)/(r(e)*r(t-e))}static calcPascal(t){let e=Array(t);for(let r=0;r<t;r++){e[r]=Array(r+1);for(let t=0;t<r+1;t++)e[r][t]=this.calcBicoef(r,t)}return e}static decastejau(t,e){let r=t.count,i=MultiVector3_MultiVector3.new(GeonMath.stack(r)),s=Util.iterateTriangle,a=r-1,o=0;for(let e=0;e<=a;e++){let r=s(a,e);i.set(r,t.get(o)),o++}for(let t=r-2;t>-1;t-=1)for(let r=0;r<=t;r++){let a=s(t,r),o=i.get(s(t+1,r)),n=i.get(s(t+1,r+1)).scale(e).add(o.scale(1-e));i.set(a,n)}return i}static decastejauExtrapolateEnd(t,e){let r=t.count,i=MultiVector3_MultiVector3.new(GeonMath.stack(r)),s=Util.iterateTriangle,a=0;for(let e=r-1;e>-1;e-=1){let r=s(e,0);i.set(r,t.get(a)),a++}for(let t=1;t<r;t++)for(let r=1;r<=t;r++){let a=s(t-1,r-1),o=s(t,r-1),n=s(t,r),h=i.get(o).lerp(i.get(a),1+e);i.set(n,h)}return i}static decastejauExtrapolateStart(t,e){let r=t.count,i=MultiVector3_MultiVector3.new(GeonMath.stack(r)),s=Util.iterateTriangle,a=r-1,o=0;for(let e=0;e<=a;e++){let r=s(a,e);i.set(r,t.get(o)),o++}for(let t=r-2;t>-1;t-=1)for(let r=0;r<=t;r++){let a=s(t,r),o=i.get(s(t+1,r)),n=i.get(s(t+1,r+1)).scale(e).add(o.scale(1-e));i.set(a,n)}return i}}Polynomial_Polynomial.MAX_DEGREE=15,Polynomial_Polynomial._pascal=Polynomial_Polynomial.calcPascal(Polynomial_Polynomial.MAX_DEGREE);class Bezier extends Curve{constructor(t,e){super(t,e)}static fromList(t){return this.new(MultiVector3_MultiVector3.fromList(t))}static new(t){return new Bezier(t,t.count-1)}static equalizeDegrees(t){let e=0;for(let r of t)r.degree>e&&(e=r.degree);for(let r=0;r<t.length;r++){let i=0;for(;t[r].degree<e&&i<100;)t[r]=t[r].increaseDegree(),i++}return t}hodograph(){let t=MultiVector3_MultiVector3.new(this.verts.count-1);for(let e=0;e<this.verts.count-1;e++)t.set(e,this.verts.get(e+1).subbed(this.verts.get(e)));return Bezier.new(t)}increaseDegree(){let t=this.degree,e=MultiVector3_MultiVector3.new(t+2);e.set(0,this.verts.get(0)),e.set(e.count-1,this.verts.get(this.verts.count-1));for(let r=1;r<t+1;r++){let i=this.verts.get(r-1),s=this.verts.get(r),a=r/(t+1),o=1-a,n=i.scale(a).add(s.scale(o));e.set(r,n)}return Bezier.new(e)}splitAt(t){let e=this.degree+1,r=Polynomial_Polynomial.decastejau(this.verts,t),i=Util.getTriangleLeft(r,e),s=Util.getTriangleRight(r,e);return[Bezier.new(i),Bezier.new(s)]}extend(t){let e=Polynomial_Polynomial.decastejauExtrapolateEnd(this.verts,t),r=this.verts.count,i=Util.getTriangleBase(e,r);this.verts=i}getExtention(t){let e=Polynomial_Polynomial.decastejauExtrapolateEnd(this.verts,t),r=this.verts.count,i=Util.getTriangleRight(e,r);return Bezier.new(i)}pointAt(t){let e=Vector3_Vector3.zero();for(let r=0;r<this.degree+1;r++)e.add(this.verts.get(r).scaled(Polynomial_Polynomial.bernstein(t,r,this.degree)));return e}tangentAt(t){return this.hodograph().pointAt(t).normalize()}normalAt(t,e=Vector3_Vector3.unitZ()){return this.tangentAt(t).cross(e)}ApproxClosestPoint(t,e=5,r=Const_Const.TOLERANCE){let disToParam=e=>t.disToSquared(this.pointAt(e)),i=e*this.verts.count,s=1/0,a=-1;for(let t=1;t<i+1;t++){let e=disToParam(t/i);e<s&&(s=e,a=t)}let o=Math.max((a-1)/i,0),n=Math.min((a+1)/i,1),h=Domain_Domain.new(o,n);return Util.lowestScore(h,disToParam,r)}uglyClosestPoint(t,e=4){let r=[],i=[],addSuspect=t=>{r.push(this.pointAt(t)),i.push(t)};addSuspect(this.domain.t0),addSuspect(this.domain.t1);let s=1/0,a=-1;for(let e=0;e<r.length;e++){let i=t.disToSquared(r[e]);i<s&&(s=i,a=e)}return[r[a],i[a]]}pointAtApproxLength(t){this.toPolyline(100).tAtLength(t)}getLazyApprox(){return this._approx||this.bufferApprox(),this._approx}bufferApprox(){this._approx=this.toPolyline(100)}clone(){return Bezier.new(this.verts.clone())}transform(t){return this._approx=void 0,this.verts.transform(t),this}transformed(t){return this._approx=void 0,Bezier.new(this.verts.transformed(t))}}class Polyline extends Curve{constructor(t){super(t,1),this.bufferLengths()}static fromList(t){return this.new(MultiVector3_MultiVector3.fromList(t))}static new(t){return new Polyline(t)}fillet(t){let e=this.verts.count+(this.verts.count-2),r=MultiVector3_MultiVector3.new(e);for(let t=0;t<e;t++){let e=Math.ceil(t/2);r.set(t,this.verts.get(e))}return Polyline.new(r)}pointAt(t){let e=t*(this.verts.count-1),r=Math.floor(e),i=Math.ceil(e);return Vector3_Vector3.fromLerp(this.verts.get(r),this.verts.get(i),e-r)}lengthAt(t){let e=this.getLazyLengths();return GeonMath.sample(e,t)}tAtLength(t){let e=this.getLazyLengths(),[r,i]=GeonMath.between(e,t),[s,a]=[e[r],e[i]],o=GeonMath.fraction(t,s,a);return GeonMath.lerp(e[r],e[i],o)}length(){return this.getLazyLengths()[this.verts.count-1]}getLazyLengths(){return this._lengths||this.bufferLengths(),this._lengths}bufferLengths(){let t=this.verts.count,e=Array(t),r=0;e[0]=r;for(let i=0;i<t-1;i++)r+=this.verts.get(i).disTo(this.verts.get(i+1)),e[i+1]=r;this._lengths=e}buffer(){return MultiLine.fromPolyline(this)}clone(){return Polyline.new(this.verts.clone())}transform(t){return this._lengths=void 0,this.verts.transform(t),this}transformed(t){return this._lengths=void 0,Polyline.new(this.verts.transformed(t))}}class Spline extends Curve{constructor(t,e,r,i){super(t,e,i),this.knots=r}static fromList(t,e){return this.new(MultiVector3_MultiVector3.fromList(t),e)}static calcKnots(t,e){let r=new Float32Array(t+e+1);for(let t=0;t<e+1;t++)r[t]=0-1e-4*(e-t);let i=r.length-e-e-1,s=1;for(let t=e+1;t<r.length-e-1;t++)r[t]=s/i,s++;s=0;for(let t=r.length-e-1;t<r.length;t++)r[t]=1+1e-4*s,s++;return r}static new(t,e){let r=Domain_Domain.new(0,1),i=t.count;if(i<e+1)return;let s=this.calcKnots(i,e);return new Spline(t,e,s,r)}extend(t){let e=this.degree+1,r=new Array(e);for(let t=0;t<e;t++){let i=this.verts.count-e+t;r[t]=this.verts.get(i)}let i=Bezier.fromList(r);i.extend(t);for(let t=0;t<e;t++){let r=this.verts.count-e+t;this.verts.set(r,i.verts.get(t))}return this}getExtention(t){let e=this.degree+1,r=new Array(e);for(let t=0;t<e;t++)r[t]=this.verts.get(this.verts.count-e+t);return Bezier.fromList(r).getExtention(t)}pointAt(t){let e=Vector3_Vector3.zero();for(let r=0;r<this.verts.count;r++){let i=Polynomial_Polynomial.coxdeboor(t,r,this.degree,this.knots);e.add(this.verts.get(r).scaled(i))}return e}clone(){throw new Error("Method not implemented.")}transform(t){throw new Error("Method not implemented.")}transformed(t){throw new Error("Method not implemented.")}}class Surface extends Geometry{}class BiSurface extends Surface{buffer(t=100,e=100){return Mesh_Mesh.fromBiSurface(this,t,e)}}class BezierSquare extends BiSurface{constructor(t,e,r){super(),this.verts=t,this.degreeU=e,this.degreeV=r}static new(t,e,r){if(t.count==(e+1)*(r+1))return new BezierSquare(t,e,r);console.warn(`BiSurface Not Created. ${t.count} vertices \n                does not match ${e} degreeU times ${r} degreeV surface...`)}static fromFourEdge(t,e,r,i){}static fromLoft(t){let e=(t=Bezier.equalizeDegrees(t))[0].degree,r=t.length-1,i=e+1*t.length,s=MultiVector3_MultiVector3.new(i),a=0;for(let e=0;e<t.length;e++)for(let r=0;r<t[e].verts.count;r++)s.set(a,t[e].verts.get(r)),a++;return BezierSquare.new(s,r,e)}pointAt(t,e){let r=Vector3_Vector3.zero();for(let i=0;i<this.degreeU+1;i++)for(let s=0;s<this.degreeV+1;s++){let a=Polynomial_Polynomial.bernstein(t,i,this.degreeU)*Polynomial_Polynomial.bernstein(e,s,this.degreeV),o=i*(this.degreeV+1)+s;r.add(this.verts.get(o).scaled(a))}return r}pointAtUV(t){return this.pointAt(t.x,t.y)}approxClosestPoint(t,e=2,r=Const_Const.TOLERANCE){let disToParams=(e,r)=>t.disToSquared(this.pointAt(e,r)),i=e*(this.degreeU+1),s=e*(this.degreeV+1),a=1/0,o=-1,n=-1;for(let t=1;t<i+1;t++){let e=t/i;for(let r=1;r<i+1;r++){let i=disToParams(e,r/s);i<a&&(a=i,o=t,n=r)}}let h=Domain_Domain2.fromBounds(Math.max((o-1)/i,0),Math.min((o+1)/i,1),Math.max((n-1)/s,0),Math.min((n+1)/s,1));return Util.lowestScoreSquared(h,disToParams,r)}clone(){return BezierSquare.new(this.verts.clone(),this.degreeU,this.degreeV)}transform(t){return this._approx=void 0,this.verts.transform(t),this}transformed(t){return this._approx=void 0,BezierSquare.new(this.verts.transformed(t),this.degreeU,this.degreeV)}}class Loft extends BiSurface{constructor(t){super(),this.curves=t}static new(t){return new Loft(Bezier.equalizeDegrees(t))}getTransposedCurves(){let t=[],e=this.curves[0].verts.count,r=this.curves.length;for(let i=0;i<e;i++){let e=MultiVector3_MultiVector3.new(this.curves.length);for(let t=0;t<r;t++)e.set(t,this.curves[t].verts.get(i));t.push(Bezier.new(e))}return t}pointAt(t,e){return this.isoCurveV(t).pointAt(e)}isoCurveV(t){return Loft.isoCurve(this.curves,t)}isoCurveU(t){let e=this.getTransposedCurves();return Loft.isoCurve(e,t)}static isoCurve(t,e){let r=MultiVector3_MultiVector3.new(t.length);for(let i=0;i<t.length;i++)r.set(i,t[i].pointAt(e));return Bezier.new(r)}bufferExact(){let t=[];for(let e of this.curves)e instanceof Polyline&&t.push(e.verts.count-1);let e=t.reduce(((t,e)=>t*e));return Mesh_Mesh.fromBiSurface(this,e,e)}clone(){let t=new Array;for(let e=0;e<this.curves.length;e++)t[e]=this.curves[e].clone();return Loft.new(t)}transform(t){for(let e of this.curves)e.transform(t);return this}transformed(t){let e=new Array;for(let r=0;r<this.curves.length;r++)e[r]=this.curves[r].transformed(t);return Loft.new(e)}}class HashTable_HashTable{constructor(){this.data=new Map}stringify(t){return t.toString()}set(t,e){return this.data.set(this.stringify(t),e)}has(t){return this.data.has(this.stringify(t))}get(t){return this.data.get(this.stringify(t))}}class Graph{constructor(){this.verts=[],this.edges=[]}static new(){return new Graph}static fromMesh(t){let r=Graph.new(),i=t.OLDcalculateVertexNormals();t.verts.forEach(((t,e)=>{r.addVert(t,i[e])}));let s=t.getType();if(s==e.Invalid||s==e.Points)return r;new HashTable_HashTable;let a=t.links._width;return t.links.forEachRow(((t,e)=>{for(let e=0;e<a;e++){let i=(e+1)%a,s=t[e],o=t[i];-1!=s&&-1!=o&&r.addEdgeIfNew(s,o)}})),r}clone(){throw new Error("not yet implemented...")}transform(t){for(let e=0;e<this.verts.length;e++){let r=this.verts[e];r.pos=t.multiplyVector(r.pos)}}print(){console.log("graph"),console.log("--------"),console.log(`${this.verts.length} verts: `);for(let t=0;t<this.verts.length;t++){let e=this.verts[t];console.log(`v(${t}) | edge: ${e.edge}, data: ${e.pos.toString()} normal: ${e.normal.toString()}`)}console.log("--------"),console.log(`${this.edges.length} edges:  `);for(let t=0;t<this.edges.length;t++){let e=this.edges[t];console.log(`e(${t}) | vert: ${e.vert}, twin: ${e.twin}, next: ${e.next}, dead ${e.dead}`)}console.log("--------")}toMesh(){return Mesh_Mesh.fromGraph(this)}toLines(){return Mesh_Mesh.newLines(this.allVertPositions(),this.allUniqueEdgeVerts())}toShaderMesh(){return ShaderMesh_ShaderMesh.fromGraph(this)}allNorms(){let t=[];return this.verts.forEach((e=>{t.push(e.normal)})),t}allVertPositions(){let t=[];return this.verts.forEach((e=>{t.push(e.pos)})),t}allUniqueEdges(){let t=[],e=this.edges.length/2;for(let r=0;r<e;r++){let e=2*r,i=2*r+1,s=this.getEdge(e),a=this.getEdge(i);s.dead||a.dead||t.push(e)}return t}allUniqueEdgeVerts(){let t=[],e=this.edges.length/2;for(let r=0;r<e;r++){let e=2*r,i=2*r+1,s=this.getEdge(e),a=this.getEdge(i);s.dead||a.dead||t.push(s.vert,a.vert)}return t}allEdgeVerts(){let t=[];return this.edges.forEach(((e,r)=>{if(e.dead)return;let i=e.vert,s=this.getEdge(e.twin).vert;i<s&&(t.push(i),t.push(s))})),t}allVertLoops(){throw"TODO"}allVertLoopsAsInts(){let t=[],e=new Set;this.edges.forEach(((t,r)=>{t.dead||e.add(r)}));let r=0;const i=this.edges.length;for(;e.size>0;){let s=[],a=e.entries().next().value[0],o=a;do{if(r>i)throw"topology is corrupt!";r+=1;let t=this.getEdge(a);e.delete(a),s.push(t.vert),a=t.next}while(a!=o);t.push(s)}return t}getLoop(t){let e=[],r=0;const i=this.edges.length;let s=t;do{if(r>i)throw"topology is corrupt!";r+=1;let s=this.getEdge(t);e.push(t),t=s.next}while(t!=s);return e}getVertexPos(t){if(t<0||t>=this.verts.length)throw"out of range";return this.verts[t].pos}getVertexNormal(t){if(t<0||t>=this.verts.length)throw"out of range";return this.verts[t].normal}getVertexCount(){return this.verts.length}getHalfEdgeCount(){return this.edges.length}changeVertex(t,e,r){let i=this.verts[t];i.pos=e,i.normal=r}getVert(t){if(t<0||t>=this.verts.length)throw"out of range";return this.verts[t]}getEdge(t){return(t<0||t>=this.edges.length)&&console.error("out of range"),this.edges[t]}getEdgeIndexBetween(t,e){let r=this.getEdgeBetween(t,e);if(r)return this.getEdgeIndex(r)}getEdgeBetween(t,e){let r=this.getVertEdgeFan(t);for(let t=0;t<r.length;t++)if(this.getEdge(r[t].twin).vert==e)return r[t]}getVertEdgeFan(t){let e=[],r=this.verts[t].edge,i=r;if(-1==r)return e;let s=0;for(;;){if(s>this.verts.length)throw this.print(),console.log("fan: ",e),"nope";s+=1;let t=this.getEdge(r),a=this.getEdgeTwin(r);if(e.push(t),r=a.next,r==i)break}return e}getLoopsAdjacentToEdge(t){let e=[];return e.push(this.getLoop(t)),e.push(this.getLoop(this.getEdge(t).twin)),e}getVertNeighbors(t){let e=[];return this.getVertEdgeFan(t).forEach((t=>{e.push(this.getEdge(t.twin).vert)})),e}getEdgeIndex(t){return this.getEdge(t.twin).twin}getEdgeTwin(t){return this.edges[this.edges[t].twin]}hasEdge(t,e){return this.getVertNeighbors(t).includes(e)}addVert(t,e){return this.verts.push({pos:t,edge:-1,normal:e,dead:!1}),this.verts.length-1}removeVert(t){throw"TODO FIGURE OUT NULL & REMOVAL"}addEdgeIfNew(t,e){return!this.hasEdge(t,e)&&(this.addEdge(t,e),!0)}addEdge(t,e){let r=this.edges.length,i=r+1;this.edges.push({next:-1,twin:i,vert:t,dead:!1}),this.edges.push({next:-1,twin:r,vert:e,dead:!1}),this.addEdgeToDisk(t,r),this.addEdgeToDisk(e,i)}deleteEdgeByIndex(t){this.deleteEdge(this.getEdge(t))}deleteEdge(t){let e=this.getEdge(t.twin);t.dead=!0,e.dead=!0,this.deleteEdgeFromDisk(t),this.deleteEdgeFromDisk(e)}getDiskPositions(t){let e=this.getEdge(t),r=this.getVert(e.vert),i=this.getEdgeTwin(t),s=this.verts[i.vert],a=r.pos.subbed(s.pos),o=[];o.push(a);let n=this.getVertEdgeFan(e.vert),h=[];for(let e=0;e<n.length;e++){let r=n[e];this.getEdgeIndex(r)==t||h.push(r)}if(0==h.length)return[t,t];if(1==h.length){let t=h[0];return[this.getEdgeIndex(t),this.getEdgeIndex(t)]}for(let t=0;t<h.length;t++){let e=h[t],i=this.getEdge(e.twin),s=this.verts[i.vert],a=r.pos.subbed(s.pos);o.push(a)}let l=Plane_Plane.fromPN(r.pos,r.normal),d=l.ihat,c=l.jhat,u=Vector3_Vector3.calculateWheelOrder(o,d,c),m=-1,f=-1;for(let t=0;t<u.length;t++){let e=(t+1)%u.length,r=(t+2)%u.length;if(0==u[e]){m=u[t],f=u[r];break}}let g=h[f-1],p=h[m-1];return[this.getEdgeIndex(g),this.getEdgeIndex(p)]}addEdgeToDisk(t,e){let r=this.getVert(t),i=this.getEdgeTwin(e);if(-1==r.edge)r.edge=e,i.next=e;else{let[t,r]=this.getDiskPositions(e),[s,a]=[this.getEdge(t),this.getEdge(r)];this.getEdge(s.twin).next=e,i.next=this.getEdgeIndex(a)}}deleteEdgeFromDisk(t){let e=this.getEdgeIndex(t),r=this.getVert(t.vert),[i,s]=this.getDiskPositions(e);if(i==e)return void(r.edge=-1);let[a,o]=[this.getEdge(i),this.getEdge(s)];this.getEdge(a.twin).next=s,r.edge==e&&(r.edge=s)}splitEdge(t,e,r){let i=this.getEdgeBetween(t,e);if(!i)throw new Error(`No Edge found between ${t} and ${e}`);this.getEdge(i.twin);let s=this.getVert(t),a=this.getVert(e),o=Vector3_Vector3.fromLerp(s.pos,a.pos,r),n=Vector3_Vector3.fromLerp(s.normal,a.normal,r),h=this.addVert(o,n);this.getVert(h);return this.deleteEdge(i),this.addEdge(t,h),this.addEdge(h,e),h}subdivide(){let t=this.allEdgeVerts(),e=this.allVertLoopsAsInts(),r=new HashTable_HashTable,i=t.length/2,s=new Array(i);for(let e=0;e<i;e++){let i=t[2*e],a=t[2*e+1],o=this.splitEdge(i,a,.5);s[e]=o,r.set([i,a],o),r.set([a,i],o)}for(let t=0;t<e.length;t++){let i=e[t],s=new Array(i.length);for(let t=0;t<i.length;t++){let e=(t+1)%i.length,a=i[t],o=i[e];s[t]=r.get([a,o])}for(let t=0;t<i.length;t++){let e=(t+1)%i.length;this.addEdge(s[t],s[e])}}}subdivideQuad(){let t=this.allEdgeVerts(),e=this.allVertLoopsAsInts(),r=new HashTable_HashTable,i=t.length/2;for(let e=0;e<i;e++){let i=t[2*e],s=t[2*e+1],a=this.splitEdge(i,s,.5);r.set([i,s],a),r.set([s,i],a)}for(let t=0;t<e.length;t++){let i=e[t],s=Vector3_Vector3.zero();for(let t=0;t<i.length;t++)s.add(this.getVertexPos(i[t]));s.scale(1/i.length);let a=calcPlanarFaceNormal(i.map((t=>this.getVertexPos(t)))),o=this.addVert(s,a);for(let t=0;t<i.length;t++){let e=(t+1)%i.length,s=i[t],a=i[e],n=r.get([s,a]);this.addEdge(o,n)}}}forEveryEdgeVerts(t){let e=this.allUniqueEdgeVerts(),r=e.length/2;for(let i=0;i<r;i++){let r=this.getVert(e[2*i]),s=this.getVert(e[2*i+1]);t(r.pos,s.pos)}}}function calcPlanarFaceNormal(t){let e=t.length;if(e<3)throw"cannot get face planar with 2 or less edges";Vector3_Vector3.zero();let r=t[1].subbed(t[0]),i=t[2].subbed(t[1]);for(let s=1;s<e;s++){if(Math.abs(r.dot(i))>Const_Const.TOLERANCE)return r.cross(i);{let r=(s+1)%e;i=t[(s+2)%e].subbed(t[r])}}throw"get planar face failed..."}class Color{constructor(t){this.data=t}get r(){return this.data[0]}get g(){return this.data[1]}get b(){return this.data[2]}get a(){return this.data[3]}set r(t){this.data[0]=t}set g(t){this.data[1]=t}set b(t){this.data[2]=t}set a(t){this.data[3]=t}static new(){return new Color([1,1,1,1])}static fromHex(t){let e=(t=t.replace("#","")).match(/.{1,2}/g);if(!e)return void console.warn(`couldnt convert hex ${t} to color`);let r=[];for(let t of e){let e=parseInt(t,16);if(void 0===e)return void console.warn(`couldnt convert hex ${t} to color`);r.push(e/255)}return Color.fromRGB(...r)}static fromRGB(t=1,e=1,r=1,i=1){return new Color([t,e,r,i])}static fromList(t){if(3==t.length)return new Color(t)}static fromHSL(t,e=1,r=.5,i=1){let s,a,o;if(0==e)s=a=o=r;else{let hue2rgb=(t,e,r)=>(r<0&&(r+=1),r>1&&(r-=1),r<1/6?t+6*(e-t)*r:r<.5?e:r<2/3?t+(e-t)*(2/3-r)*6:t),i=r<.5?r*(1+e):r+e-r*e,n=2*r-i;s=hue2rgb(n,i,t+1/3),a=hue2rgb(n,i,t),o=hue2rgb(n,i,t-1/3)}return Color.fromRGB(s,a,o,i)}static fromInt(t){return new Color(t.map((t=>t/255)))}toInt(){let process=t=>Math.round(255*t);return[process(this.r),process(this.g),process(this.b),process(this.a)]}toHex8(){let process=t=>{let e=Math.round(255*t).toString(16);return e=1==e.length?"0"+e:e,e};return`#${process(this.r)}${process(this.g)}${process(this.b)}${process(this.a)}`}toHex6(){let process=t=>{let e=Math.round(255*t).toString(16);return e=1==e.length?"0"+e:e,e};return`#${process(this.r)}${process(this.g)}${process(this.b)}`}}Color.fromHex("#f0f8ff"),Color.fromHex("#faebd7"),Color.fromHex("#00ffff"),Color.fromHex("#7fffd4"),Color.fromHex("#f0ffff"),Color.fromHex("#f5f5dc"),Color.fromHex("#ffe4c4"),Color.fromHex("#000000"),Color.fromHex("#ffebcd"),Color.fromHex("#0000ff"),Color.fromHex("#8a2be2"),Color.fromHex("#a52a2a"),Color.fromHex("#deb887"),Color.fromHex("#5f9ea0"),Color.fromHex("#7fff00"),Color.fromHex("#d2691e"),Color.fromHex("#ff7f50"),Color.fromHex("#6495ed"),Color.fromHex("#fff8dc"),Color.fromHex("#dc143c"),Color.fromHex("#00ffff"),Color.fromHex("#00008b"),Color.fromHex("#008b8b"),Color.fromHex("#b8860b"),Color.fromHex("#a9a9a9"),Color.fromHex("#006400"),Color.fromHex("#a9a9a9"),Color.fromHex("#bdb76b"),Color.fromHex("#8b008b"),Color.fromHex("#556b2f"),Color.fromHex("#ff8c00"),Color.fromHex("#9932cc"),Color.fromHex("#8b0000"),Color.fromHex("#e9967a"),Color.fromHex("#8fbc8f"),Color.fromHex("#483d8b"),Color.fromHex("#2f4f4f"),Color.fromHex("#2f4f4f"),Color.fromHex("#00ced1"),Color.fromHex("#9400d3"),Color.fromHex("#ff1493"),Color.fromHex("#00bfff"),Color.fromHex("#696969"),Color.fromHex("#696969"),Color.fromHex("#1e90ff"),Color.fromHex("#b22222"),Color.fromHex("#fffaf0"),Color.fromHex("#228b22"),Color.fromHex("#ff00ff"),Color.fromHex("#dcdcdc"),Color.fromHex("#f8f8ff"),Color.fromHex("#daa520"),Color.fromHex("#ffd700"),Color.fromHex("#808080"),Color.fromHex("#008000"),Color.fromHex("#adff2f"),Color.fromHex("#808080"),Color.fromHex("#f0fff0"),Color.fromHex("#ff69b4"),Color.fromHex("#cd5c5c"),Color.fromHex("#4b0082"),Color.fromHex("#fffff0"),Color.fromHex("#f0e68c"),Color.fromHex("#fff0f5"),Color.fromHex("#e6e6fa"),Color.fromHex("#7cfc00"),Color.fromHex("#fffacd"),Color.fromHex("#add8e6"),Color.fromHex("#f08080"),Color.fromHex("#e0ffff"),Color.fromHex("#fafad2"),Color.fromHex("#d3d3d3"),Color.fromHex("#90ee90"),Color.fromHex("#d3d3d3"),Color.fromHex("#ffb6c1"),Color.fromHex("#ffa07a"),Color.fromHex("#20b2aa"),Color.fromHex("#87cefa"),Color.fromHex("#778899"),Color.fromHex("#778899"),Color.fromHex("#b0c4de"),Color.fromHex("#ffffe0"),Color.fromHex("#00ff00"),Color.fromHex("#32cd32"),Color.fromHex("#faf0e6"),Color.fromHex("#ff00ff"),Color.fromHex("#800000"),Color.fromHex("#66cdaa"),Color.fromHex("#0000cd"),Color.fromHex("#ba55d3"),Color.fromHex("#9370db"),Color.fromHex("#3cb371"),Color.fromHex("#7b68ee"),Color.fromHex("#00fa9a"),Color.fromHex("#48d1cc"),Color.fromHex("#c71585"),Color.fromHex("#191970"),Color.fromHex("#f5fffa"),Color.fromHex("#ffe4e1"),Color.fromHex("#ffe4b5"),Color.fromHex("#ffdead"),Color.fromHex("#000080"),Color.fromHex("#fdf5e6"),Color.fromHex("#808000"),Color.fromHex("#6b8e23"),Color.fromHex("#ffa500"),Color.fromHex("#ff4500"),Color.fromHex("#da70d6"),Color.fromHex("#eee8aa"),Color.fromHex("#98fb98"),Color.fromHex("#afeeee"),Color.fromHex("#db7093"),Color.fromHex("#ffefd5"),Color.fromHex("#ffdab9"),Color.fromHex("#cd853f"),Color.fromHex("#ffc0cb"),Color.fromHex("#dda0dd"),Color.fromHex("#b0e0e6"),Color.fromHex("#800080"),Color.fromHex("#663399"),Color.fromHex("#ff0000"),Color.fromHex("#bc8f8f"),Color.fromHex("#4169e1"),Color.fromHex("#8b4513"),Color.fromHex("#fa8072"),Color.fromHex("#f4a460"),Color.fromHex("#2e8b57"),Color.fromHex("#fff5ee"),Color.fromHex("#a0522d"),Color.fromHex("#c0c0c0"),Color.fromHex("#87ceeb"),Color.fromHex("#6a5acd"),Color.fromHex("#708090"),Color.fromHex("#708090"),Color.fromHex("#fffafa"),Color.fromHex("#00ff7f"),Color.fromHex("#4682b4"),Color.fromHex("#d2b48c"),Color.fromHex("#008080"),Color.fromHex("#d8bfd8"),Color.fromHex("#ff6347"),Color.fromHex("#40e0d0"),Color.fromHex("#ee82ee"),Color.fromHex("#f5deb3"),Color.fromHex("#ffffff"),Color.fromHex("#f5f5f5"),Color.fromHex("#ffff00"),Color.fromHex("#9acd32");class Random_Random{constructor(t,e,r,i){this.a=t,this.b=e,this.c=r,this.d=i}static new(t,e,r,i){return new Random_Random(t,e,r,i)}static randomSeed(){return 393847477636*Math.random()}static fromSeed(t){for(var e=3735928559^t,r=Random_Random.new(2654435769,608135816,3084996962,e),i=0;i<15;i++)r.get();return r}static fromRandom(){return this.fromSeed(103948857*Math.random())}static fromHash(t){var e=function xmur3(t){for(var e=0,r=1779033703^t.length;e<t.length;e++)r=(r=Math.imul(r^t.charCodeAt(e),3432918353))<<13|r>>>19;return function(){return r=Math.imul(r^r>>>16,2246822507),r=Math.imul(r^r>>>13,3266489909),(r^=r>>>16)>>>0}}(t);return this.new(e(),e(),e(),e())}get(){this.a>>>=0,this.b>>>=0,this.c>>>=0,this.d>>>=0;let t=this.a+this.b|0;return this.a=this.b^this.b>>>9,this.b=this.c+(this.c<<3)|0,this.c=this.c<<21|this.c>>>11,this.d=this.d+1|0,t=t+this.d|0,this.c=this.c+t|0,(t>>>0)/4294967296}}class Ray{constructor(t,e){this.origin=t,this.normal=e.normalize()}static fromNormal(t,e){return new Ray(t,e)}static fromPoints(t,e){return new Ray(t,e.subbed(t).normalize())}at(t){return this.origin.added(this.normal.scaled(t))}xPlane(t){return-(this.origin.dot(t.normal)+t.d)/this.normal.dot(t.normal)}toLine(t){let e=this.at(t);return MultiLine.fromLines([this.origin,e])}}class Statistics_Stat{static sum(t){let e=0;for(let r=0;r<t.length;r++)e+=t[r];return e}static mean(t){return this.sum(t)/t.length}static meanWeighted(t,e){if(t.length!=e.length)throw new Error("values & weights need same length");var r=0,i=0;for(let s=0;s<t.length;s++)r+=t[s]*e[s],i+=e[s];return r/i}static variance(t){let e=t.length,r=this.mean(t),i=0;for(let s=0;s<e;s++)i+=Math.pow(t[s]-r,2);return i/(e-1)}static deviation(t){return Math.pow(this.variance(t),.5)}static covariance(t,e){if(t.length!=e.length)throw"this is not how covariance works...";let r=t.length,i=this.mean(t),s=this.mean(e),a=0;for(let o=0;o<r;o++)a+=(t[o]-i)*(e[o]-s);return a/(r-1)}static cov(t){let e=t.width,r=new FloatMatrix_FloatMatrix(e,e),i=Array(e);for(let r=0;r<e;r++)i[r]=t.getColumn(r);for(let t=0;t<e;t++)for(let s=t;s<e;s++){let e=this.covariance(i[t],i[s]);r.set(t,s,e),r.set(s,t,e)}return r}static eig(t){let e=this.svd(t);return[e[1],e[2]]}static svd(t){var e=Math.pow(2,-52),r=1e-64/e,i=0,s=0,a=0,o=0,n=0,h=t.clone().toNative(),l=h.length,d=h[0].length;if(l<d)throw"Need more rows than columns";var c=new Array(d),u=new Array(d);for(s=0;s<d;s++)c[s]=u[s]=0;var m=function rep(t,e,r=0){let i,s=t[r],a=Array(s);if(r===t.length-1){for(i=s-2;i>=0;i-=2)a[i+1]=e,a[i]=e;return-1===i&&(a[0]=e),a}for(i=s-1;i>=0;i--)a[i]=rep(t,e,r+1);return a}([d,d],0);function pythag(t,e){return(t=Math.abs(t))>(e=Math.abs(e))?t*Math.sqrt(1+e*e/t/t):0==e?t:e*Math.sqrt(1+t*t/e/e)}var f,g=0,p=0,w=0,x=0,_=0,M=0,v=0;for(s=0;s<d;s++){for(c[s]=p,v=0,n=s+1,a=s;a<l;a++)v+=h[a][s]*h[a][s];if(v<=r)p=0;else for(g=h[s][s],p=Math.sqrt(v),g>=0&&(p=-p),w=g*p-v,h[s][s]=g-p,a=n;a<d;a++){for(v=0,o=s;o<l;o++)v+=h[o][s]*h[o][a];for(g=v/w,o=s;o<l;o++)h[o][a]+=g*h[o][s]}for(u[s]=p,v=0,a=n;a<d;a++)v+=h[s][a]*h[s][a];if(v<=r)p=0;else{for(g=h[s][s+1],p=Math.sqrt(v),g>=0&&(p=-p),w=g*p-v,h[s][s+1]=g-p,a=n;a<d;a++)c[a]=h[s][a]/w;for(a=n;a<l;a++){for(v=0,o=n;o<d;o++)v+=h[a][o]*h[s][o];for(o=n;o<d;o++)h[a][o]+=v*c[o]}}(_=Math.abs(u[s])+Math.abs(c[s]))>x&&(x=_)}for(s=d-1;-1!=s;s+=-1){if(0!=p){for(w=p*h[s][s+1],a=n;a<d;a++)m[a][s]=h[s][a]/w;for(a=n;a<d;a++){for(v=0,o=n;o<d;o++)v+=h[s][o]*m[o][a];for(o=n;o<d;o++)m[o][a]+=v*m[o][s]}}for(a=n;a<d;a++)m[s][a]=0,m[a][s]=0;m[s][s]=1,p=c[s],n=s}for(s=d-1;-1!=s;s+=-1){for(n=s+1,p=u[s],a=n;a<d;a++)h[s][a]=0;if(0!=p){for(w=h[s][s]*p,a=n;a<d;a++){for(v=0,o=n;o<l;o++)v+=h[o][s]*h[o][a];for(g=v/w,o=s;o<l;o++)h[o][a]+=g*h[o][s]}for(a=s;a<l;a++)h[a][s]=h[a][s]/p}else for(a=s;a<l;a++)h[a][s]=0;h[s][s]+=1}for(e*=x,o=d-1;-1!=o;o+=-1)for(var V=0;V<50;V++){var b=!1;for(n=o;-1!=n;n+=-1){if(Math.abs(c[n])<=e){b=!0;break}if(Math.abs(u[n-1])<=e)break}if(!b){i=0,v=1;var y=n-1;for(s=n;s<o+1&&(g=v*c[s],c[s]=i*c[s],!(Math.abs(g)<=e));s++)for(w=pythag(g,p=u[s]),u[s]=w,i=p/w,v=-g/w,a=0;a<l;a++)_=h[a][y],M=h[a][s],h[a][y]=_*i+M*v,h[a][s]=-_*v+M*i}if(M=u[o],n==o){if(M<0)for(u[o]=-M,a=0;a<d;a++)m[a][o]=-m[a][o];break}if(V>=49)throw"Error: no convergence.";for(x=u[n],p=pythag(g=(((_=u[o-1])-M)*(_+M)+((p=c[o-1])-(w=c[o]))*(p+w))/(2*w*_),1),g=g<0?((x-M)*(x+M)+w*(_/(g-p)-w))/x:((x-M)*(x+M)+w*(_/(g+p)-w))/x,i=1,v=1,s=n+1;s<o+1;s++){for(p=c[s],_=u[s],w=v*p,p*=i,M=pythag(g,w),c[s-1]=M,g=x*(i=g/M)+p*(v=w/M),p=-x*v+p*i,w=_*v,_*=i,a=0;a<d;a++)x=m[a][s-1],M=m[a][s],m[a][s-1]=x*i+M*v,m[a][s]=-x*v+M*i;for(M=pythag(g,w),u[s-1]=M,g=(i=g/M)*p+(v=w/M)*_,x=-v*p+i*_,a=0;a<l;a++)_=h[a][s-1],M=h[a][s],h[a][s-1]=_*i+M*v,h[a][s]=-_*v+M*i}c[n]=0,c[o]=g,u[o]=x}for(s=0;s<u.length;s++)u[s]<e&&(u[s]=0);for(s=0;s<d;s++)for(a=s-1;a>=0;a--)if(u[a]<u[s]){for(i=u[a],u[a]=u[s],u[s]=i,o=0;o<h.length;o++)f=h[o][s],h[o][s]=h[o][a],h[o][a]=f;for(o=0;o<m.length;o++)f=m[o][s],m[o][s]=m[o][a],m[o][a]=f;s=a}return[FloatMatrix_FloatMatrix.fromNative(h),new Float32Array(u),FloatMatrix_FloatMatrix.fromNative(m)]}}class ImageMesh{constructor(t,e,r,i,s){this.image=t,this.plane=e,this.scale=r,this.centered=i,this.doubleSided=s}static new(t,e=Plane_Plane.WorldXY(),r=1,i=!0,s=!0){return new ImageMesh(t,e,r,i,s)}buffer(){return ShaderMesh_ShaderMesh.fromImage(this.image,this.plane,this.centered,this.scale,this.doubleSided)}}var o,n,h,l,d,c,u=0;!function(t){t[t.StreamDraw=35040]="StreamDraw",t[t.StaticDraw=35044]="StaticDraw",t[t.DynamicDraw=35048]="DynamicDraw"}(o||(o={}));class HelpGl{static getNextTextureID(){let t=u;return u+=1,t}static resizeCanvas(t){let e=t.canvas;const r=e.clientWidth,i=e.clientHeight,s=t.canvas.width!==r||t.canvas.height!==i;return s&&(t.canvas.width=r,t.canvas.height=i),t.viewport(0,0,t.canvas.width,t.canvas.height),s}static initWebglContext(t,e=!1){let r=t.getContext("webgl");if(null==r)return void alert("webgl unavailable...");let i=r;i.enable(i.CULL_FACE),e?(i.enable(i.BLEND),i.enable(i.DEPTH_TEST),i.depthFunc(i.LEQUAL)):(i.disable(i.BLEND),i.enable(i.DEPTH_TEST),i.depthFunc(i.LEQUAL));i.getExtension("OES_element_index_uint");return i.clearColor(0,0,0,1),i.clearDepth(1),i}static compileShader(t,e,r){let i=t.createShader(r);if(t.shaderSource(i,e),t.compileShader(i),!t.getShaderParameter(i,t.COMPILE_STATUS))throw"could not compile shader:"+e+t.getShaderInfoLog(i);return i}static createProgram(t,e,r){let i=t.createProgram();if(t.attachShader(i,e),t.attachShader(i,r),t.linkProgram(i),!t.getProgramParameter(i,t.LINK_STATUS))throw"program failed to link:"+t.getProgramInfoLog(i);return i}static createProgramFromScripts(t,e,r){let i=HelpGl.compileShader(t,e,t.VERTEX_SHADER),s=HelpGl.compileShader(t,r,t.FRAGMENT_SHADER);return HelpGl.createProgram(t,i,s)}static getNearestCorrectTextureSize(t){let e=Math.log2(t);return Math.pow(2,Math.ceil(e))}static fixTextureSizing(t){let e=HelpGl.getNearestCorrectTextureSize(t.width),r=HelpGl.getNearestCorrectTextureSize(t.height);if(e!==t.width||r!==t.height){console.log("resizing to ",e,r);t.width,t.height;return t.buffer(e,r)}return t}}class Attribute{constructor(t,e,r,i,s){this.gl=t,this.buffer=e,this.position=r,this.width=i,this.type=s}static new(t,e,r,i){let s=t.getAttribLocation(e,r);-1==s&&console.error(`couldnt find attribute [${r}] within glsl! Keep in mind: webgl filters unused attributes automatically`);let a=t.createBuffer();return new Attribute(t,a,s,i,t.FLOAT)}load(t,e,r){t.bindBuffer(t.ARRAY_BUFFER,this.buffer),t.enableVertexAttribArray(this.position),t.vertexAttribPointer(this.position,this.width,this.type,!1,0,0),t.bufferData(t.ARRAY_BUFFER,e,r)}bind(t){t.enableVertexAttribArray(this.position),t.bindBuffer(t.ARRAY_BUFFER,this.buffer),t.vertexAttribPointer(this.position,this.width,this.type,!1,0,0)}}!function(t){t[t.Depth=256]="Depth",t[t.Stencil=1024]="Stencil",t[t.Color=16384]="Color"}(n||(n={})),function(t){t[t.Points=0]="Points",t[t.Lines=1]="Lines",t[t.LineLoop=2]="LineLoop",t[t.LineStrip=3]="LineStrip",t[t.Triangles=4]="Triangles",t[t.TriangleStrip=5]="TriangleStrip",t[t.TriangleFan=6]="TriangleFan"}(h||(h={})),function(t){t[t.Arrays=0]="Arrays",t[t.Elements=1]="Elements"}(l||(l={})),function(t){t[t.UnsignedByte=5121]="UnsignedByte",t[t.UnsignedShort=5123]="UnsignedShort",t[t.UnsignedInt=5125]="UnsignedInt"}(d||(d={})),function(t){t[t.Byte=5120]="Byte",t[t.UnsignedByte=5121]="UnsignedByte",t[t.Short=5122]="Short",t[t.UnsignedShort=5123]="UnsignedShort",t[t.Int=5124]="Int",t[t.UnsignedInt=5125]="UnsignedInt",t[t.Float=5126]="Float"}(c||(c={}));const m=3553,f="__index__";class IndexAttribute{constructor(t,e){this.gl=t,this.buffer=e}static new(t){let e=t.createBuffer();return new IndexAttribute(t,e)}load(t,e,r){t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.buffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,r)}bind(t){t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.buffer)}}class Attributes{constructor(t,e,r,i=new Map){this.gl=t,this.program=e,this.indexAttributeElementType=r,this.attributes=i}add(t,e){this.attributes.set(t,Attribute.new(this.gl,this.program,t,e))}has(t){return this.attributes.has(t)}addIndex(t){this.indexAttributeElementType=t,this.attributes.set(f,IndexAttribute.new(this.gl))}load(t,e,r){this.attributes.get(t).load(this.gl,e,r)}loadIndex(t,e){this.attributes.get(f).load(this.gl,t,e)}getIndex(){return this.attributes.get(f)}bindAll(){for(let[t,e]of this.attributes)e.bind(this.gl)}}var g;!function(t){t[t.Float=0]="Float",t[t.Int=1]="Int"}(g||(g={}));class Uniform{constructor(t,e,r,i){this.type=t,this.size=e,this.loc=r,this.setter=i}static new(t,e,r,i,s,a){let o=function getLoader(t,e,r){switch(r){case 1:return g.Float,(t,e,r)=>{t.uniform1fv(e,r)};case 2:return g.Float,(t,e,r)=>{t.uniform2fv(e,r)};case 3:return g.Float,(t,e,r)=>{t.uniform3fv(e,r)};case 4:return g.Float,(t,e,r)=>{t.uniform4fv(e,r)};case 9:return(t,e,r)=>{t.uniformMatrix3fv(e,!1,r)};case 16:return(t,e,r)=>{t.uniformMatrix4fv(e,!1,r)};default:return(t,e,r)=>{console.error("could not set a certain uniform...")}}}(0,0,s),n=t.getUniformLocation(e,r),h=new Uniform(i,s,n,o);return a&&h.loadAndBind(t,a),h}loadAndBind(t,e){this.setter(t,this.loc,e)}}class UniformTexture{constructor(t,e,r,i){this.gl=t,this.id=e,this.texture=r,this.loc=i}static new(t,e,r){let i=t.getUniformLocation(e,r),s=HelpGl.getNextTextureID(),a=t.createTexture();return new UniformTexture(t,s,a,i)}load(t){this.gl.activeTexture(this.gl.TEXTURE0+this.id),this.gl.bindTexture(m,this.texture),this.gl.texImage2D(m,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,t),this.gl.texParameteri(m,this.gl.TEXTURE_MIN_FILTER,this.gl.NEAREST),this.gl.generateMipmap(m)}bind(t){t.uniform1i(this.loc,this.id),t.activeTexture(t.TEXTURE0+this.id),t.bindTexture(t.TEXTURE_2D,this.texture)}unbind(){throw"TODO"}}class Uniforms{constructor(t,e,r=new Map,i=new Map){this.gl=t,this.program=e,this.uniforms=r,this.textures=i}add(t,e,r,i=g.Float){let s=Uniform.new(this.gl,this.program,t,i,e,r);return this.uniforms.set(t,s),s}addTexture(t){let e=UniformTexture.new(this.gl,this.program,t);return this.textures.set(t,e),e}get(t){let e=this.uniforms.get(t);if(e)return e;throw new Error(`uniform called [${t}] is not addded to the uniforms at init...`)}bindAll(){for(let t of this.textures.values())t.bind(this.gl)}loadTexture(t,e){this.textures.get(t).load(e.toImageData())}loadTextureSource(t,e){this.textures.get(t).load(e)}load(t,e){this.get(t).loadAndBind(this.gl,[e])}load2(t,e){this.get(t).loadAndBind(this.gl,[e.x,e.y])}load3(t,e){this.get(t).loadAndBind(this.gl,[e.x,e.y,e.z])}load4(t,e){this.get(t).loadAndBind(this.gl,e)}loadColor(t,e){this.get(t).loadAndBind(this.gl,e.data)}loadMatrix3(t,e){this.get(t).loadAndBind(this.gl,e.data)}loadMatrix4(t,e){this.get(t).loadAndBind(this.gl,e.data)}}class OldShader_OldShader{constructor(t,e,r){this.active=!0,this.draw=()=>{},this.method=l.Arrays,this.mode=h.Triangles,this.drawCount=0,this.drawOffset=0,this.gl=t,this.program=HelpGl.createProgramFromScripts(t,e,r),this.uniforms=new Uniforms(this.gl,this.program),this.attributes=new Attributes(this.gl,this.program),this.drawCount=0,t.useProgram(this.program)}setAndRender(t,e){this.set(t,o.DynamicDraw),this.render(e)}setDrawCount(t){this.drawCount=t}}class DotShader extends OldShader_OldShader{constructor(t,e=5,r=[1,1,1,1],i=!0){let s="\n        precision mediump int;\n        precision mediump float;\n\n        uniform mat4 u_transform;\n        uniform vec4 u_color;\n        uniform float u_size;\n\n        attribute vec3 a_vertex;\n\n        void main() {\n            // Set the size of a rendered point.\n            gl_PointSize = u_size;\n\n            // Transform the location of the vertex.\n            gl_Position = u_transform * vec4(a_vertex, 1.0);\n        }\n\n        ";super(t,s,i?"\n        precision mediump int;\n        precision mediump float;\n\n        uniform vec4 u_color;\n        // vec2 center = vec2(0.5, 0.5);\n\n        void main() {\n            gl_FragColor = u_color;\n        }\n        ":"\n        precision mediump int;\n        precision mediump float;\n\n        uniform vec4 u_color;\n        vec2 center = vec2(0.5, 0.5);\n\n        void main() {\n            if (distance(center, gl_PointCoord) > 0.5) {\n               discard;\n            }\n            gl_FragColor = u_color;\n        }\n        "),this.u_transform=t.getUniformLocation(this.program,"u_transform"),this.u_size=t.getUniformLocation(this.program,"u_size"),this.u_color=t.getUniformLocation(this.program,"u_color"),this.color=r,this.size=e,this.count=0,this.a_position=t.getAttribLocation(this.program,"a_vertex"),this.a_position_buffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.a_position_buffer)}set(t,e=o.StaticDraw){let r=this.gl;r.useProgram(this.program);let i=ToFloatMatrix(t);this.count=i.count(),r.bindBuffer(r.ARRAY_BUFFER,this.a_position_buffer),r.enableVertexAttribArray(this.a_position),r.vertexAttribPointer(this.a_position,i.width,r.FLOAT,!1,0,0),r.bufferData(r.ARRAY_BUFFER,i.data,e)}render(t){let e=this.gl,r=t.camera.totalMatrix;e.useProgram(this.program),e.uniformMatrix4fv(this.u_transform,!1,r.data),e.uniform1f(this.u_size,this.size),e.uniform4f(this.u_color,this.color[0],this.color[1],this.color[2],this.color[3]),e.bindBuffer(e.ARRAY_BUFFER,this.a_position_buffer),e.enableVertexAttribArray(this.a_position),e.vertexAttribPointer(this.a_position,3,e.FLOAT,!1,0,0),e.drawArrays(e.POINTS,0,this.count)}setAndRender(t,e){this.set(t,o.DynamicDraw),this.render(e)}}class LineShader extends OldShader_OldShader{constructor(t,e=[1,1,1,.5]){super(t,"\n        precision mediump int;\n        precision mediump float;\n\n        attribute vec4 a_position;\n        uniform mat4 u_transform;\n        uniform vec4 u_color;\n\n        void main() {\n            gl_Position = u_transform * a_position;\n        }\n        ","\n        precision mediump int;\n        precision mediump float;\n\n        uniform vec4 u_color;\n\n        void main () {\n            gl_FragColor = u_color;\n        }\n        "),this.u_transform=t.getUniformLocation(this.program,"u_transform"),this.u_color=t.getUniformLocation(this.program,"u_color"),this.a_position=t.getAttribLocation(this.program,"a_position"),this.a_position_buffer=t.createBuffer(),this.index_buffer=t.createBuffer(),t.useProgram(this.program),t.uniform4f(this.u_color,e[0],e[1],e[2],e[3]),this.count=0,this.vertCount=0}set(t,e=o.StaticDraw,r=Matrix4_Matrix4.newIdentity()){let i,s,a=this.gl;t instanceof Mesh_Mesh?(s=t.verts.slice(),i=t.links.getData()):(s=t.verts,i=t.links),a.useProgram(this.program),this.count=i.length,this.vertCount=s.width;let n=e;a.bindBuffer(a.ARRAY_BUFFER,this.a_position_buffer),a.enableVertexAttribArray(this.a_position),a.vertexAttribPointer(this.a_position,this.vertCount,a.FLOAT,!1,0,0),a.bufferData(a.ARRAY_BUFFER,s.data,n),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,this.index_buffer),a.bufferData(a.ELEMENT_ARRAY_BUFFER,i.buffer,n)}render(t){let e=this.gl,r=t.camera.totalMatrix;e.useProgram(this.program),e.bindBuffer(e.ARRAY_BUFFER,this.a_position_buffer),e.enableVertexAttribArray(this.a_position),e.vertexAttribPointer(this.a_position,this.vertCount,e.FLOAT,!1,0,0),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.index_buffer),e.uniformMatrix4fv(this.u_transform,!1,r.data),e.drawElements(e.LINES,this.count,e.UNSIGNED_SHORT,0)}setAndRender(t,e){this.set(t,o.DynamicDraw),this.render(e)}}class NormalShader extends OldShader_OldShader{constructor(t){super(t,"\n        precision mediump int;\n        precision mediump float;\n\n        attribute vec4 a_vertex;\n        attribute vec4 a_vertex_color;\n\n        uniform mat4 u_transform;\n\n        varying vec4 v_color;\n\n        void main() {\n            gl_Position = u_transform * a_vertex;\n            v_color = a_vertex_color;\n        }\n        ","\n        precision mediump int;\n        precision mediump float;\n\n        varying vec4 v_color;\n\n        void main () {\n            gl_FragColor = v_color;\n        }\n        "),this.u_transform=t.getUniformLocation(this.program,"u_transform"),this.a_position=t.getAttribLocation(this.program,"a_vertex"),this.a_color=t.getAttribLocation(this.program,"a_vertex_color"),this.a_position_buffer=t.createBuffer(),this.a_color_buffer=t.createBuffer(),this.index_buffer=t.createBuffer(),t.useProgram(this.program),this.count=0,this.vertCount=0,this.scale=.4}set(t,e=o.StaticDraw){let i=this.gl;i.useProgram(this.program);let s,a,n=e;this.vertCount=3;let h=t.getNormalType();if(h==r.Face){let e=t.mesh.links.count();this.count=2*e,s=MultiVector3_MultiVector3.new(this.count),a=MultiVector3_MultiVector3.new(this.count);for(let r=0;r<e;r++){let e=t.getFaceVertices(r).average(),i=t.norms.get(r),o=2*r,n=2*r+1;s.set(o,e),s.set(n,e.add(i.scaled(this.scale)));let h=i.add(new Vector3_Vector3(1,1,1).div(2));a.set(o,h),a.set(n,h)}}else{if(h!=r.Vertex)return void(this.count=0);{let e=t.mesh.verts.count;this.count=2*e,s=MultiVector3_MultiVector3.new(this.count),a=MultiVector3_MultiVector3.new(this.count);for(let r=0;r<e;r++){let e=t.mesh.verts.get(r),i=t.norms.get(r),o=2*r,n=2*r+1;s.set(o,e),s.set(n,e.add(i.scaled(this.scale)));let h=i.add(new Vector3_Vector3(1,1,1)).div(2);a.set(o,h),a.set(n,h)}}}i.bindBuffer(i.ARRAY_BUFFER,this.a_position_buffer),i.enableVertexAttribArray(this.a_position),i.vertexAttribPointer(this.a_position,this.vertCount,i.FLOAT,!1,0,0),i.bufferData(i.ARRAY_BUFFER,s.slice().data,n),i.bindBuffer(i.ARRAY_BUFFER,this.a_color_buffer),i.enableVertexAttribArray(this.a_color),i.vertexAttribPointer(this.a_color,this.vertCount,i.FLOAT,!1,0,0),i.bufferData(i.ARRAY_BUFFER,a.slice().data,n),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,this.index_buffer),i.bufferData(i.ELEMENT_ARRAY_BUFFER,getDefaultIndices(this.count),n)}render(t){let e=this.gl,r=t.camera.totalMatrix;t.camera;e.useProgram(this.program),e.bindBuffer(e.ARRAY_BUFFER,this.a_position_buffer),e.enableVertexAttribArray(this.a_position),e.vertexAttribPointer(this.a_position,this.vertCount,e.FLOAT,!1,0,0),e.bindBuffer(e.ARRAY_BUFFER,this.a_color_buffer),e.enableVertexAttribArray(this.a_color),e.vertexAttribPointer(this.a_color,this.vertCount,e.FLOAT,!1,0,0),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.index_buffer),e.uniformMatrix4fv(this.u_transform,!1,r.data),e.drawElements(e.LINES,this.count,e.UNSIGNED_SHORT,0)}}class SimpleMeshShader extends OldShader_OldShader{constructor(t,e=[1,0,0,.25]){super(t,"\n        precision mediump int;\n        precision mediump float;\n\n        attribute vec4 a_position;\n        uniform mat4 u_transform;\n        uniform vec4 u_color;\n\n        void main() {\n            gl_Position = u_transform * a_position;\n        }\n        ","\n        precision mediump int;\n        precision mediump float;\n\n        uniform vec4 u_color;\n\n        void main () {\n            gl_FragColor = u_color;\n        }\n        "),this.u_transform=t.getUniformLocation(this.program,"u_transform"),this.u_color=t.getUniformLocation(this.program,"u_color"),t.useProgram(this.program),t.uniform4f(this.u_color,e[0],e[1],e[2],e[3]),this.count=0,this.size=0,this.a_position=t.getAttribLocation(this.program,"a_position"),this.a_position_buffer=t.createBuffer(),this.index_buffer=t.createBuffer()}set(t,e=o.StaticDraw){let r=this.gl;r.useProgram(this.program),this.count=t.links.data.length,r.bindBuffer(r.ARRAY_BUFFER,this.a_position_buffer),this.size=3;r.FLOAT;r.vertexAttribPointer(this.a_position,this.size,r.FLOAT,!1,0,0),r.bufferData(r.ARRAY_BUFFER,t.verts.slice().data,e),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,this.index_buffer),r.bufferData(r.ELEMENT_ARRAY_BUFFER,t.links.data,e)}render(t){let e=this.gl,r=t.camera.totalMatrix;e.useProgram(this.program),e.enableVertexAttribArray(this.a_position),e.bindBuffer(e.ARRAY_BUFFER,this.a_position_buffer),e.vertexAttribPointer(this.a_position,this.size,e.FLOAT,!1,0,0),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.index_buffer),e.uniformMatrix4fv(this.u_transform,!1,r.data),e.drawElements(e.TRIANGLES,this.count,e.UNSIGNED_SHORT,0)}setAndRender(t,e){this.set(t,o.DynamicDraw),this.render(e)}}class MeshDebugShader extends MultiShader{constructor(t,e=[1,0,0,.25],r=[1,0,0,1],i=!0){super(),this.faceRend=new SimpleMeshShader(t,e),this.lineRend=new LineShader(t,r),this.personal=Matrix4_Matrix4.newIdentity(),i&&(this.normRend=new NormalShader(t))}static new(t,e=[1,0,0,.25],r=[1,0,0,1],i=!0){return new MeshDebugShader(t,e,r,i)}set(t,e=o.StaticDraw){var r;this.personal=t.position,this.faceRend.set(t.mesh),this.lineRend.set(MultiLine.fromMesh(t),e),null===(r=this.normRend)||void 0===r||r.set(t,e)}render(t){var e;this.faceRend.render(t),this.lineRend.render(t),null===(e=this.normRend)||void 0===e||e.render(t)}setAndRender(t,e){this.set(t,o.DynamicDraw),this.render(e)}}class ShadedMeshShader extends OldShader_OldShader{constructor(t){super(t,"\n\n        attribute vec4 a_vertex_position;\n        attribute vec3 a_vertex_normal;\n        attribute float a_vertex_ambi;\n    \n        uniform mat4 u_normal_matrix;\n        uniform mat4 u_personal_matrix;\n        uniform mat4 u_model_view_matrix;\n        uniform mat4 u_projection_matrix;\n\n        // should be uniforms constances\n        uniform vec3 u_ambient_light;\n        uniform vec3 u_dir_light_color;\n        uniform vec3 u_dir_light_vector;  \n\n        // varying vec2 v_texture_coord;\n        varying vec3 v_lighting;\n    \n        void main(void) {\n\n            gl_Position = u_projection_matrix * u_model_view_matrix * u_personal_matrix * a_vertex_position;\n            // v_texture_coord = a_texture_coord;\n        \n            // Apply lighting effect\n            // highpr is removed\n            vec4 transformedNormal = u_normal_matrix * vec4(a_vertex_normal, 1.0);\n            float directional = max(dot(transformedNormal.xyz, u_dir_light_vector), 0.0);\n            v_lighting = (u_ambient_light + (u_dir_light_color * directional));\n        }\n        ","\n        precision mediump float;\n\n        // Calculates the diffuse factor produced by the light illumination  \n        // if done like this, color could look nicer\n        // float diffuseFactor(vec3 normal, vec3 light_direction) {\n        //     float df = dot(normalize(normal), normalize(light_direction));\n        //     if (gl_FrontFacing) {\n        //         df = -df;\n        //     }\n        //     return max(0.0, df);\n        // }\n\n        varying vec3 v_lighting;\n\n        void main() {\n\n            // Fragment shader output\n            gl_FragColor = vec4(v_lighting, 1.0);\n        }\n        "),t.useProgram(this.program),this.count=0,this.size=0,this.u_normal_matrix=t.getUniformLocation(this.program,"u_normal_matrix"),this.u_model_view_matrix=t.getUniformLocation(this.program,"u_model_view_matrix"),this.u_projection_matrix=t.getUniformLocation(this.program,"u_projection_matrix"),this.u_personal_matrix=t.getUniformLocation(this.program,"u_personal_matrix"),this.u_ambient_light=t.getUniformLocation(this.program,"u_ambient_light"),this.u_dir_light_color=t.getUniformLocation(this.program,"u_dir_light_color"),this.u_dir_light_vector=t.getUniformLocation(this.program,"u_dir_light_vector"),this.a_vertex_position=t.getAttribLocation(this.program,"a_vertex_position"),this.a_vertex_postition_buffer=t.createBuffer(),this.a_vertex_normal=t.getAttribLocation(this.program,"a_vertex_normal"),this.a_vertex_normal_buffer=t.createBuffer(),this.a_vertex_ambi=t.getAttribLocation(this.program,"a_vertex_ambi"),this.a_vertex_ambi_buffer=t.createBuffer(),this.index_buffer=t.createBuffer()}set(t,e=o.StaticDraw){let i=this.gl;this.setShallow(i,t);let s=t.getNormalType();if(s==r.Face){i.useProgram(this.program),this.count=t.mesh.links.data.length;let r=MultiVector3_MultiVector3.new(this.count),s=MultiVector3_MultiVector3.new(this.count),a=new Float32Array(this.count);t.mesh.links.count();for(let e=0;e<t.mesh.links.count();e++){let i=t.norms.get(e);t.mesh.links.getRow(e).forEach(((o,n)=>{let h=3*e+n;r.set(h,t.mesh.verts.get(o)),s.set(h,i),a[h]=1}))}i.bindBuffer(i.ARRAY_BUFFER,this.a_vertex_postition_buffer),i.vertexAttribPointer(this.a_vertex_position,3,i.FLOAT,!1,0,0),i.bufferData(i.ARRAY_BUFFER,r.slice().data.buffer,e),i.bindBuffer(i.ARRAY_BUFFER,this.a_vertex_normal_buffer),i.vertexAttribPointer(this.a_vertex_normal,3,i.FLOAT,!1,0,0),i.bufferData(i.ARRAY_BUFFER,s.slice().data.buffer,e),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,this.index_buffer),i.bufferData(i.ELEMENT_ARRAY_BUFFER,getDefaultIndices(this.count),e)}else if(s==r.Vertex){i.useProgram(this.program);let r=e;t.ambi,t.mesh.links.count();this.count=t.mesh.links.data.length,i.bindBuffer(i.ARRAY_BUFFER,this.a_vertex_postition_buffer),i.vertexAttribPointer(this.a_vertex_position,3,i.FLOAT,!1,0,0),i.bufferData(i.ARRAY_BUFFER,t.mesh.verts.slice().data,r),i.bindBuffer(i.ARRAY_BUFFER,this.a_vertex_normal_buffer),i.vertexAttribPointer(this.a_vertex_normal,3,i.FLOAT,!1,0,0),i.bufferData(i.ARRAY_BUFFER,t.norms.slice().data,r),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,this.index_buffer),i.bufferData(i.ELEMENT_ARRAY_BUFFER,t.mesh.links.data,r)}else console.log("cannot render with this normal data")}setShallow(t,e){t.useProgram(this.program),t.uniformMatrix4fv(this.u_personal_matrix,!1,e.position.data);let r=e.color,i=r.map((t=>.25*t));i[2]=Math.min(1,1.05*i[2]);let s=r.map((t=>t));s[0]=Math.min(1,1.05*s[0]),s[1]=Math.min(1,1.05*s[1]),s[2]=Math.min(1,1*s[2]),t.uniform3fv(this.u_ambient_light,i.slice(0,3)),t.uniform3fv(this.u_dir_light_color,s.slice(0,3))}render(t){let e=this.gl,r=t.camera;e.useProgram(this.program),e.uniformMatrix4fv(this.u_normal_matrix,!1,Matrix4_Matrix4.newIdentity().data),e.uniformMatrix4fv(this.u_model_view_matrix,!1,r.worldMatrix.data),e.uniformMatrix4fv(this.u_projection_matrix,!1,r.projectMatrix.data);r.getMouseWorldRay(e.canvas.width,e.canvas.height,!1).normal;e.uniform3fv(this.u_dir_light_vector,Vector3_Vector3.unitX().add(Vector3_Vector3.unitY()).add(Vector3_Vector3.unitZ()).normalize().toArray()),e.enableVertexAttribArray(this.a_vertex_position),e.bindBuffer(e.ARRAY_BUFFER,this.a_vertex_postition_buffer),e.vertexAttribPointer(this.a_vertex_position,3,e.FLOAT,!1,0,0),e.enableVertexAttribArray(this.a_vertex_normal),e.bindBuffer(e.ARRAY_BUFFER,this.a_vertex_normal_buffer),e.vertexAttribPointer(this.a_vertex_normal,3,e.FLOAT,!1,0,0),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.index_buffer),e.drawElements(e.TRIANGLES,this.count,e.UNSIGNED_SHORT,0)}}class TextureMeshShader extends OldShader_OldShader{constructor(t){let e;e="\n            precision mediump float;\n    \n            varying vec2 v_texcoord;\n\n            uniform vec2 u_texture_size;\n            uniform sampler2D u_texture;\n    \n            // make pixel-perfect, but round it so it has no artefacts.\n            vec2 snapPixel(vec2 uv, vec2 size, vec2 alpha) {\n                vec2 pixel_uv = uv * size;\n                vec2 x = fract(pixel_uv);\n                vec2 x_ = clamp(0.5 / alpha * x, 0.0, 0.5) +\n                          clamp(0.5 / alpha * (x - 1.0) + 0.5, 0.0, 0.5);\n                return clamp((floor(pixel_uv) + x_) / size, 0.0, 0.9999);\n            } \n\n            void main() {\n                vec2 coord = snapPixel(v_texcoord, u_texture_size, vec2(0.02));\n                gl_FragColor = texture2D(u_texture, coord);\n            }\n            ",super(t,"\n        // precision mediump int;\n        // precision mediump float;\n\n        attribute vec4 a_position;\n        attribute vec2 a_texcoord;\n\n        uniform mat4 u_transform;\n\n        varying vec2 v_texcoord;\n\n        void main() {\n            gl_Position = u_transform * a_position;\n            v_texcoord = a_texcoord;\n        }\n        ",e),t.useProgram(this.program),this.count=0,this.size=0,this.u_transform=t.getUniformLocation(this.program,"u_transform"),this.u_texture_size=t.getUniformLocation(this.program,"u_texture_size"),this.u_texture=t.getUniformLocation(this.program,"u_texture"),this.a_position=t.getAttribLocation(this.program,"a_position"),this.a_position_buffer=t.createBuffer(),this.a_texcoord=t.getAttribLocation(this.program,"a_texcoord"),this.a_texcoord_buffer=t.createBuffer(),this.index_buffer=t.createBuffer(),this.texture_id=HelpGl.getNextTextureID(),this.texture=t.createTexture()}static new(t){return new TextureMeshShader(t)}set(t,e){let r=this.gl;t.texture?(r.useProgram(this.program),this.count=t.mesh.links.data.length,r.bindBuffer(r.ARRAY_BUFFER,this.a_position_buffer),r.vertexAttribPointer(this.a_position,3,r.FLOAT,!1,0,0),r.bufferData(r.ARRAY_BUFFER,t.mesh.verts.slice().data,e),r.bindBuffer(r.ARRAY_BUFFER,this.a_texcoord_buffer),r.vertexAttribPointer(this.a_texcoord,2,r.FLOAT,!1,0,0),r.bufferData(r.ARRAY_BUFFER,t.uvs.toMatrixSlice().data,e),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,this.index_buffer),r.bufferData(r.ELEMENT_ARRAY_BUFFER,new Uint16Array(t.mesh.links.data),e),r.activeTexture(r.TEXTURE0+this.texture_id),r.bindTexture(r.TEXTURE_2D,this.texture),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t.texture),r.uniform2f(this.u_texture_size,t.texture.width,t.texture.height),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.generateMipmap(r.TEXTURE_2D)):console.warn("Mesh does not contain a texture!")}render(t){let e=this.gl,r=t.camera.totalMatrix;e.useProgram(this.program),e.uniformMatrix4fv(this.u_transform,!1,r.data),e.uniform1i(this.u_texture,this.texture_id),e.activeTexture(e.TEXTURE0+this.texture_id),e.bindTexture(e.TEXTURE_2D,this.texture),e.enableVertexAttribArray(this.a_position),e.bindBuffer(e.ARRAY_BUFFER,this.a_position_buffer),e.vertexAttribPointer(this.a_position,3,e.FLOAT,!1,0,0),e.enableVertexAttribArray(this.a_texcoord),e.bindBuffer(e.ARRAY_BUFFER,this.a_texcoord_buffer),e.vertexAttribPointer(this.a_texcoord,2,e.FLOAT,!1,0,0),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.index_buffer),e.drawElements(e.TRIANGLES,this.count,e.UNSIGNED_SHORT,0)}setAndRender(t,e){this.set(t,o.DynamicDraw),this.render(e)}}class DebugRenderer{constructor(t,e,r){this.gl=t,this.shaders=e,this.activeShaders=r}static new(t){return new DebugRenderer(t,new Map,new Set)}clear(){this.shaders.clear(),this.activeShaders.clear()}set(t,e,...r){e||(e=function createRandomGUID(){return function createGUID(t){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){var r=16*t.get()|0;return("x"==e?r:3&r|8).toString(16)}))}(Random_Random.fromRandom())}().slice(0,8));let i=this.shaders.get(e);return i?(this.multiSet(e,t,...r),i):this.add(e,t,...r)}addUi(t){t.clear();for(let[e,r]of this.shaders){let r=Parameter.newBoolean(e,!0);t.addBooleanParameter(r,(()=>{this.onChange(e,0!==r.state)}))}}onChange(t,e){e?this.activeShaders.add(t):this.activeShaders.delete(t)}render(t){for(let e of this.activeShaders)this.shaders.get(e).render(t)}multiSet(t,e,...r){this.gl;let i=this.shaders.get(t);if(e instanceof MultiVector3_MultiVector3)i.set(e);else if(e instanceof ShaderMesh_ShaderMesh)i.set(e);else if(e instanceof Mesh_Mesh){let t=e.ToShaderMesh();i.set(t)}else if(e instanceof BiSurface){let t=e.buffer().ToShaderMesh();i.set(t)}else if(e instanceof Curve){let t=e.buffer();i.set(t)}else if(e instanceof Polyline){let t=MultiLine.fromPolyline(e);i.set(t)}else if(e instanceof Plane_Plane){let t=MultiLine.fromPlane(e);i.set(t)}else if(e instanceof MultiLine)i.set(e);else{if(!(e instanceof ImageMesh))return void console.error("MultiRenderer cannot render: ",e);i.set(e.buffer(),o.StaticDraw)}}add(t,e,...r){let i,s=this.gl;if(e instanceof MultiVector3_MultiVector3)i=new DotShader(s,...r),i.set(e);else if(e instanceof ShaderMesh_ShaderMesh)i=new ShadedMeshShader(s),i.set(e);else if(e instanceof Mesh_Mesh){i=new MeshDebugShader(s);let t=e.ToShaderMesh();i.set(t)}else if(e instanceof BiSurface){i=new MeshDebugShader(s,...r);let t=e.buffer().ToShaderMesh();i.set(t)}else if(e instanceof Curve){i=new LineShader(s,...r);let t=e.buffer();i.set(t)}else if(e instanceof Polyline){i=new LineShader(s,...r);let t=MultiLine.fromPolyline(e);i.set(t)}else if(e instanceof Plane_Plane){i=new LineShader(s,...r);let t=MultiLine.fromPlane(e);i.set(t)}else if(e instanceof MultiLine)i=new LineShader(s,...r),i.set(e);else{if(!(e instanceof ImageMesh))return void console.error("MultiRenderer cannot render: ",e);i=new TextureMeshShader(s),i.set(e.buffer(),o.StaticDraw)}return this.shaders.set(t,i),this.activeShaders.add(t),i}}class ImageRenderer{constructor(t,e,r=10,i=2,s=[],a=[]){this.gl=t,this.stdSize=e,this.gap=r,this.scale=i,this.images=s,this.shaders=a}static new(t,e){return new ImageRenderer(t,e)}add(t){this.images.push(t),this.shaders.push(new TextureMeshShader(this.gl))}buffer(){let t=0;this.images.forEach(((e,r)=>{let i=ShaderMesh_ShaderMesh.fromImage(e,Plane_Plane.WorldXY().moveTo(Vector3_Vector3.new(t,0,0)),!1,100);this.shaders[r].set(i,o.StaticDraw),t+=e.width+this.gap}))}render(t){this.shaders.forEach((e=>{e.render(t)}))}}class ShaderProgram_ShaderProgram{constructor(t,e,r){this.drawElementsOrArrays=()=>{},this.method=l.Arrays,this.mode=h.Triangles,this.drawCount=0,this.drawOffset=0,this.gl=t,this.program=HelpGl.createProgramFromScripts(t,e,r),this.init()}init(){this.useProgram(),this.uniforms=new Uniforms(this.gl,this.program),this.attributes=new Attributes(this.gl,this.program),this.drawCount=0,this.mode=this.onInit(),this.setDrawMethod()}load(t,e=o.StaticDraw){this.useProgram(),this.drawCount=this.onLoad(t,e)}draw(t){this.useProgram(),this.onDraw(t),this.uniforms.bindAll(),this.attributes.bindAll(),this.drawElementsOrArrays()}loadAndDraw(t,e){this.load(t,o.DynamicDraw),this.draw(e)}useProgram(){this.gl.useProgram(this.program)}setDrawMethod(){this.attributes.has(f)?(this.method=l.Elements,this.drawElementsOrArrays=this.drawElements):(this.method=l.Arrays,this.drawElementsOrArrays=this.drawArrays)}drawElements(){this.gl.drawElements(this.mode,this.drawCount,this.attributes.indexAttributeElementType,this.drawOffset)}drawArrays(){this.gl.drawArrays(this.mode,this.drawOffset,this.drawCount)}}class AmbientMeshShader extends ShaderProgram_ShaderProgram{constructor(t){super(t,"\n        precision mediump int;\n        precision mediump float;\n\n        attribute vec4 vertexPosition;\n        uniform mat4 worldMatrix;\n\n        void main() {\n            gl_Position = worldMatrix * vertexPosition;\n        }\n        ","\n        precision mediump int;\n        precision mediump float;\n\n        uniform vec4 ambientColor;\n\n        void main () {\n            gl_FragColor = ambientColor;\n        }\n        ")}onInit(){return this.attributes.add("vertexPosition",3),this.attributes.addIndex(d.UnsignedShort),this.uniforms.add("ambientColor",4,[1,1,1,1]),this.uniforms.add("worldMatrix",16),h.Triangles}onLoad(t,e){return this.attributes.load("vertexPosition",t.verts.slice().data,e),this.attributes.loadIndex(t.links.data,e),t.links.data.length}loadColor(t){this.useProgram(),this.uniforms.loadColor("ambientColor",t)}onDraw(t){this.uniforms.loadMatrix4("worldMatrix",t.camera.totalMatrix)}}class Billboard{constructor(t,e){this.position=t,this.image=e}static new(t,e){return new Billboard(t,e)}toPayload(){return{positions:MultiVector3_MultiVector3.fromList([this.position]),uvs:MultiVector2_MultiVector2.fromData([0,0]),uvSizes:MultiVector2_MultiVector2.fromData([this.image.width,this.image.height]),texture:this.image}}}class BillboardShader extends ShaderProgram_ShaderProgram{constructor(t,e=[1,1,1,1],r=100){super(t,"\n        // Vertex Shader\n        precision mediump int;\n        precision mediump float;\n        \n        uniform mat4  u_transform;\n        uniform vec3  u_camera_position;\n        uniform float u_size;\n \n        attribute vec3 a_vertex;\n        attribute vec2 a_uv;\n        attribute vec2 a_uv_wh;\n        \n        varying vec2  uv;\n        varying vec2  uv_size;\n        varying float point_size;\n        \n        void main() {\n        \n            // edit size based on distance from camera\n            float value = 15.0; // TODO how to derrive this???\n            float dis = distance(a_vertex, u_camera_position);\n            float size = u_size / (dis / value);\n            gl_PointSize = size;\n            point_size = size;\n\n            // Pass the point's texture coordinate to the fragment shader\n            uv = a_uv;\n            uv_size = a_uv_wh;\n            \n            // Transform the location of the vertex.\n            gl_Position = u_transform * vec4(a_vertex, 1.0);\n        }\n\n        ","\n\n        precision mediump int;\n        precision mediump float;\n    \n        uniform sampler2D u_texture;\n        uniform vec2      u_texture_size;  // delta_s, delta_t\n        \n        varying vec2  uv;\n        varying vec2  uv_size;\n        varying float point_size; // can this be replaced with u_size ??\n\n\n        void main() {\n            // NOTE this can be done way easier, we dont need uv sized, we just need to go to pixel space\n            \n            // make pixel-perfect, but round it so it has no artefacts.\n            // coord ~= gp_PointCoord\n            vec2 sprite_uv = gl_PointCoord * uv_size;\n            vec2 alpha = vec2(0.03);\n            vec2 x = fract(sprite_uv);\n            vec2 x_ = clamp(0.5 / alpha * x, 0.0, 0.5) +\n                      clamp(0.5 / alpha * (x - 1.0) + 0.5, 0.0, 0.5);\n            vec2 coord = (floor(sprite_uv) + x_);\n\n            // take the right part of the spritemap\n            vec2 texture_fraction = 1.0 / u_texture_size;\n            vec2 texture_topleft = uv * texture_fraction;\n            vec2 realCoord = texture_topleft + coord / u_texture_size;\n\n            gl_FragColor = texture2D(u_texture, realCoord);\n        }\n        "),this.uniforms.add("u_transform",16),this.radius=this.uniforms.add("u_size",1,[r]),this.color=this.uniforms.add("u_color",4,e),this.uniforms.add("u_camera_position",3),this.uniforms.add("u_texture_size",2,[16,16]),this.uniforms.addTexture("u_texture")}onInit(){return this.attributes.add("a_vertex",3),this.attributes.add("a_uv",2),this.attributes.add("a_uv_wh",2),h.Points}onLoad(t,e){return t instanceof Billboard&&(t=t.toPayload()),this.attributes.load("a_vertex",ToFloatMatrix(t.positions).data,e),this.attributes.load("a_uv",ToFloatMatrix(t.uvs).data,e),this.attributes.load("a_uv_wh",ToFloatMatrix(t.uvSizes).data,e),this.uniforms.loadTexture("u_texture",t.texture),this.uniforms.load2("u_texture_size",Vector2_Vector2.new(t.texture.width,t.texture.height)),t.positions.count}onDraw(t){this.uniforms.load3("u_camera_position",t.camera.pos.scaled(-1)),this.uniforms.loadMatrix4("u_transform",t.camera.totalMatrix)}}class DepthMeshShader extends ShaderProgram_ShaderProgram{constructor(t){super(t,"\n        precision mediump int;\n        precision mediump float;\n\n        attribute vec4 vertexPosition;\n\n        uniform mat4 worldMatrix;\n\n        void main() {\n            gl_Position = worldMatrix * vertexPosition;\n        }\n        ","\n        precision mediump int;\n        precision mediump float;\n\n        uniform vec4 ambientColor;\n\n        uniform float far;\n        uniform float near;\n\n        void main () {\n\n            float depth = gl_FragCoord.z * 0.06 + 0.6;\n            gl_FragColor = vec4(depth);\n        }\n        ")}onInit(){return this.attributes.add("vertexPosition",3),this.attributes.addIndex(d.UnsignedShort),this.uniforms.add("ambientColor",4,[1,1,1,1]),this.uniforms.add("worldMatrix",16),this.uniforms.add("far",1),this.uniforms.add("near",1),h.Triangles}onLoad(t,e){return this.attributes.load("vertexPosition",t.verts.slice().data,e),this.attributes.loadIndex(t.links.data,e),t.links.data.length}loadColor(t){this.useProgram(),this.uniforms.loadColor("ambientColor",t)}onDraw(t){this.uniforms.loadMatrix4("worldMatrix",t.camera.totalMatrix),this.uniforms.load("far",t.camera.zFar),this.uniforms.load("near",t.camera.zNear)}}class DotShaderWithHeight extends ShaderProgram_ShaderProgram{constructor(t,e=5,r=[1,1,1,1],i,s=!0){let a="\n        precision mediump int;\n        precision mediump float;\n\n        uniform mat4 u_transform;\n        uniform vec4 u_color;\n        uniform float u_range;\n        uniform float u_size;\n\n        attribute vec3 a_vertex;\n\n        varying vec4 v_color;\n\n        void main() {\n            // Set the size of a rendered point.\n            gl_PointSize = u_size;\n            float factor = a_vertex.z / u_range;\n\n            v_color = vec4(u_color.xyz * factor, 1);\n\n            // Transform the location of the vertex.\n            gl_Position = u_transform * vec4(a_vertex, 1.0);\n        }\n\n        ";super(t,a,s?"\n        precision mediump int;\n        precision mediump float;\n\n        uniform vec4 u_color;\n        // vec2 center = vec2(0.5, 0.5);\n\n        varying vec4 v_color;\n\n        void main() {\n            gl_FragColor = v_color;\n        }\n        ":"\n        precision mediump int;\n        precision mediump float;\n\n        uniform vec4 u_color;\n        vec2 center = vec2(0.5, 0.5);\n\n        varying vec4 v_color;\n\n        void main() {\n            if (distance(center, gl_PointCoord) > 0.5) {\n               discard;\n            }\n            gl_FragColor = v_color;\n        }\n        "),this.uniforms.add("u_transform",16),this.size=this.uniforms.add("u_size",1,[e]),this.color=this.uniforms.add("u_color",4,r),this.height=this.uniforms.add("u_range",1,[i])}onInit(){return this.attributes.add("a_vertex",3),h.Points}onLoad(t,e){let r=ToFloatMatrix(t);return this.attributes.load("a_vertex",r.data,e),r.count()}onDraw(t){this.uniforms.loadMatrix4("u_transform",t.camera.totalMatrix)}}class PhongShader extends ShaderProgram_ShaderProgram{constructor(t){super(t,"\n        precision mediump int;\n        precision mediump float;\n\n        attribute vec4 position;\n        attribute vec2 uv;\n        attribute vec3 normal;\n        attribute float occlusion;\n        \n        uniform mat4 worldMatrix;\n        uniform mat4 worldInverse;\n        uniform mat4 modelMatrix;\n        uniform vec3 sunPosition;\n        uniform vec3 cameraPosition;\n\n        varying vec2 varUv;\n        varying vec3 varNormal;\n        varying vec3 varToSun;\n        varying vec3 varToCamera;\n        varying float varVectorOcclusion;\n\n        void main() {\n            vec4 worldPosition = modelMatrix * position;\n            gl_Position = worldMatrix * worldPosition;\n            \n            varUv = uv;\n            varNormal = mat3(modelMatrix) * normal;\n            varToSun = sunPosition - worldPosition.xyz;\n            varToCamera = cameraPosition - worldPosition.xyz;\n            varVectorOcclusion = occlusion;\n        }\n        ","\n        precision mediump int;\n        precision mediump float;\n\n        uniform vec4 ambient;\n        uniform vec4 diffuse;\n        uniform vec4 specular;\n        uniform vec4 occluded;\n        uniform float opacity;\n        uniform float specularDampner;\n\n        varying float varVectorOcclusion;\n        varying vec2 varUv;\n        varying vec3 varNormal;\n        varying vec3 varToSun;\n        varying vec3 varToCamera;\n\n        // float smooth(float t) {\n        //     // Fade function as defined by Ken Perlin.  This eases coordinate values\n        //     // so that they will ease towards integral values.  This ends up smoothing\n        //     // the final output.\n        //     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0); // 6t^5 - 15t^4 + 10t^3\n        // }\n    \n        void main () {\n\n            // normalize \n            // vec3 toSun = varToSun;\n            // vec3 normal = varNormal;\n            // vec3 toCamera = varToCamera;\n\n            vec3 toSun = normalize(varToSun);\n            vec3 normal = normalize(varNormal);\n            vec3 toCamera = normalize(varToCamera);\n            \n            // ambient\n            vec4 ambientColor = ambient;\n\n            // occluded (TODO: expand upon this using ambient occlusion)\n            float sunDot = dot(normal, toSun);\n            float occlusion = clamp(sunDot, -1.0, 0.0) * -1.0;\n            occlusion = min(occlusion + varVectorOcclusion, 1.0);\n            vec4 occludedColor = occluded * occlusion + ambientColor * (1.0 - occlusion);\n\n            // diffuse \n            float diffusion = max(0.0, sunDot);\n            vec4 diffuseColor = diffuse * diffusion; \n\n            // specular\n            vec3 reflectedLight = reflect(-toSun, normal);\n            float reflection = max(0.0, dot(reflectedLight, toCamera));\n            reflection = pow(reflection, specularDampner);\n            // reflection = smooth(reflection);\n            vec4 specularColor = vec4(reflection * specular.xyz, 1.0); \n\n            gl_FragColor = max(occludedColor, diffuseColor) + specularColor;\n            // gl_FragColor = vec4(normal, 1.0);\n        }\n        ")}static new(t){return new PhongShader(t)}onInit(){return this.attributes.add("position",3),this.attributes.add("uv",2),this.attributes.add("normal",3),this.attributes.add("occlusion",1),this.attributes.addIndex(d.UnsignedShort),this.uniforms.add("worldMatrix",16),this.uniforms.add("worldInverse",16),this.uniforms.add("modelMatrix",16),this.uniforms.add("sunPosition",3),this.uniforms.add("cameraPosition",3),this.uniforms.add("ambient",4,Color.fromHSL(0,0).data),this.uniforms.add("diffuse",4,[1,1,1,1]),this.uniforms.add("specular",4,[1,1,1,1]),this.uniforms.add("occluded",4,[.2,.2,.2,1]),this.uniforms.add("opacity",1,[1]),this.uniforms.add("specularDampner",1,[.5]),h.Triangles}onLoad(t,e){return this.loadPosition(t.position),this.loadMesh(t.mesh,e),this.loadMaterial(t.material),t.mesh.maxSize}loadOcclusion(t,e){this.useProgram(),this.attributes.load("occlusion",t,e)}loadPosition(t){this.useProgram(),this.uniforms.loadMatrix4("modelMatrix",t)}loadMesh(t,e){this.useProgram(),this.attributes.loadIndex(t.links.data,e),this.attributes.load("position",t.verts.matrix.data,e),this.attributes.load("uv",t.uvs.matrix.data,e),this.attributes.load("normal",t.normals.matrix.data,e)}loadMaterial(t){this.useProgram(),this.uniforms.loadColor("ambient",t.ambient),this.uniforms.loadColor("diffuse",t.diffuse),this.uniforms.loadColor("specular",t.specular),this.uniforms.loadColor("occluded",t.occluded),this.uniforms.load("opacity",t.opacity),this.uniforms.load("specularDampner",t.specularDampner)}onDraw(t){this.uniforms.loadMatrix4("worldMatrix",t.camera.totalMatrix),this.uniforms.loadMatrix4("worldInverse",t.camera.inverseTransposeMatrix),this.uniforms.load3("sunPosition",t.sun.pos),this.uniforms.load3("cameraPosition",t.camera.getActualPosition())}}class ZebraShader extends ShaderProgram_ShaderProgram{constructor(t,e=!0){super(t,"\n        precision mediump int;\n        precision mediump float;\n\n        attribute vec4 position;\n        attribute vec2 uv;\n        attribute vec3 normal;\n        \n        uniform mat3 normalMatrix;\n        uniform mat4 worldMatrix;\n        uniform mat4 worldInverse;\n        uniform mat4 modelMatrix;\n        uniform vec3 sunPosition;\n        uniform vec3 cameraPosition;\n\n        varying vec2 varUv;\n        varying vec3 varNormal;\n        varying vec3 varToSun;\n        varying vec3 varToCamera;\n\n        void main() {\n            vec4 worldPosition = modelMatrix * position;\n            gl_Position = worldMatrix * worldPosition;\n            \n            varUv = uv;\n            varNormal = normalMatrix * normal;\n            varToSun = sunPosition - worldPosition.xyz;\n            varToCamera = cameraPosition - worldPosition.xyz;\n        }\n        ","\n        precision mediump int;\n        precision mediump float;\n\n        varying vec2 varUv;\n        varying vec3 varNormal;\n        varying vec3 varToSun;\n        varying vec3 varToCamera;\n    \n        uniform float zebraStripeCount;\n\n        // make from '/' curve a './' curve\n        float flattenPeakClamp(float x, float alpha) {\n            float beta = 0.5 - alpha;\n            float leftover = 1.0 - 2.0 * beta;\n            return clamp((x-beta) * (1.0 / leftover), 0.0, 1.0);\n        }\n\n        // make from '/' curve a '/' curve\n        float hillClamp(float x) {\n            float clamped = clamp(x, 0.0, 0.5) - clamp(x - 0.5, 0.0, 0.5);\n            return clamped * 2.0;\n        }\n\n        void main () {\n\n            // normalize \n            vec3 toSun = normalize(varToSun);\n            vec3 normal = normalize(varNormal);\n            vec3 toCamera = normalize(varToCamera);\n\n            // specular\n            vec3 reflectedLight = reflect(-toSun, normal);\n            float factor = dot(reflectedLight, toCamera);\n            factor = hillClamp(fract(factor * zebraStripeCount));\n            factor = flattenPeakClamp(factor, 0.05);\n\n            vec4 specularColor = vec4(vec3(factor), 1.0); \n\n            gl_FragColor = specularColor;\n        }\n        ")}onInit(){return this.attributes.add("position",3),this.attributes.add("uv",2),this.attributes.add("normal",3),this.attributes.addIndex(d.UnsignedShort),this.uniforms.add("worldMatrix",16),this.uniforms.add("worldInverse",16),this.uniforms.add("modelMatrix",16),this.uniforms.add("normalMatrix",9),this.uniforms.add("sunPosition",3),this.uniforms.add("cameraPosition",3),this.uniforms.add("zebraStripeCount",1,[7]),h.Triangles}onLoad(t,e){return this.loadPosition(t.position),this.loadMesh(t.mesh,e),t.mesh.maxSize}loadPosition(t){this.useProgram();t.decompose()[1];this.uniforms.loadMatrix4("modelMatrix",t),this.uniforms.loadMatrix3("normalMatrix",Matrix3_Matrix3.newIdentity())}loadMesh(t,e){this.useProgram(),this.attributes.loadIndex(t.links.data,e),this.attributes.load("position",t.verts.matrix.data,e),this.attributes.load("uv",t.uvs.matrix.data,e),this.attributes.load("normal",t.normals.matrix.data,e)}loadZebraStripeCount(t){this.uniforms.load("zebraStripeCount",t)}onDraw(t){this.uniforms.loadMatrix4("worldMatrix",t.camera.totalMatrix),this.uniforms.load3("sunPosition",t.sun.pos),this.uniforms.load3("cameraPosition",t.camera.getActualPosition())}}class GraphDebugShader extends MultiShader{constructor(t,e=[1,0,0,.25],r=[1,0,0,1],i=!0){super(),this.faceRend=new SimpleMeshShader(t,e),this.lineRend=new LineShader(t,r),this.pointRend=new DotShader(t,7,r,!1),i&&(this.normRend=new NormalShader(t))}set(t,e=o.StaticDraw){this.pointRend.set(t.allVertPositions(),e),this.lineRend.set(t.toLines(),e)}render(t){this.pointRend.render(t),this.lineRend.render(t)}setAndRender(t,e){throw new Error("Method not implemented.")}}class Camera{constructor(t,e=1,r=!1,i=!0){this.angleAlpha=0,this.angleBeta=0,this.mousePos=Vector2_Vector2.zero(),this.fov=20*Math.PI/100,this.zFar=1e4,this.zNear=.01,this.speed=10,this.worldPlane=Plane_Plane.WorldXY(),this.canMove=r,this.canControl=i,this.pos=new Vector3_Vector3(0,0,0),this.z_offset=-e,this.offset=new Vector3_Vector3(0,0,-e),this.updateMatrices(t)}new(t,e=1,r=!1){return new Camera(t,e,r)}update(t){this.updateControls(t),this.updateMatrices(t.canvas),this.updateClick(t),t.IsKeyPressed("p")&&(console.log(`camera state: [${this.pos.x.toPrecision(5)}, ${this.pos.y.toPrecision(5)}, ${this.pos.z.toPrecision(5)}, ${this.z_offset}, ${this.angleAlpha},${this.angleBeta}]`),console.log("speed is now: "+this.speed))}getActualPosition(){return this.inverseWorldMatrix.multiplyVector(Vector3_Vector3.zero())}getState(){return[this.pos.x,this.pos.y,this.pos.z,this.z_offset,this.angleAlpha,this.angleBeta]}setState(t){this.pos.x=t[0],this.pos.y=t[1],this.pos.z=t[2],this.z_offset=t[3],this.angleAlpha=t[4],this.angleBeta=t[5]}set(t,e,r){this.z_offset=t,this.angleAlpha=e,this.angleBeta=r}updateMatrices(t){this.worldMatrix=this.getWorldMatrix(),this.projectMatrix=this.getProjectionMatrix(t),this.totalMatrix=this.worldMatrix.multiplied(this.projectMatrix),this.inverseWorldMatrix=this.worldMatrix.inverse(),this.inverseTransposeMatrix=this.inverseWorldMatrix.transpose()}lookat(t,e){Matrix4_Matrix4.newLookAt(t,e,this.worldPlane.khat)}updateClick(t){}updateControls(t){if(!this.canControl)return;let e=1.2*t.scrollValue;this.offset.z=Math.min(-.001,this.z_offset-e),t.IsKeyPressed("shift")&&(this.speed*=2),t.IsKeyPressed("control")&&(this.speed=Math.max(.5*this.speed,.1));let r=this.mousePos.clone();this.mousePos=t.mousePos.clone();let i=r.clone().sub(this.mousePos);function relativeUnitY(t){return Matrix4_Matrix4.newZRotation(t).multiplyVector(Vector3_Vector3.unitY())}function relativeUnitX(t){return Matrix4_Matrix4.newZRotation(t).multiplyVector(Vector3_Vector3.unitX())}this.getMouseWorldRay(t.canvas.width,t.canvas.height),t.mouseRightDown&&(this.angleAlpha=GeonMath.clamp(this.angleAlpha+.01*i.y,0,Math.PI),this.angleBeta+=-.01*i.x),this.canMove&&(t.IsKeyDown("s")&&this.pos.add(relativeUnitY(-this.angleBeta).scale(.01*this.speed)),t.IsKeyDown("w")&&this.pos.add(relativeUnitY(-this.angleBeta).scale(-.01*this.speed)),t.IsKeyDown("a")&&this.pos.add(relativeUnitX(-this.angleBeta).scale(.01*this.speed)),t.IsKeyDown("d")&&this.pos.add(relativeUnitX(-this.angleBeta).scale(-.01*this.speed)),t.IsKeyDown("q")&&(this.pos.z+=.01*this.speed),t.IsKeyDown("e")&&(this.pos.z-=.01*this.speed))}getCameraPoint(){return this.worldMatrix.inverse().multiplyVector(new Vector3_Vector3(0,0,0))}getMouseWorldRay(t,e,r=!0){let i=this.mousePos,s=t/e,a=(i.x/t-.5)*s,o=i.y/e-.5,n=.5/Math.tan(this.fov/2),h=this.worldMatrix.inverse(),l=h.multiplyVector(new Vector3_Vector3(0,0,0)),d=h.multiplyVector(new Vector3_Vector3(1,0,0)),c=h.multiplyVector(new Vector3_Vector3(0,1,0)),u=h.multiplyVector(new Vector3_Vector3(0,0,-1)),m=d.sub(l).normalize(),f=c.sub(l).normalize(),g=u.sub(l).normalize(),p=r?l.added(g.scaled(n)).add(m.scaled(a)).add(f.scaled(-o)):l.added(g.scaled(n));return Ray.fromPoints(l,p)}getWorldMatrix(){let t=this.offset,e=this.angleAlpha,r=this.angleBeta,i=(new Matrix4_Matrix4([1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1]),Matrix4_Matrix4.newTranslation(this.pos.x,this.pos.y,this.pos.z)),s=Matrix4_Matrix4.newTranslation(t.x,t.y,t.z),a=Matrix4_Matrix4.newXRotation(e),o=Matrix4_Matrix4.newZRotation(r).multiply(a);return i.multiply(o).multiply(s)}getProjectionMatrix(t){let e=t.width/t.height;return Matrix4_Matrix4.newPerspective(this.fov,e,this.zNear,this.zFar)}}class Material{constructor(t,e,r,i,s,a,o,n){this.ambient=t,this.diffuse=e,this.specular=r,this.occluded=i,this.specularDampner=s,this.opacity=a,this.texture=o,this.bumpmap=n}static fromObjMtl(){throw"TODO!!!"}static newPurple(){return new Material(Color.fromHex("#35006a"),Color.fromHex("#ff0080"),Color.fromHex("#513600"),Color.fromHex("#1b0035"),3.195,1)}static default(){return new Material(Color.fromHex("#4f009d"),Color.fromHex("#06ffff"),Color.fromHex("#58593e"),Color.fromHex("#1b0035"),3.195,1)}}class Model{constructor(t,e,r){this.position=t,this.mesh=e,this.material=r}static default(){return new Model(Matrix4_Matrix4.newIdentity(),Mesh_Mesh.newSphere(Vector3_Vector3.zero(),1,6,12),Material.default())}}class Light{constructor(t,e){this.pos=t,this.color=e}static new(t,e=Color.fromRGB()){return new Light(t,e)}static newDirectional(t,e=Color.fromRGB()){return new Light(t,e)}}class Scene{constructor(t,e=Light.new(Vector3_Vector3.new(30,40,50),Color.fromHSL(.1)),r=[]){this.camera=t,this.sun=e,this.lights=r}static new(t,e,r){return new Scene(t,e,r)}}class BezierApp extends App{constructor(t){super(t),this.params=[];let e=t.canvas;this.camera=new Camera(e,-2,!0),this.camera.set(-10,1,1),this.dots=[],this.lines=[],this.drRed=new DotShader(t,10,[1,0,0,1],!1),this.drBlue=new DotShader(t,10,[0,0,1,1],!1),this.lrRed=new LineShader(t,[1,0,0,1]),this.lrBlue=new LineShader(t,[0,0,1,1]),this.lrGrid=new LineShader(t,[.3,.3,.3,1]),this.mr=new MeshDebugShader(t,[1,0,0,.5],[1,1,1,.5])}ui(t){this.params.push(Parameter.new("t",.6,0,1,.001)),t.addParameter(this.params[0],this.start.bind(this)),this.params.push(Parameter.new("increase degree",0,0,10,1)),t.addParameter(this.params[1],this.start.bind(this)),this.params.push(Parameter.new("cut",1,0,1,.001)),t.addParameter(this.params[2],this.start.bind(this)),this.params.push(Parameter.new("expand",0,0,1,.001)),t.addParameter(this.params[3],this.start.bind(this)),this.params.push(Parameter.new("detail",50,2,100,1)),t.addParameter(this.params[this.params.length-1],this.start.bind(this))}start(){this.startGrid();let t,e=this.params[0].get(),r=this.params[1].get(),i=this.params[2].get(),s=this.params[3].get(),a=this.params[this.params.length-1].get(),o=Bezier.fromList([Vector3_Vector3.new(-2,-2,0),Vector3_Vector3.new(-2,2,0),Vector3_Vector3.new(2,2,0),Vector3_Vector3.new(2,-2,0)]);[o,t]=o.splitAt(i);for(let t=0;t<r;t++)o=o.increaseDegree();o.extend(s);let n=Polynomial_Polynomial.decastejau(o.verts,e),h=[];for(let t=o.degree+1-1;t>-1;t-=1){if(t<1)continue;let e=MultiVector3_MultiVector3.new(t+1);for(let r=0;r<=t;r++){let i=Util.iterateTriangle(t,r);e.set(r,n.get(i))}h.push(MultiLine.fromPolyline(Polyline.new(e)))}this.lrBlue.set(MultiLine.fromJoin(h)),this.drBlue.set(n),this.dots=[],this.dots.push(...o.verts.toList()),this.dots.push(o.pointAt(e)),this.dots.push(o.pointAt(e).add(o.tangentAt(e))),this.dots.push(o.pointAt(e).add(o.normalAt(e))),this.lines=[],this.lines.push(o.buffer(a)),this.lines.push(Circle3.newPlanar(o.pointAt(e),.1).buffer())}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY(),100,2);this.lrGrid.set(t,o.StaticDraw)}update(t){this.camera.update(t)}draw(t){t.canvas;this.camera.totalMatrix;let e=new Scene(this.camera);this.lrGrid.render(e),this.drRed.setAndRender(this.dots,e),this.drBlue.render(e),this.lrRed.setAndRender(MultiLine.fromJoin(this.lines),e),this.lrBlue.render(e)}}class BezierCpApp extends App{constructor(t){super(t),this.params=[],this.plane=Plane_Plane.WorldXY(),this.point=Vector3_Vector3.zero();let e=t.canvas;this.camera=new Camera(e,-2,!0),this.camera.set(-10,1,1),this.dots=[],this.lines=[],this.drRed=new DotShader(t,10,[1,0,0,1],!1),this.drBlue=new DotShader(t,10,[0,0,1,1],!1),this.lrRed=new LineShader(t,[1,0,0,1]),this.lrBlue=new LineShader(t,[0,0,1,1]),this.lrWhite=new LineShader(t,[1,1,1,1]),this.lrGrid=new LineShader(t,[.3,.3,.3,1]),this.mr=new MeshDebugShader(t,[1,0,0,.5],[1,1,1,.5])}ui(t){this.params.push(Parameter.new("t",.6,0,1,.001)),t.addParameter(this.params[0],this.start.bind(this)),this.params.push(Parameter.new("detail",50,2,100,1)),t.addParameter(this.params[this.params.length-1],this.start.bind(this))}start(){this.startGrid();let t=this.params[0].get(),e=this.params[this.params.length-1].get();this.bezier=Bezier.fromList([Vector3_Vector3.new(-2,-2,0),Vector3_Vector3.new(-2,2,0),Vector3_Vector3.new(2,2,0),Vector3_Vector3.new(2,-2,0)]);let r=this.bezier;this.dots=[],this.dots.push(...r.verts.toList()),this.dots.push(r.pointAt(t)),this.dots.push(r.pointAt(t).add(r.tangentAt(t))),this.dots.push(r.pointAt(t).add(r.normalAt(t))),this.lines=[],this.lines.push(r.buffer(e)),this.lines.push(Circle3.newPlanar(r.pointAt(t),.1).buffer())}startGrid(){let t=MultiLine.fromGrid(this.plane,100,2);this.lrGrid.set(t,o.StaticDraw)}update(t){this.camera.update(t),this.updateCursor(t)}updateCursor(t){let e=this.camera.getMouseWorldRay(t.canvas.width,t.canvas.height),r=e.xPlane(this.plane);this.point=e.at(r);let i=[];i.push(Circle3.newPlanar(this.point,.1).buffer()),r=this.bezier.ApproxClosestPoint(this.point);let s=this.bezier.pointAt(r);i.push(Circle3.newPlanar(s,.1).buffer()),this.lrBlue.set(MultiLine.fromJoin(i))}draw(t){t.canvas;this.camera.totalMatrix;let e=new Scene(this.camera);this.lrGrid.render(e),this.drRed.setAndRender(this.dots,e),this.drBlue.render(e),this.lrRed.setAndRender(MultiLine.fromJoin(this.lines),e),this.lrBlue.render(e),this.lrWhite.render(e)}}class IcosahedronApp extends App{constructor(t){super(t),this.radius=.1,this.detail=6;let e=t.canvas;this.camera=new Camera(e,8,!0),this.meshRend=new ShadedMeshShader(t),this.normalRend=new NormalShader(t)}getIcosahedron(){return Mesh_Mesh.newIcosahedron(1).toGraph()}getDemoShape(){let t=Graph.new();function addVert(e){t.addVert(e,e)}return addVert(new Vector3_Vector3(-1,0,-1)),addVert(new Vector3_Vector3(0,1,-1)),addVert(new Vector3_Vector3(1,0,-1)),addVert(new Vector3_Vector3(0,-1,-1)),addVert(new Vector3_Vector3(0,0,1)),addVert(new Vector3_Vector3(-1,1,0)),t.addEdge(4,0),t.addEdge(4,1),t.addEdge(4,2),t.addEdge(4,3),t.addEdge(0,1),t.addEdge(1,2),t.addEdge(2,3),t.addEdge(3,0),t.addEdge(1,3),t.print(),t}demo(){let t=new Graph,e=new Vector3_Vector3(0,0,1);return t.addVert(new Vector3_Vector3(0,0,0),e),t.addVert(new Vector3_Vector3(1,0,0),e),t.addVert(new Vector3_Vector3(0,1,0),e),t.addVert(new Vector3_Vector3(-1,0,0),e),t.addVert(new Vector3_Vector3(0,-1,0),e),t.addEdge(0,1),t.addEdge(0,2),t.addEdge(0,3),t.addEdge(0,4),t.addEdge(1,2),t}ui(t){this.rotate=new Parameter("rotate",1,0,1,1),this.inner=new Parameter("inner",1,0,1,1);t.addBooleanParameter(this.rotate),t.addBooleanParameter(this.inner,(()=>{this.start()}))}start(){this.graph=this.getIcosahedron(),this.mesh=function graphToMultiMesh(t,e,r,i,s=!0){let a=[];s&&t.allVertPositions().forEach((t=>{a.push(Mesh_Mesh.newSphere(t,2*e,r,2*r))}));let o=t.allEdgeVerts();for(let i=0;i<o.length;i+=2){let s=t.getVertexPos(o[i]),n=t.getVertexPos(o[i+1]),h=Mesh_Mesh.newCylinder(s,n,e,r);a.push(h)}i&&a.push(Mesh_Mesh.fromGraph(t));let n=Mesh_Mesh.fromJoin(a).ToShaderMesh();return n.calculateFaceNormals(),n}(this.graph,this.radius,this.detail,1==this.inner.get()),this.meshRend.set(this.mesh)}update(t){if(this.camera.update(t),!t.mouseRightDown&&1==this.rotate.get()){let e=2e-4*t.tick,r=Matrix4_Matrix4.newXRotation(e).multiply(Matrix4_Matrix4.newYRotation(e));this.mesh.transform(r),this.meshRend.set(this.mesh,o.DynamicDraw)}}draw(t){let e=new Scene(this.camera);this.meshRend.render(e)}}class LoftApp extends App{constructor(t){super(t),this.params=[];let e=t.canvas;this.camera=new Camera(e,-2,!0),this.camera.set(-10,1,1),this.dots=[],this.lines=[],this.drRed=new DotShader(t,10,[1,0,0,1],!1),this.drBlue=new DotShader(t,10,[0,0,1,1],!1),this.lrRed=new LineShader(t,[1,0,0,1]),this.lrBlue=new LineShader(t,[0,0,1,1]),this.lrGrid=new LineShader(t,[.3,.3,.3,1]),this.mr=new MeshDebugShader(t,[1,0,0,.5],[1,1,1,.5])}ui(t){this.params.push(Parameter.new("u",.5,0,1,.001)),t.addParameter(this.params[0],this.start.bind(this)),this.params.push(Parameter.new("v",.5,0,1,.001)),t.addParameter(this.params[1],this.start.bind(this)),this.params.push(Parameter.new("displace bottom",0,-5,5,.001)),t.addParameter(this.params[2],this.start.bind(this)),this.params.push(Parameter.new("detail",10,2,100,1)),t.addParameter(this.params[this.params.length-1],this.start.bind(this))}start(){this.startGrid();let t=this.params[0].get(),e=this.params[1].get(),r=this.params[2].get(),i=this.params[this.params.length-1].get(),s=[Bezier.fromList([Vector3_Vector3.new(3,-1,4),Vector3_Vector3.new(1,-2,4),Vector3_Vector3.new(1,2,4.5),Vector3_Vector3.new(-1,1,4)]),Bezier.fromList([Vector3_Vector3.new(3,-1,2),Vector3_Vector3.new(1,-1,1.5),Vector3_Vector3.new(1,1,1.5),Vector3_Vector3.new(-1,1,2),Vector3_Vector3.new(-2,1,2),Vector3_Vector3.new(-4,2,3)]),Bezier.fromList([Vector3_Vector3.new(3,-1,0),Vector3_Vector3.new(1,-1,0),Vector3_Vector3.new(1,1,0),Vector3_Vector3.new(-1,1,0)])];s[2].move(Vector3_Vector3.new(0,r,0));let a=Loft.new(s);this.dots=[],this.dots.push(a.pointAt(t,e)),this.lines=[],this.lines.push(a.isoCurveV(t).buffer(i)),this.lines.push(a.isoCurveU(e).buffer(i)),this.mr.set(a.buffer(i,i).ToShaderMesh())}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY(),100,2);this.lrGrid.set(t,o.StaticDraw)}update(t){this.camera.update(t)}draw(t){t.canvas;this.camera.totalMatrix;let e=new Scene(this.camera);this.lrGrid.render(e),this.drRed.setAndRender(this.dots,e),this.drBlue.render(e),this.lrRed.setAndRender(MultiLine.fromJoin(this.lines),e),this.lrBlue.render(e),this.mr.render(e)}}class SplineApp extends App{constructor(t){super(t),this.params=[];let e=t.canvas;this.camera=new Camera(e,-2,!0),this.camera.set(-10,1,1),this.dots=[],this.lines=[],this.drRed=new DotShader(t,10,[1,0,0,1],!1),this.drBlue=new DotShader(t,10,[0,0,1,1],!1),this.lrRed=new LineShader(t,[1,0,0,1]),this.lrBlue=new LineShader(t,[0,0,1,1]),this.lrGrid=new LineShader(t,[.3,.3,.3,1]),this.mr=new MeshDebugShader(t,[1,0,0,.5],[1,1,1,.5])}ui(t){this.params.push(Parameter.new("t",.6,0,1,.001)),t.addParameter(this.params[0],this.start.bind(this)),this.params.push(Parameter.new("degree",1,1,10,1)),t.addParameter(this.params[1],this.start.bind(this)),this.params.push(Parameter.new("n control points",4,0,1e3,1)),t.addParameter(this.params[2],this.start.bind(this)),this.params.push(Parameter.new("detail",50,2,1e3,1)),t.addParameter(this.params[this.params.length-1],this.start.bind(this))}start(){this.startGrid(),console.clear();let t=this.params[0].get(),e=this.params[1].get(),r=this.params[2].get(),i=this.params[this.params.length-1].get(),s=Domain3.fromRadii(5,5,1),a=Random_Random.fromSeed(1234),o=Spline.new(s.populate(r,a),e);this.dots=[],this.dots.push(...o.verts.toList()),this.dots.push(o.pointAt(t)),this.lines=[],this.lines.push(o.buffer(i)),this.lines.push(Circle3.newPlanar(o.pointAt(t),.1).buffer())}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY(),100,2);this.lrGrid.set(t,o.StaticDraw)}update(t){this.camera.update(t)}draw(t){t.canvas;this.camera.totalMatrix;let e=new Scene(this.camera);this.lrGrid.render(e),this.drRed.setAndRender(this.dots,e),this.drBlue.render(e),this.lrRed.setAndRender(MultiLine.fromJoin(this.lines),e),this.lrBlue.render(e)}}class SurfaceApp extends App{constructor(t){super(t),this.params=[];let e=t.canvas;this.camera=new Camera(e,-2,!0),this.camera.setState([21.926,11.337,-10.04,-10,1.12,1.08]),this.seed=Random_Random.randomSeed(),this.dots=[],this.lines=[],this.drBlue=new DotShader(t,10,[0,0,1,1],!1),this.lrRed=new LineShader(t,[1,0,0,1]),this.lrGrid=new LineShader(t,[.3,.3,.3,1]),this.mr=new MeshDebugShader(t,[1,0,0,.5],[1,1,1,.5])}ui(t){this.params.push(Parameter.new("degree",3,2,6,1)),t.addParameter(this.params[0],this.start.bind(this)),this.params.push(Parameter.new("displace",4,0,10,.001)),t.addParameter(this.params[1],this.start.bind(this)),this.params.push(Parameter.new("detail",50,2,100,1)),t.addParameter(this.params[2],this.start.bind(this))}start(){this.startGrid();let t=this.params[0].get(),e=this.params[1].get(),r=this.params[2].get(),i=Random_Random.fromSeed(this.seed),s=Domain_Domain2.fromRadius(-11).offset([-22,22,0,0]).spawn(t+1,t+1).to3D().forEach((t=>t.add(Vector3_Vector3.fromRandomUnit(i).scale(e)).add(Vector3_Vector3.unitZ().scale(5)))),a=BezierSquare.new(s,t,t);this.drBlue.set(s),this.lines=[],this.mr.set(a.buffer(r,r).ToShaderMesh())}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY(),100,2);this.lrGrid.set(t,o.StaticDraw)}update(t){this.camera.update(t)}draw(t){t.canvas;this.camera.totalMatrix;let e=new Scene(this.camera);this.lrRed.setAndRender(MultiLine.fromJoin(this.lines),e),this.drBlue.render(e),this.lrGrid.render(e),this.mr.render(e)}}class SurfaceCpApp extends App{constructor(t){super(t),this.params=[],this.plane=Plane_Plane.WorldXY();let e=t.canvas;this.camera=new Camera(e,-2,!0),this.camera.setState([21.926,11.337,-10.04,-10,1.12,1.08]),this.seed=Random_Random.randomSeed(),this.dots=[],this.lines=[],this.drBlue=new DotShader(t,10,[0,0,1,1],!1),this.lrRed=new LineShader(t,[1,0,0,1]),this.lrGrid=new LineShader(t,[.3,.3,.3,1]),this.mr=new MeshDebugShader(t,[1,0,0,.5],[1,.5,.5,.5]),this.mr2=new MeshDebugShader(t,[0,1,1,.25],[0,1,1,.75])}ui(t){this.params.push(Parameter.new("degree",3,2,6,1)),t.addParameter(this.params[0],this.start.bind(this)),this.params.push(Parameter.new("displace",4,0,10,.001)),t.addParameter(this.params[1],this.start.bind(this)),this.params.push(Parameter.new("detail",50,2,100,1)),t.addParameter(this.params[2],this.start.bind(this))}start(){this.startGrid();let t=this.params[0].get(),e=this.params[1].get(),r=this.params[2].get(),i=Random_Random.fromSeed(this.seed),s=Domain_Domain2.fromRadius(-11).offset([-22,22,0,0]).spawn(t+1,t+1).to3D().forEach((t=>t.add(Vector3_Vector3.fromRandomUnit(i).scale(e)).add(Vector3_Vector3.unitZ().scale(5)))),a=BezierSquare.new(s,t,t);this.surface=a,this.drBlue.set(s),this.lines=[],this.mr.set(a.buffer(r,r).ToShaderMesh())}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY(),100,2);this.lrGrid.set(t,o.StaticDraw)}update(t){this.camera.update(t),this.updateCursor(t)}updateCursor(t){let e=this.camera.getMouseWorldRay(t.canvas.width,t.canvas.height),r=(e.xPlane(this.plane),e.at(20)),i=[];i.push(Mesh_Mesh.newSphere(r,1,10,10));let s=this.surface.approxClosestPoint(r),a=this.surface.pointAtUV(s);i.push(Mesh_Mesh.newSphere(a,1,10,10)),this.mr2.set(Mesh_Mesh.fromJoin(i).ToShaderMesh(),o.DynamicDraw)}draw(t){t.canvas;this.camera.totalMatrix;let e=new Scene(this.camera);this.lrRed.setAndRender(MultiLine.fromJoin(this.lines),e),this.drBlue.render(e),this.lrGrid.render(e),this.mr.render(e),this.mr2.render(e)}}class LeastSquaresApp extends App{constructor(t){super(t),this.params=[],this.count=2;let e=t.canvas;this.rng=Random_Random.fromSeed(1234),this.camera=new Camera(e,-2,!0),this.drRed=new DotShader(t,10,[1,0,0,1],!1),this.drGreen=new DotShader(t,10,[0,1,0,1],!1),this.drBlue=new DotShader(t,10,[0,0,1,1],!1),this.lineRenderer=new LineShader(t,[.3,.3,.3,1]),this.points=createRandomPoints(16,1,this.rng),this.resetCamera()}ui(t){this.params.push(new Parameter("x",0,-5,5,.1)),this.params.push(new Parameter("y",0,-5,5,.1)),this.params.push(new Parameter("z",0,-5,5,.1));const e=6.283,r=.12566;this.params.push(new Parameter("a",0,-6.283,e,r)),this.params.push(new Parameter("b",0,-6.283,e,r)),this.params.push(new Parameter("g",0,-6.283,e,r)),this.params.push(new Parameter("sx",1,-5,5,.1)),this.params.push(new Parameter("sy",1,-5,5,.1)),this.params.push(new Parameter("sz",1,-5,5,.1)),this.params.push(new Parameter("noise",0,0,1,.01)),this.params.push(Parameter.newBoolean("realtime",!0)),this.params.push(new Parameter("point count",16,1,100,1));let i=this.params,recalc=()=>{1==this.params[10].state&&this.start()};t.addText("Using least squares adjustment & singular value decomposition to solve a 3D transformation between points. F12 for more info"),t.addText("translate"),t.addParameter(i[0],recalc),t.addParameter(i[1],recalc),t.addParameter(i[2],recalc),t.addText("rotate"),t.addParameter(i[3],recalc),t.addParameter(i[4],recalc),t.addParameter(i[5],recalc),t.addText("scale"),t.addParameter(i[6],recalc),t.addParameter(i[7],recalc),t.addParameter(i[8],recalc),t.addText(""),t.addParameter(i[9],recalc),t.addParameter(i[11],(()=>{this.points=createRandomPoints(this.params[11].get(),1,this.rng),this.start()})),t.addBooleanParameter(i[10]),t.addButton("recalculate",(()=>{this.start()}))}resetCamera(){this.camera.z_offset=-10,this.camera.angleAlpha=.25*Math.PI,this.camera.angleBeta=.25*Math.PI}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY().moveTo(new Vector3_Vector3(0,0,-1)),100,2);this.lineRenderer.set(t,o.StaticDraw)}start(){console.clear();let t=Matrix4_Matrix4.newTranslation(this.params[0].get(),this.params[1].get(),this.params[2].get()),e=Matrix4_Matrix4.newXRotation(this.params[3].get()),r=Matrix4_Matrix4.newYRotation(this.params[4].get()),i=Matrix4_Matrix4.newZRotation(this.params[5].get()),s=e.multiplied(r).multiplied(i),a=Matrix4_Matrix4.newScaler(this.params[6].get(),this.params[7].get(),this.params[8].get()).multiplied(s.multiplied(t));this.Pnormal=this.points.clone().transform(a);let o=Random_Random.fromSeed(123494854),n=this.params[9].get();this.Pnormal=this.Pnormal.map(((t,e)=>{t.add(Vector3_Vector3.fromRandomUnit(o).scale(n))}));let h=function leastSquares(t,e){if(t.count!=e.count)throw"matrices need to be of equal width & height";let r=t.count,i=4,s=3,a=16,o=new FloatMatrix_FloatMatrix(s*r,a);for(let n=0;n<r;n++){let r=[...t.slice().getRow(n),1],h=[...e.slice().getRow(n),1];for(let t=0;t<s;t++){let e=n*s+t,l=i*t;for(let t=0;t<r.length;t++)o.set(e,t+l,r[t]);l=a-i;for(let i=0;i<r.length;i++){let s=o.get(e,i+l);o.set(e,i+l,s+-1*h[t]*r[i])}}}let[n,h,l]=Statistics_Stat.svd(o),d=l.getColumn(l.width-1),c=1/d[15];for(let t=0;t<d.length;t++)d[t]=Math.round(d[t]*c*1e5)/1e5;return Matrix4_Matrix4.new([...d]).transpose()}(this.points,this.Pnormal);this.Plsa=this.points.clone().transform(h),console.log("original matrix: (blue)"),a.print(),console.log(a.get(0,3)),console.log("lsa+svd recovered matrix from nothing but the points: (green)"),h.print(),this.startGrid()}update(t){this.camera.update(t)}draw(t){t.canvas;this.camera.totalMatrix;let e=new Scene(this.camera);this.lineRenderer.render(e),this.drRed.setAndRender(this.points,e),this.drBlue.setAndRender(this.Pnormal,e),this.drGreen.setAndRender(this.Plsa,e)}}function createRandomPoints(t,e,r){let i=Domain3.fromBounds(-e,e,-e,e,-e,e),s=MultiVector3_MultiVector3.new(t);for(let e=0;e<t;e++)s.set(e,i.elevate(Vector3_Vector3.fromRandom(r)));return s}class PerlinApp extends App{constructor(t){super(t),this.params=[];let e=t.canvas;this.camera=new Camera(e,-2,!0),this.camera.setState([21.919,-.26769,-16.72,-10,.9,1.5700000000000014]),this.perlin=Perlin.new(),this.seed=Random_Random.randomSeed(),this.drRed=new DotShaderWithHeight(t,15,[1,0,0,1],5,!1),this.lrGrid=new LineShader(t,[.3,.3,.3,1])}ui(t){this.params.push(Parameter.new("count",200,2,500,1)),this.params.push(Parameter.new("displace",0,0,1,.001)),this.params.push(Parameter.newBoolean("perlin move",!0)),this.params.push(Parameter.new("perlin amp",5,1,10,.01)),this.params.push(Parameter.new("perlin speed",2.5,.5,10,.1)),t.addParameter(this.params[0],this.start.bind(this)),t.addParameter(this.params[1],this.start.bind(this)),t.addBooleanParameter(this.params[2],this.start.bind(this)),t.addParameter(this.params[3],this.start.bind(this)),t.addParameter(this.params[4],this.start.bind(this))}start(){this.startGrid();let t=this.params[0].get(),e=this.params[1].get(),r=Random_Random.fromSeed(this.seed),i=Domain_Domain2.fromRadius(11).spawn(t+1,t+1).to3D().forEach((t=>t.add(Vector3_Vector3.fromRandomUnit(r).scale(e))));this.dots=i,this.drRed.load(i,o.StaticDraw)}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY(),100,2);this.lrGrid.set(t,o.StaticDraw)}update(t){if(this.camera.update(t),1==this.params[2].get()){let e=this.params[3].get(),r=this.params[4].get(),i=MultiVector3_MultiVector3.new(this.dots.count);for(let s=0;s<this.dots.count;s++){let a=this.dots.get(s),o=this.perlin.noise(a.x,a.y,1e-4*t.newTime*r)*e;a.z=o,i.set(s,a)}this.drRed.load(i,o.DynamicDraw)}}draw(t){let e=new Scene(this.camera);this.lrGrid.render(e),this.drRed.draw(e)}}var billboard_app_awaiter=function(t,e,r,i){return new(r||(r=Promise))((function(s,a){function fulfilled(t){try{step(i.next(t))}catch(t){a(t)}}function rejected(t){try{step(i.throw(t))}catch(t){a(t)}}function step(t){t.done?s(t.value):function adopt(t){return t instanceof r?t:new r((function(e){e(t)}))}(t.value).then(fulfilled,rejected)}step((i=i.apply(t,e||[])).next())}))};class BillboardApp extends App{constructor(t){super(t),this.params=[];let e=t.canvas;this.camera=new Camera(e,-2,!0),this.camera.set(-2,1,1),this.gs=new LineShader(t,[.3,.3,.3,1]),this.mr=DebugRenderer.new(t),this.ir=ImageRenderer.new(t),this.ir.scale=.2,this.br=new BillboardShader(t)}start(){return billboard_app_awaiter(this,void 0,void 0,(function*(){this.startGrid();let t=yield loadImageFromSrc("./data/textures/minecraft.png"),e=Image_GeonImage.fromImageData(t);this.ir.add(e),this.ir.buffer();let r=e.width/16,i=e.height/16,s=Domain_Domain2.fromRadius(10).spawn(16,16).to3D(),a=Domain_Domain2.fromBounds(0,e.width-r,0,e.height-i).spawn(16,16),n=[];for(let t=0;t<a.count;t++)n.push(Vector2_Vector2.new(r,i));let h={positions:s,uvs:a,uvSizes:MultiVector2_MultiVector2.fromList(n),texture:e};this.br.load(h,o.StaticDraw)}))}ui(t){}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY().moveTo(Vector3_Vector3.new(0,0,-1)),100,2);this.gs.set(t,o.StaticDraw)}update(t){this.camera.update(t)}draw(t){t.canvas;this.camera.totalMatrix;let e=new Scene(this.camera);this.gs.render(e),this.mr.render(e),this.ir.render(e),this.br.draw(e)}}class DotApp3 extends App{constructor(t){super(t),this.dots=[],this.dirs=[];let e=t.canvas;this.bounds=Domain3.fromBounds(-1,1,-1,1,-1,1),this.whiteDotRend=new DotShader(t,10,[1,1,1,1],!1),this.redDotRend=new DotShader(t,10,[1,0,0,1],!1),this.camera=new Camera(e)}start(){this.spawnSome(100,.001)}spawnSome(t,e){const r=Domain3.fromBounds(-e,e,-e,e,-e,e);let i=Random_Random.fromRandom();for(let e=0;e<t;e++)this.dots.push(this.bounds.elevate(Vector3_Vector3.fromRandom(i))),this.dirs.push(r.elevate(Vector3_Vector3.fromRandom(i)))}update(t){this.camera.update(t),t.mouseLeftPressed&&this.spawnSome(100,.001);for(let t=0;t<this.dots.length;t++){let e=this.dots[t],r=this.dirs[t];this.bounds.x.includes(e.x)||(r.x=-r.x),this.bounds.y.includes(e.y)||(r.y=-r.y),this.bounds.z.includes(e.z)||(r.z=-r.z),e.add(r)}}draw(t){t.canvas;this.camera.totalMatrix;let e=new Scene(this.camera);this.redDotRend.setAndRender(this.bounds.corners(Matrix4_Matrix4.newIdentity()),e),this.whiteDotRend.setAndRender(this.dots,e)}}class Stopwatch_Stopwatch{constructor(t,e){this.oldTime=t,this.newTime=e}static new(){let t=new Stopwatch_Stopwatch(0,0);return t.time(),t}time(){this.newTime=this.getTime();let t=this.newTime-this.oldTime;return this.oldTime=this.newTime,t}log(t){console.log(`${t} took: ${this.time()} ms`)}getTime(){return(new Date).getTime()}}function constructMeshFromSphereGraph(t,e,r,i,s){let a=1+r/e,o=1+i/e,n=[],h=t.allVertLoopsAsInts();for(let e of h){if(Math.random()>s)continue;if(e.length<4)continue;let r=e.map((e=>t.getVertexPos(e))),i=Mesh_Mesh.newOct([r[0].scaled(a),r[1].scaled(a),r[3].scaled(a),r[2].scaled(a),r[0].scaled(o),r[1].scaled(o),r[3].scaled(o),r[2].scaled(o)]);n.push(i)}return Mesh_Mesh.fromJoin(n)}function averageEdgeLength(t){let e=0,r=0;return t.forEveryEdgeVerts(((t,i)=>{r+=t.disTo(i),e+=1})),r/e}function laPlacian(t){let e=t.getVertexCount(),r=[];for(let i=0;i<e;i++){if(t.getVert(i).dead)continue;let e=Vector3_Vector3.zero(),s=t.getVertNeighbors(i);for(let r of s)e.add(t.getVertexPos(r));e.scale(1/s.length),r.push(e)}for(let i=0;i<e;i++)t.getVertexPos(i).copy(r[i])}function squarification(t,e){let r=t.allVertLoopsAsInts(),i=r.length,s=new Array(i),a=new Array(t.verts.length),o=new Array(t.verts.length);for(let t=0;t<a.length;t++)a[t]=Vector3_Vector3.new(0,0,0),o[t]=0;let n=0;for(let h=0;h<i;h++){let i=s[h],l=r[h],d=l.length;if(0==l.length)throw"HELP, WE ARE NOT DEALING WITH QUADS HERE!";i=Vector3_Vector3.new(0,0,0);let c=new Array(d);for(let e=0;e<d;e++){let r=l[e];c[e]=t.getVertexPos(r),i.add(c[e])}i.scale(1/d);let u,m,f=0;for(let t=0;t<d;t++)f=i.disTo(c[t]);f/=d,n+=f,e?(u=e,m=e-f):(u=f,m=0);let g=Plane_Plane.from3pt(i,c[0],c[1]),p=new Array(l.length),w=Vector3_Vector3.new(0,0,0),x=2/d;for(let t=0;t<d;t++)p[t]=g.rotateVector(c[t],t*Math.PI*x),w.add(p[t]);w.scale(1/4);let _=w.subbed(i).normalize(),M=i.added(_.scaled(f)),v=1,V=200;v+=Math.max(-1*m*V,0);for(let t=0;t<d;t++){let e=l[t],r=g.rotateVector(M,t*Math.PI*x);a[e].add(r.scaled(v)),o[e]+=1}}for(let e=0;e<a.length;e++){let r=a[e],i=o[e];i<1||t.getVertexPos(e).add(r.scale(1/i))}return n/=i,n}function quadification(t){let e=t.edges.length,r=new Array(e),i=new Array(e);t.edges.forEach(((t,e)=>{r[e]=e,i[e]=!1}));r.sort(((t,e)=>.5-Math.random()));for(let s=0;s<e;s++){let e=r[s];if(t.edges[e].dead||i[e])continue;let a=t.getLoopsAdjacentToEdge(e);if(!(a[0].length>3||a[1].length>3)){for(let t of a)for(let e of t)i[e]=!0;t.deleteEdgeByIndex(e)}}}class SphericalOneApp extends App{constructor(t){super(t,"setup for trying out different partitions of a sphere. Based on Oskar Stalberg's irregular quad grid"),this.radius=.1,this.smoothlimit=0;let e=t.canvas;this.camera=new Camera(e,1,!0),this.camera.set(-4.48,1.24,-.71),this.meshRend=new ShadedMeshShader(t),this.debugRend=new MeshDebugShader(t,[.5,0,0,1],[1,0,0,1],!1),this.graphRend=new GraphDebugShader(t,[.5,0,0,1],[1,69/255,0,1])}ui(t){let reset=()=>{this.start()};this.rotate=new Parameter("rotate",0,0,1,1),this.randomEdges=new Parameter("randomEdges",1,0,1,1),this.smooth=new Parameter("smooth",0,0,1,1),this.subCount=new Parameter("sub count",2,0,4,1),this.quadSubCount=new Parameter("sub count quad",1,0,2,1),this.liftType=EnumParameter.new("lift type",1,["none","sphere","buggy"]),t.addBooleanParameter(this.rotate),t.addBooleanParameter(this.randomEdges,reset),t.addBooleanParameter(this.smooth),t.addParameter(this.subCount,reset),t.addParameter(this.quadSubCount,reset),t.addParameter(this.liftType,reset),t.addButton("recalculate",reset)}start(){let t=this.liftType.get();const e=Mesh_Mesh.newIcosahedron(.5);let r=e.toGraph(),i=new Vector3_Vector3(0,0,0);this.smoothlimit=0,this.radius=2==t?1:r.getVertexPos(0).disTo(i),console.log("lets start subdivisions!");let s=Stopwatch_Stopwatch.new();for(let e=0;e<this.subCount.get();e++)if(r.subdivide(),t>0){let e=r.getVertexCount();for(let s=0;s<e;s++){let e=r.getVertexPos(s),a=e,o=i.disTo(e),n=this.radius-o;t>1?e.add(a.scaled(n)):e.add(a.normalized().scaled(n))}console.log("lift in ",s.time(),"ms")}console.log("subdivision in ",s.time(),"ms"),1==this.randomEdges.get()&&quadification(r),console.log("edge removal in ",s.time(),"ms");for(let t=0;t<this.quadSubCount.get();t++)r.subdivideQuad();if(console.log("quad subdivision in ",s.time(),"ms"),t>0){let e=r.getVertexCount();for(let s=0;s<e;s++){let e=r.getVertexPos(s),a=r.getVertexNormal(s),o=i.disTo(e),n=this.radius-o;t>1?e.add(a.scaled(n)):e.add(a.normalized().scaled(n))}console.log("lift in ",s.time(),"ms")}if(this.graph=r,1==t){let t=Mesh_Mesh.newSphere(Vector3_Vector3.zero(),.99*this.radius,6,10).ToShaderMesh();t.calculateVertexNormals(),this.meshRend.set(t,o.StaticDraw)}else if(0==t){let t=e.ToShaderMesh();t.transform(Matrix4_Matrix4.newScaler(.99,.99,.99)),t.calculateFaceNormals(),this.meshRend.set(t,o.StaticDraw)}this.graphRend.set(this.graph,o.DynamicDraw),this.average=averageEdgeLength(this.graph)}update(t){if(this.camera.update(t),!t.mouseRightDown&&1==this.rotate.get()){let e=1e-4*t.tick,r=Matrix4_Matrix4.newXRotation(e).multiply(Matrix4_Matrix4.newYRotation(e));this.graph.transform(r)}1==this.smooth.get()?this.smoothlimit<1e3&&(this.cca=squarification(this.graph,this.cca),laPlacian(this.graph),this.graph.verts.forEach((t=>{let e=t.pos,r=this.radius-t.pos.length();t.pos.add(e.normalized().scaled(r))})),this.smoothlimit+=1):this.smoothlimit=0,this.graphRend.set(this.graph,o.DynamicDraw)}draw(t){let e=new Scene(this.camera);this.meshRend.render(e),this.graphRend.render(e)}}class SphericalThreeApp extends App{constructor(t){super(t,"Multiple Layers of spherical geometry"),this.radius=1,this.smoothlimit=0;let e=t.canvas;this.camera=new Camera(e,1,!0),this.camera.set(-2,1.24,-.71),this.meshRend=new ShadedMeshShader(t),this.floorRend=new ShadedMeshShader(t),this.debugRend=new MeshDebugShader(t,[.5,0,0,1],[0,0,0,1],!1),this.graphRend=new GraphDebugShader(t,[.5,.5,.5,1],[1,1,1,1])}ui(t){let reset=()=>{this.start()};this.rotate=Parameter.newBoolean("rotate",!1),this.randomEdges=new Parameter("randomEdges",1,0,1,1),this.smooth=new Parameter("smooth",0,0,1,1),this.subCount=new Parameter("sub count",2,0,4,1),this.quadSubCount=new Parameter("sub count quad",1,0,2,1),t.addBooleanParameter(this.rotate),t.addBooleanParameter(this.randomEdges,reset),t.addBooleanParameter(this.smooth),t.addParameter(this.subCount,reset),t.addParameter(this.quadSubCount,reset),t.addButton("recalculate",reset)}start(){this.radius=1,this.smoothlimit=0,this.graph=function createGraph(t,e,r,i){let s=Mesh_Mesh.newIcosahedron(.5).toGraph(),a=new Vector3_Vector3(0,0,0);for(let r=0;r<e;r++)if(s.subdivide(),t>0){let e=s.getVertexCount();for(let r=0;r<e;r++){let e=s.getVertexPos(r),i=e,o=1-a.disTo(e);t>1?e.add(i.scaled(o)):e.add(i.normalized().scaled(o))}}1==i&&quadification(s);for(let t=0;t<r;t++)s.subdivideQuad();if(t>0){let e=s.getVertexCount();for(let r=0;r<e;r++){let e=s.getVertexPos(r),i=s.getVertexNormal(r),o=1-a.disTo(e);t>1?e.add(i.scaled(o)):e.add(i.normalized().scaled(o))}}return s}(1,this.subCount.get(),this.quadSubCount.get(),this.randomEdges.get()),this.tiles=function createTileWorld(t,e){let r=new IntMatrix_IntMatrix(t,e);for(let t=0;t<r._height;t++){let e=(i=r._width+1,Math.floor(Math.random()*i));for(let i=0;i<r._width;i++)i<e?r.set(t,i,1):r.set(t,i,0)}var i;return r}(this.graph.allVertLoopsAsInts().length,4),this.avEdgeLength=averageEdgeLength(this.graph),this.bufferWorld()}update(t){this.camera.update(t);Math.sin(t.newTime);if(1==this.rotate.get()){let e=Matrix4_Matrix4.newAxisRotation(Vector3_Vector3.unitZ(),1e-4*t.tick);this.world.position.multiply(e),this.worldFloor.position.multiply(e),this.meshRend.setShallow(this.gl,this.world),this.floorRend.setShallow(this.gl,this.worldFloor)}this.smoothWorld()}draw(t){let e=new Scene(this.camera);this.meshRend.setShallow(this.gl,this.world),this.meshRend.render(e),this.meshRend.render(e),this.floorRend.render(e)}bufferWorld(){this.world=function meshifyTileWorld(t,e,r,i){let s=[],a=t.allVertLoopsAsInts();for(let o=0;o<a.length;o++){const n=a[o];if(n.length<4){console.log("invalids");continue}let h=n.map((e=>t.getVertexPos(e))),l=e.getRow(o);for(let t=0;t<e._width;t++){if(0==l[t])continue;let e=r+t*i,a=r+(t+1)*i,o=Mesh_Mesh.newOct([h[0].scaled(e),h[1].scaled(e),h[3].scaled(e),h[2].scaled(e),h[0].scaled(a),h[1].scaled(a),h[3].scaled(a),h[2].scaled(a)]);s.push(o)}}let o=Mesh_Mesh.fromJoin(s).ToShaderMesh();return o.calculateVertexNormals(),o}(this.graph,this.tiles,this.radius,.1),this.world.calculateFaceNormals(),this.world.color=[.9,.9,.9,1],this.meshRend.set(this.world,o.StaticDraw),this.worldFloor=function meshifyGraphSurface(t){let e=[],r=t.allVertLoopsAsInts();for(let i=0;i<r.length;i++){const s=r[i];if(s.length<4){console.log("invalids");continue}let a=s.map((e=>t.getVertexPos(e))),o=Mesh_Mesh.newQuad([a[0],a[3],a[1],a[2]]);e.push(o)}let i=Mesh_Mesh.fromJoin(e).ToShaderMesh();return i.calculateVertexNormals(),i}(this.graph),this.worldFloor.calculateFaceNormals(),this.worldFloor.color=[.3,.3,.3,1],this.floorRend.set(this.worldFloor,o.StaticDraw)}smoothWorld(){1==this.smooth.get()?this.smoothlimit<1e3&&(this.cca=squarification(this.graph,this.cca),laPlacian(this.graph),this.graph.verts.forEach((t=>{let e=t.pos,r=this.radius-t.pos.length();t.pos.add(e.normalized().scaled(r))})),this.smoothlimit+=1,this.bufferWorld()):this.smoothlimit=0}}class SphericalTwoApp extends App{constructor(t){super(t,"Multiple Layers of spherical geometry"),this.radius=.1,this.smoothlimit=0;let e=t.canvas;this.c=new Scene(new Camera(e,1,!0)),this.c.camera.set(-4.08,1.24,-.71),this.meshRend=new MeshDebugShader(t,[0,0,0,1],[.3,.3,.3,1],!1),this.debugRend=new MeshDebugShader(t,[.5,0,0,1],[0,0,0,1],!1),this.graphRend=new GraphDebugShader(t,[.5,.5,.5,1],[1,1,1,1])}ui(t){let reset=()=>{this.start()};this.rotate=new Parameter("rotate",1,0,1,1),this.randomEdges=new Parameter("delete edges",1,0,1,1),this.smooth=new Parameter("smooth",0,0,1,1),this.subCount=new Parameter("sub count",2,0,4,1),this.quadSubCount=new Parameter("sub count quad",1,0,2,1),this.liftType=EnumParameter.new("lift type",1,["none","sphere","buggy"]),t.addBooleanParameter(this.rotate),t.addBooleanParameter(this.randomEdges,reset),t.addBooleanParameter(this.smooth),t.addParameter(this.subCount,reset),t.addParameter(this.quadSubCount,reset),t.addParameter(this.liftType,reset),t.addButton("recalculate",reset)}start(){let t=this.liftType.get();let e=Mesh_Mesh.newIcosahedron(.5).toGraph(),r=new Vector3_Vector3(0,0,0);this.smoothlimit=0,this.radius=2==t?1:e.getVertexPos(0).disTo(r);for(let i=0;i<this.subCount.get();i++)if(e.subdivide(),t>0){let i=e.getVertexCount();for(let s=0;s<i;s++){let i=e.getVertexPos(s),a=i,o=r.disTo(i),n=this.radius-o;t>1?i.add(a.scaled(n)):i.add(a.normalized().scaled(n))}}1==this.randomEdges.get()&&quadification(e);for(let t=0;t<this.quadSubCount.get();t++)e.subdivideQuad();if(t>0){let i=e.getVertexCount();for(let s=0;s<i;s++){let i=e.getVertexPos(s),a=e.getVertexNormal(s),o=r.disTo(i),n=this.radius-o;t>1?i.add(a.scaled(n)):i.add(a.normalized().scaled(n))}}this.graph=e,this.graphRend.set(this.graph,o.DynamicDraw),this.average=averageEdgeLength(this.graph),this.bufferWorld()}bufferWorld(){this.world=constructMeshFromSphereGraph(this.graph,this.radius,0,.1,.6).ToShaderMesh(),this.world2=constructMeshFromSphereGraph(this.graph,this.radius,.1,.2,.4).ToShaderMesh(),this.world3=constructMeshFromSphereGraph(this.graph,this.radius,.2,.3,.2).ToShaderMesh()}update(t){this.c.camera.update(t);Math.sin(t.newTime);if(1==this.rotate.get()){let e=1e-4*t.tick,r=Matrix4_Matrix4.newXRotation(e),i=Matrix4_Matrix4.newYRotation(e),s=r.multiply(i);this.graph.transform(s),this.world.transform(s),this.world2.transform(Matrix4_Matrix4.newXRotation(-e)),this.world3.transform(Matrix4_Matrix4.newZRotation(-e))}1==this.smooth.get()?this.smoothlimit<1e3&&(this.cca=squarification(this.graph,this.cca),laPlacian(this.graph),this.graph.verts.forEach((t=>{let e=t.pos,r=this.radius-t.pos.length();t.pos.add(e.normalized().scaled(r))})),this.smoothlimit+=1,this.bufferWorld()):this.smoothlimit=0}draw(t){for(let t of[this.world,this.world2,this.world3])this.meshRend.setAndRender(t,this.c)}}class MeshInspectorApp extends App{constructor(t){super(t),this.plane=Plane_Plane.WorldXY(),this.geo=[],this.size=10,this.cellSize=.5,this.distance=new Parameter("distance",3,0,4,.01),this.radius=new Parameter("radius",1,0,4,.01),this.detail=new Parameter("detail",5,0,100,1),this.shademethod=EnumParameter.new("render method",3,["debug","vertex shaded","face shaded","ambient only"]);let e=t.canvas;this.camera=new Camera(e,void 0,!0),this.camera.z_offset=-10,this.camera.angleAlpha=.4,this.camera.angleBeta=.5,this.dotRenderer=new DotShader(t,4,[0,1,0,1]),this.meshRenderer=new MeshDebugShader(t,[.6,0,0,1],[1,0,0,1]),this.lineRenderer=new LineShader(t,[.3,.3,.3,1]),this.shadedMeshRenderer=new ShadedMeshShader(t),this.ams=new AmbientMeshShader(t)}ui(t){t.addParameter(this.radius,(t=>{this.start()})),t.addParameter(this.distance,(t=>{this.start()})),t.addParameter(this.detail,(t=>{this.start()})),t.addParameter(this.shademethod,(t=>{this.start()}))}start(){let t=MultiLine.fromGrid(this.plane.clone().moveTo(new Vector3_Vector3(0,0,-this.radius.get())),100,2),e=2*this.detail.get(),r=this.radius.get(),i=this.distance.get(),s=this.detail.get(),a=Mesh_Mesh.fromJoin([Mesh_Mesh.newSphere(new Vector3_Vector3(i,0,0),this.radius.get(),this.detail.get(),e),Mesh_Mesh.newCone(new Vector3_Vector3(-i,0,-this.radius.get()),this.radius.get(),2*this.radius.get(),e),Mesh_Mesh.newCylinder(new Vector3_Vector3(0,0,-r),new Vector3_Vector3(0,0,r),r,s)]).ToShaderMesh();switch(a.calculateVertexNormals(),console.log("normal type",a.getNormalType()),this.shademethod.get()){case 0:this.meshRenderer.set(a);break;case 1:this.shadedMeshRenderer.set(a);break;case 2:a.calculateFaceNormals(),this.shadedMeshRenderer.set(a);break;case 3:this.ams.load(a.mesh,o.StaticDraw);break;case 4:new Model(Matrix4_Matrix4.newIdentity(),a.mesh,Material.default())}this.lineRenderer.set(t)}update(t){this.camera.update(t)}draw(t){let e=new Scene(this.camera);switch(this.dotRenderer.render(e),this.shademethod.get()){case 0:this.meshRenderer.render(e);break;case 1:case 2:this.shadedMeshRenderer.render(e);break;case 3:this.ams.draw(e)}this.lineRenderer.render(e)}}var obj_loader_app_awaiter=function(t,e,r,i){return new(r||(r=Promise))((function(s,a){function fulfilled(t){try{step(i.next(t))}catch(t){a(t)}}function rejected(t){try{step(i.throw(t))}catch(t){a(t)}}function step(t){t.done?s(t.value):function adopt(t){return t instanceof r?t:new r((function(e){e(t)}))}(t.value).then(fulfilled,rejected)}step((i=i.apply(t,e||[])).next())}))};class ObjLoaderApp extends App{constructor(t){super(t);let e=t.canvas;this.dr=DebugRenderer.new(t),this.tr=TextureMeshShader.new(t),this.camera=new Camera(e,void 0,!0),addDropFileEventListeners(e,processFiles.bind(this))}start(){}update(t){this.camera.update(t)}draw(t){let e=new Scene(this.camera);t.canvas;this.dr.render(e),this.tr.render(e)}}function processFiles(t){return obj_loader_app_awaiter(this,void 0,void 0,(function*(){let e,r;for(let i of t)i.name.includes(".obj")?e=i:i.name.includes(".jpg")||i.name.includes(".png")?r=i:console.warn(`dont know what to do with file: [${i.name}]`);if(!e)return void alert("no obj found");let i=function ShaderMesh_meshFromObj(t){let e=[],r=[],i=[],s=[];const a=/(\w*)(?: )*(.*)/,o=t.split("\n");for(let t=0;t<o.length;++t){const n=o[t].trim();if(""===n||n.startsWith("#"))continue;const h=a.exec(n);if(!h)continue;const[,l,d]=h,c=n.split(/\s+/).slice(1);switch(l){case"v":for(const t of c)e.push(parseFloat(t));break;case"vn":for(const t of c)r.push(parseFloat(t));break;case"vt":for(const t of c)i.push(parseFloat(t));break;case"f":for(const t of ProcessObjFace(c))s.push(t);break;default:console.warn("unhandled keyword:",l);continue}}return ShaderMesh_ShaderMesh.fromData(e,r,i,s)}(yield function loadTextFromFile(t){return new Promise(((e,r)=>{let i=new FileReader;i.readAsText(t),i.onload=()=>{e(i.result)},i.onerror=t=>r(t)}))}(e)),s=1/Domain3.fromInclude(i.mesh.verts).size().largestValue();if(i.mesh.verts.scale(Vector3_Vector3.new(s,s,s)),r){console.log("flipping texture");let t=yield function loadImageFromFile(t){return new Promise(((e,r)=>{let i=new FileReader;i.readAsDataURL(t),i.onload=()=>loadImageHelper1(i).then((t=>e(t)),(t=>r(t)))}))}(r);t=Image_GeonImage.fromImageData(t).flipVer().toImageData(),i.setTexture(t),console.log("done flipping"),this.tr.set(i,o.StaticDraw)}else this.dr.set(i.mesh);console.log("done!")}))}class MultiRendererApp extends App{constructor(t){super(t),this.params=[];let e=t.canvas;this.camera=new Camera(e,-2,!0),this.camera.set(-2,1,1),this.gs=new LineShader(t,[.3,.3,.3,1]),this.mr=DebugRenderer.new(t),this.tms=TextureMeshShader.new(t)}start(){this.startGrid(),this.rng=Random_Random.fromSeed(10394),this.points=Domain3.fromRadius(10).populate(100,this.rng),this.mr.set(Domain3.fromRadius(10).populate(100,this.rng),"dots2",10,[0,1,0,1]),this.mr.set(this.points,"dots",10,[1,0,0,1]),this.points.forEach((t=>t.add(Vector3_Vector3.fromRandomUnit(this.rng))));let t=Image_GeonImage.new(8,8);t.forEach(((t,e)=>[255*Math.random(),e,255,1])),this.mr.set(ImageMesh.new(t,Plane_Plane.WorldYZ().moveTo(Vector3_Vector3.new(4,0,0))),"image1"),t.forEach(((t,e)=>[255,255*Math.random(),255,1])),this.mr.set(ImageMesh.new(t,Plane_Plane.WorldYZ().moveTo(Vector3_Vector3.new(-4,0,0)),1),"image2"),t.forEach(((t,e)=>[255,255,255*Math.random(),1])),this.mr.set(ImageMesh.new(t,Plane_Plane.WorldXZ().moveTo(Vector3_Vector3.new(0,-4,0)),1),"image3"),t.forEach(((t,e)=>[255*Math.random(),e,255,1])),this.mr.set(ImageMesh.new(t,Plane_Plane.WorldXZ().moveTo(Vector3_Vector3.new(0,-4,0)),1),"image4"),t.forEach(((t,e)=>[255,255*Math.random(),255,1])),this.mr.set(ImageMesh.new(t,Plane_Plane.WorldXY().moveTo(Vector3_Vector3.new(0,0,4)),1),"image5"),t.forEach(((t,e)=>[255,255,255*Math.random(),1])),this.mr.set(ImageMesh.new(t,Plane_Plane.WorldXY().moveTo(Vector3_Vector3.new(0,0,-4)),1),"image6"),this.mr.set(Polyline.new(this.points)),this.mr.set(Plane_Plane.WorldXZ().moveTo(this.points.get(0)),"plane"),this.mr.addUi(this.interface)}ui(t){this.interface=t}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY().moveTo(new Vector3_Vector3(0,0,-1)),100,2);this.gs.set(t,o.StaticDraw)}update(t){this.camera.update(t),this.points.forEach((t=>t.add(Vector3_Vector3.fromRandomUnit(this.rng)))),this.mr.set(this.points,"dots")}draw(t){t.canvas;this.camera.totalMatrix;let e=new Scene(this.camera);this.gs.render(e),this.mr.render(e)}}class PhongApp extends App{constructor(t){super(t),this.material=Material.default(),this.plane=Plane_Plane.WorldXY(),this.geo=[],this.size=10,this.cellSize=.5,this.somePos=Vector3_Vector3.zero(),this.distance=new Parameter("distance",3,0,4,.01),this.radius=new Parameter("radius",1,0,4,.01),this.detail=new Parameter("detail",5,0,100,1),this.shademethod=EnumParameter.new("render method",3,["debug","vertex shaded","face shaded","ambient only","phong"]);let e=t.canvas;this.camera=new Camera(e,void 0,!0),this.camera.z_offset=-10,this.camera.angleAlpha=.4,this.camera.angleBeta=.5,this.scene=new Scene(this.camera),this.lineRenderer=new LineShader(t,[.3,.3,.3,1]),this.phong=new PhongShader(t)}ui(t){t.addParameter(this.detail,(()=>{this.start()})),t.add3DParameter("sun",Domain3.fromRadius(50),1,this.scene.sun.pos),t.add3DParameter("position",Domain3.fromRadius(3),.01,this.somePos,(()=>{this.start()})),t.addParameter(Parameter.new("specular-dampner",.2,0,10,.001),(t=>{this.material.specularDampner=t,this.start()})),t.addColorParameter("ambient",this.material.ambient.toHex6(),(t=>{console.log(t);let e=Color.fromHex(t);e&&(this.material.ambient=e,this.phong.loadMaterial(this.material))})),t.addColorParameter("diffuse",this.material.diffuse.toHex6(),(t=>{console.log(t);let e=Color.fromHex(t);e&&(this.material.diffuse=e,this.phong.loadMaterial(this.material))})),t.addColorParameter("specular",this.material.specular.toHex6(),(t=>{console.log(t);let e=Color.fromHex(t);e&&(this.material.specular=e,this.phong.loadMaterial(this.material))})),t.addColorParameter("occluded",this.material.occluded.toHex6(),(t=>{console.log(t);let e=Color.fromHex(t);e&&(this.material.occluded=e,this.phong.loadMaterial(this.material))}))}start(){let t=MultiLine.fromGrid(this.plane.clone().moveTo(new Vector3_Vector3(0,0,-this.radius.get())),100,2),e=2*this.detail.get(),r=this.radius.get(),i=this.distance.get(),s=this.detail.get(),a=Mesh_Mesh.fromJoin([Mesh_Mesh.newSphere(new Vector3_Vector3(i,0,0),this.radius.get(),this.detail.get(),e),Mesh_Mesh.newCone(new Vector3_Vector3(-i,0,-this.radius.get()),this.radius.get(),2*this.radius.get(),e),Mesh_Mesh.newCylinder(new Vector3_Vector3(0,0,-r),new Vector3_Vector3(0,0,r),r,s)]);a.ensureUVs(),a.calcAndSetVertexNormals(),this.calcAmbientOcclusion(a,this.plane);let n=new Model(Matrix4_Matrix4.newTranslate(this.somePos),a,this.material);this.phong.load(n,o.StaticDraw),this.lineRenderer.set(t)}calcAmbientOcclusion(t,e){let r=t.verts.count,i=new Float32Array(r);for(let s=0;s<r;s++){let r=t.verts.get(s).added(this.somePos),a=e.distanceTo(r);i[s]=Math.max(Math.min(.5-a/.5,.5),0)}this.phong.loadOcclusion(i,o.StaticDraw)}update(t){this.camera.update(t),t.IsKeyPressed("k")&&(console.log(this.camera.worldMatrix.inverse().multiplyVector(Vector3_Vector3.new())),console.log(this.camera.pos),console.log(this.camera.getState()),console.log(this.camera.offset),this.camera.worldMatrix.print(),this.camera.worldMatrix.inverse().print())}draw(t){this.phong.draw(this.scene),this.lineRenderer.render(this.scene)}}class CubesPhongApp extends App{constructor(t){super(t),this.plane=Plane_Plane.WorldXY(),this.dots=[],this.geo=[],this.mapGeo=[],this.size=50,this.cellSize=1,this.fov=new Parameter("fov",80,10,100,1);let e=new Camera(t.canvas,10,!0);this.scene=new Scene(e),this.phongShader=new PhongShader(t),this.dr=DebugRenderer.new(t),this.ds=new DepthMeshShader(t)}start(){this.map=new IntCube(this.size,this.size,this.size),this.map.fill(0),this.map.map(((t,e)=>Math.random()>.99?1:t)),this.bufferMap(),this.gridLarge=MultiLine.fromGrid(this.plane,this.size,this.cellSize),this.gridSmall=MultiLine.fromGrid(this.plane,10*this.size-1,this.cellSize/10)}ui(t){t.addParameter(this.fov,(t=>{this.scene.camera.fov=t}))}update(t){this.scene.camera.update(t),this.scene.sun.pos=this.scene.camera.getActualPosition(),this.updateCursor(t)}draw(t){t.canvas;this.phongShader.draw(this.scene),this.dr.render(this.scene),this.ds.draw(this.scene)}addPreviewCube(t){let e=this.mapToWorld(t),r=this.createCube(e),i=Mesh_Mesh.fromCube(r).ToShaderMesh();i.calculateFaceNormals(),this.dr.set(i,"preview-cube")}flushPreviewCubes(){this.geo=[]}updateCursor(t){let e=this.scene.camera.getMouseWorldRay(t.canvas.width,t.canvas.height);this.flushPreviewCubes();let[r,i]=this.voxelRaycast(e,40);if(-1==r)return;let s=this.map.getCoords(i);if(this.addPreviewCube(s),t.mouseLeftPressed)if(console.log("click"),t.IsKeyDown(" ")){if(0==this.map.data[r])return;this.map.data[r]=0,this.bufferMap()}else 1!=this.map.data[i]&&(this.map.data[i]=1,this.bufferMap())}voxelRaycast(t,e){let r=this.worldToMap(t.origin),i=this.mapToWorld(r),s=r.x,a=r.y,o=r.z,n=s,h=a,l=o,d=t.normal.x>0?1:-1,c=t.normal.y>0?1:-1,u=t.normal.z>0?1:-1,m=this.cellSize,f=m/Math.abs(t.normal.x),g=m/Math.abs(t.normal.y),p=m/Math.abs(t.normal.z);i.add(new Vector3_Vector3(m/2*d,m/2*c,m/2*u));let w=Matrix4_Matrix4.newTranslation(i.x,i.y,i.z),x=Plane_Plane.WorldXY();x._matrix.multiply(w);let _=Plane_Plane.WorldYZ();_._matrix.multiply(w);let M=Plane_Plane.WorldXZ();M._matrix.multiply(w);let v=t.xPlane(_),V=t.xPlane(M),b=t.xPlane(x);if(v<0||V<0||b<0)return console.log("something critical went wrong!"),[-1,-1];for(let t=0;t<e;t++){if(1==this.map.tryGet(s,a,o))return[this.map.getIndex(s,a,o),this.map.getIndex(n,h,l)];n=s,h=a,l=o,v<V&&v<b?(v+=f,s+=d):V<b?(V+=g,a+=c):(b+=p,o+=u)}return[-1,-1]}bufferMap(){let t=[];this.map.iter(((e,r)=>{if(1==e){let e=this.map.getCoords(r),i=this.mapToWorld(e),s=this.createCube(i);t.push(Mesh_Mesh.fromCube(s))}}));let e=Mesh_Mesh.fromJoin(t);e=e.toLinearMesh(),e.ensureMultiFaceNormals(),e.ensureUVs();let r=Model.default();r.material=Material.newPurple(),r.material.specularDampner=2,r.mesh=e,this.phongShader.load(r,o.StaticDraw)}worldToMap(t){let e=this.size/2+this.cellSize/2;return t.added(new Vector3_Vector3(e,e,e)).floored()}mapToWorld(t){let e=this.size/2;return t.added(new Vector3_Vector3(-e,-e,-e))}createCube(t){let e=this.cellSize/2,r=Matrix4_Matrix4.newTranslation(t.x,t.y,t.z);return new Cube(Plane_Plane.WorldXY().transform(r),Domain3.fromBounds(-e,e,-e,e,-e,e))}}class ZebraApp extends App{constructor(t){super(t),this.material=Material.default(),this.plane=Plane_Plane.WorldXY(),this.geo=[],this.size=10,this.cellSize=.5,this.somePos=Vector3_Vector3.zero(),this.distance=new Parameter("distance",3,0,4,.01),this.radius=new Parameter("radius",1,0,4,.01),this.detail=new Parameter("detail",20,0,100,1),this.shademethod=EnumParameter.new("render method",3,["debug","vertex shaded","face shaded","ambient only","phong"]);let e=t.canvas;this.camera=new Camera(e,void 0,!0),this.camera.z_offset=-10,this.camera.angleAlpha=.4,this.camera.angleBeta=.5,this.scene=new Scene(this.camera),this.lineRenderer=new LineShader(t,[.3,.3,.3,1]),this.phong=new ZebraShader(t,!0)}ui(t){t.addParameter(this.detail,(()=>{this.start()})),t.add3DParameter("sun",Domain3.fromRadius(50),1,this.scene.sun.pos),t.add3DParameter("position",Domain3.fromRadius(3),.01,this.somePos,(()=>{this.start()})),t.addParameter(Parameter.new("specular-dampner",.2,0,10,.001),(t=>{this.material.specularDampner=t,this.start()}))}start(){let t=MultiLine.fromGrid(this.plane.clone().moveTo(new Vector3_Vector3(0,0,-this.radius.get())),100,2),e=2*this.detail.get(),r=this.radius.get(),i=this.distance.get(),s=this.detail.get(),a=Mesh_Mesh.fromJoin([Mesh_Mesh.newSphere(new Vector3_Vector3(i,0,0),this.radius.get(),this.detail.get(),e),Mesh_Mesh.newCone(new Vector3_Vector3(-i,0,-this.radius.get()),this.radius.get(),2*this.radius.get(),e),Mesh_Mesh.newCylinder(new Vector3_Vector3(0,0,-r),new Vector3_Vector3(0,0,r),r,s)]);a.ensureUVs(),a.calcAndSetVertexNormals();let n=new Model(Matrix4_Matrix4.newTranslate(this.somePos),a,this.material);this.phong.load(n,o.StaticDraw),this.lineRenderer.set(t)}update(t){this.camera.update(t),t.IsKeyPressed("k")&&(console.log(this.camera.worldMatrix.inverse().multiplyVector(Vector3_Vector3.new())),console.log(this.camera.pos),console.log(this.camera.getState()),console.log(this.camera.offset),this.camera.worldMatrix.print(),this.camera.worldMatrix.inverse().print())}draw(t){this.phong.draw(this.scene),this.lineRenderer.render(this.scene)}}class TorusApp extends App{constructor(t){super(t),this.params=[];let e=t.canvas;this.gs=new LineShader(t,[.3,.3,.3,1]),this.dr=DebugRenderer.new(t),this.ps=PhongShader.new(t),this.model=Model.default(),this.model.material=Material.newPurple();let r=new Camera(e,-2,!0);r.set(-50,1,1),this.scene=new Scene(r)}start(){this.startGrid();let t=Mesh_Mesh.newTorus(5,1,30,20);t.ensureUVs(),this.model.mesh=t,this.ps.load(this.model,o.StaticDraw)}ui(t){t.add3DParameter("sun",Domain3.fromRadius(5),.01,this.scene.sun.pos)}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY().moveTo(new Vector3_Vector3(0,0,-1)),100,2);this.gs.set(t,o.StaticDraw)}update(t){this.scene.camera.update(t);let e=5e-4*t.tick;this.model.position.multiply(Matrix4_Matrix4.newYRotation(e)),this.model.position.multiply(Matrix4_Matrix4.newZRotation(-e)),this.model.position.multiply(Matrix4_Matrix4.newXRotation(e)),this.ps.loadPosition(this.model.position)}draw(t){this.gs.render(this.scene),this.dr.render(this.scene),this.ps.draw(this.scene)}}var image_processing_app_awaiter=function(t,e,r,i){return new(r||(r=Promise))((function(s,a){function fulfilled(t){try{step(i.next(t))}catch(t){a(t)}}function rejected(t){try{step(i.throw(t))}catch(t){a(t)}}function step(t){t.done?s(t.value):function adopt(t){return t instanceof r?t:new r((function(e){e(t)}))}(t.value).then(fulfilled,rejected)}step((i=i.apply(t,e||[])).next())}))};class Settings{constructor(){this.parameters=new Map}get(t){return this.parameters.get(t).state}getParam(t){return this.parameters.get(t)}add(t){this.parameters.set(t.name,t)}publish(t,e){for(let r of this.parameters.values())t.addParameter(r,(t=>e()))}}class CannyApp extends App{constructor(t){super(t),this.guiPublished=!1;let e=t.canvas;this.dr=DebugRenderer.new(t);let r=new Camera(e,-2,!0);r.setState([493.3,-156.98,135.77,-50,1.5999999999999928,1.5707963267948966]),this.scene=new Scene(r),this.settings=new Settings,this.settings.add(Parameter.new("blur-size",3,3,7,2)),this.settings.add(Parameter.new("blur-sigma",1.4,.25,4,.01)),this.settings.add(Parameter.new("lower",100,1,255,1)),this.settings.add(Parameter.new("upper",200,1,255,1))}start(){return image_processing_app_awaiter(this,void 0,void 0,(function*(){let t=yield loadImageFromSrc("./data/textures/earth.png");!function cannyPartially(t,e,r){let i=0,addToDR=(t,e)=>{let s=Plane_Plane.WorldYZ().moveTo(Vector3_Vector3.new(-i,0,0));null==r||r.set(ImageMesh.new(t,s,1,!1,!0),e),i+=10};addToDR(t,"original");let s=t.toGreyscale();addToDR(s,"grey");let o=Kernels.generateGaussianKernel(e.get("blur-sigma"),e.get("blur-size")),n=s.applyKernel(o);addToDR(n,"blurred");let[h,l]=a.sobelMD(n);addToDR(h,"sobel magnitude"),addToDR(l,"sobel direction");let d=a.thetaMap(l),c=a.cannyNonMaximumSuppression(h,d);addToDR(c,"supressed");let u=128,m=255,f=a.cannyThreshold(c,e.get("lower"),e.get("upper"),u,m);addToDR(f,"threshold");let g=a.cannyHysteresis(f,u,m);return addToDR(g,"hysteresis"),console.log("DONE"),g}(Image_GeonImage.fromImageData(t),this.settings,this.dr),this.guiPublished||(this.gui.setContext("image-toggles-wrapper"),this.dr.addUi(this.gui),this.guiPublished=!0)}))}ui(t){this.gui=t,this.gui.addDiv("image-toggles-wrapper"),this.settings.publish(this.gui,(()=>{1==this.settings.get("auto-recalc")&&this.start()}));let e=Parameter.newBoolean("auto-recalc",!0);this.settings.add(e),this.gui.addBooleanParameter(e),this.gui.addButton("recalc",(()=>{this.start()}))}update(t){this.scene.camera.update(t)}draw(t){this.dr.render(this.scene)}}window.addEventListener("load",(function main(){let t=document.getElementById("canvas"),e=document.getElementById("interface"),r=HelpGl.initWebglContext(t),i=new Core(t,r,e);window.core=i;let s=new SwapApp(r,i,[CannyApp,TorusApp,ZebraApp,CubesPhongApp,PhongApp,MultiRendererApp,BillboardApp,PerlinApp,SurfaceApp,BezierApp,BezierCpApp,SurfaceCpApp,SplineApp,LoftApp,SphericalOneApp,SphericalTwoApp,SphericalThreeApp,IcosahedronApp,DotApp3,LeastSquaresApp,MeshInspectorApp,ObjLoaderApp]);i.addApp(s),s.swapFromUrl(location.hash,0);let a=0,o=FpsCounter.new();requestAnimationFrame((function loop(t){let e=t-a;a=t,o._update(e),document.title="fps: "+o.getFps(),i.update(e),i.draw(),requestAnimationFrame(loop)}))}),!1)})();