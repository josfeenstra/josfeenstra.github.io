(()=>{"use strict";class Const_Const{static IsRouglyZero(t){return Math.abs(t)<this.TOLERANCE}}Const_Const.TOLERANCE=1e-4,Const_Const.TOL_SQUARED=Math.pow(Const_Const.TOLERANCE,2),Const_Const.MAX_U16=65536,Const_Const.PLANE_RENDER_LINECOUNT=9,Const_Const.PLANE_RENDER_LINEDISTANCE=.3,Const_Const.CIRCLE_SEGMENTS=100,Const_Const.BEZIER_SEGMENTS=100;class FloatMatrix_FloatMatrix{constructor(t,e,r=[]){this.width=t,this.height=e,this.data=new Float32Array(this.width*this.height),r==[]||0==r.length||this.setData(r)}static mulBtoA(t,e){return e.mul(t)}static mulAtoB(t,e){return console.log(`attempting to multiply A [${t.width}x${t.height}] to B [${e.width}x${e.height}]`),t.mul(e)}static multiply(t,e){return e.mul(t)}static zeros(t=1,e=1){return new FloatMatrix_FloatMatrix(t,e)}static vstack(...t){if(0==t.length)throw new Error("need minimum of one array...");let e=t.length,r=t[0].length,i=FloatMatrix_FloatMatrix.zeros(r,e);for(let s=0;s<e;s++){if(t[s].length!=r)throw new Error("all arrays need to be the same length");for(let e=0;e<r;e++)i.set(s,e,t[s][e])}}static fromNative(t){let e=t.length,r=t[0].length,i=new FloatMatrix_FloatMatrix(r,e);for(var s=0;s<t.length;s++)for(var o=0;o<t[0].length;o++)i.set(s,o,t[s][o]);return i}clone(){let t=new FloatMatrix_FloatMatrix(this.width,this.height);for(let e=0;e<this.data.length;e++)t.data[e]=this.data[e];return t}print(){let t=[];for(var e=0;e<this.height;e++){t.push("|");for(var r=0;r<this.width;r++){let i=this.get(e,r).toFixed(2);i=i.padStart(8," "),t.push(i),r<this.width-2&&t.push("  ")}t.push("  |\n")}console.log(t.join(""))}setData(t){if(t.length!=this.height*this.width)throw"data.length does not match width * height "+t.length.toString();this.data.set(t)}count(){return this.height}get size(){return this.width*this.height}getDimensions(){return[this.height,this.width]}fill(t){let e=this.height*this.width;for(let r=0;r<e;r++)this.data[r]=t}fillWith(t,e=this.width){let r=e;if(r>this.width)throw"values per entry is larger than this._width. This will spill over.";for(let e=0;e<this.height;e++)for(let i=0;i<r;i++)this.set(e,i,t[e*r+i])}fillFrom(t){if(t.height<this.height||t.width<this.width)throw new Error("need same dimentions");for(let e=0;e<t.height;e++)for(let r=0;r<2;r++)this.set(e,r,t.get(e,r));return this}get(t,e){return this.data[t*this.width+e]}getRow(t){let e=new Float32Array(this.width);for(let r=0;r<this.width;r++)e[r]=this.get(t,r);return e}getColumn(t){let e=new Float32Array(this.height);for(let r=0;r<this.height;r++){let i=r*this.width+t;e[r]=this.data[i]}return e}set(t,e,r){this.data[t*this.width+e]=r}setRow(t,e){for(let r=0;r<this.width;r++)this.set(t,r,e[r])}forEachValue(t){for(let e=0;e<this.data.length;e++)this.data[e]=t(this.data[e],e);return this}takeRows(t){const e=t.length;let r=new FloatMatrix_FloatMatrix(e,this.width);for(let i=0;i<e;i++){let e=t[i];r.setRow(i,this.getRow(e))}return r}mapWith(t,e){let r=this.clone(),i=Math.min(this.width,t.height),s=Math.min(this.height,t.height);for(var o=0;o<s;o++)for(var n=0;n<i;n++)r.set(o,n,e(this.get(o,n),t.get(o,n)));return r}toNative(){let t=[];for(var e=0;e<this.height;e++){t[e]=[];for(var r=0;r<this.width;r++)t[e][r]=this.get(e,r)}return t}mul(t){let e=this;if(t.height!==e.width)throw new Error(`Columns in A should be the same as the number of rows in B\n                a.width ${e.width},\n                b.height ${t.height}`);let r=e.width;for(var i=new FloatMatrix_FloatMatrix(t.width,e.height),s=0;s<i.height;s++)for(var o=0;o<i.width;o++){let a=0;for(var n=0;n<r;n++)a+=e.get(s,n)*t.get(n,o);i.set(s,o,a)}return i}tp(){let t=FloatMatrix_FloatMatrix.zeros(this.height,this.width);for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++)t.set(r,e,this.get(e,r));return t}inv(){return f.pinv(this)}inv2(){return f.pinv2(this)}}class GeonMath{static isRougly(t,e,r){return Math.abs(t-e)<r}static clamp(t,e,r){return Math.min(Math.max(t,e),r)}static smooth(t){return t*t*t*(t*(6*t-15)+10)}static fraction(t,e,r){return(t-e)/(r-e)}static lerp(t,e,r){return t+r*(e-t)}static radToDeg(t){return 180*t/Math.PI}static degToRad(t){return t*Math.PI/180}static factorial(t){let e=1;for(let r=1;r<t+1;r++)e*=r;return e}static stack(t){let e=0;for(let r=1;r<t+1;r++)e+=r;return e}static sample(t,e){let r=e*(t.length-1),i=Math.floor(r),s=Math.ceil(r);return this.lerp(t[i],t[s],r-i)}static sampleSmooth(t,e){let r=e*(t.length-1),i=Math.floor(r),s=Math.ceil(r);return this.lerp(t[i],t[s],this.smooth(r-i))}static between(t,e){let r=0,i=t.length-1;for(let s=0;s<t.length;s++){if(r>i){console.log("start",r,"end",i);let t=i;i=r,r=t;break}let s=Math.round((i-r)/2);if(e<t[s])r=s;else{if(!(e>t[s])){r=s,i=s;break}i=s}}return[r,i]}}class Vector2_Vector2{constructor(t,e){this.x=t,this.y=e}get data(){return[this.x,this.y]}static new(t=0,e=0){return new Vector2_Vector2(t,e)}static fromArray(t){return new Vector2_Vector2(t[0],t[1])}static fromLerp(t,e,r){return new Vector2_Vector2(t.x+(e.x-t.x)*r,t.y+(e.y-t.y)*r)}static fromRandom(t){return new Vector2_Vector2(t.get(),t.get())}static fromRandomAngle(){let t=Math.random()*Math.PI*2;return new Vector2_Vector2(Math.cos(t),Math.sin(t))}static fromCircle(t,e,r){return new Vector2_Vector2(t.x+e*Math.sin(r),t.y+e*Math.cos(r))}static fromCopy(t){return this.zero().copy(t)}static zero(){return new Vector2_Vector2(0,0)}static NaN(){return new Vector2_Vector2(NaN,NaN)}static fromCircumcenter(t,e,r){const i=t.squareSum(),s=e.squareSum(),o=r.squareSum();let n=2*(t.x*(e.y-r.y)+e.x*(r.y-t.y)+r.x*(t.y-e.y));if(n<1e-6)return Vector2_Vector2.NaN();let a=(i*(e.y-r.y)+s*(r.y-t.y)+o*(t.y-e.y))/n,h=(i*(r.x-e.x)+s*(t.x-r.x)+o*(e.x-t.x))/n;return new Vector2_Vector2(a,h)}static sign(t,e,r){return(t.x-r.x)*(e.y-r.y)-(e.x-r.x)*(t.y-r.y)}set(t,e){return this.x=t,this.y=e,this}roughlyEquals(t,e){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e}equals(t){return t.x===this.x&&t.y===this.y}toString(){return`Vector2(${this.x}, ${this.y})`}clone(){return new Vector2_Vector2(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}added(t){return new Vector2_Vector2(this.x+t.x,this.y+t.y)}addn(t,e){return this.x+=t,this.y+=e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subbed(t){return new Vector2_Vector2(this.x-t.x,this.y-t.y)}mul(t){return this.x*=t.x,this.y*=t.y,this}scale(t){return this.x*=t,this.y*=t,this}scaled(t){return new Vector2_Vector2(this.x*t,this.y*t)}divVector(t){return this.x/=t.x,this.y/=t.y,this}div(t){return this.x/=t,this.y/=t,this}dived(t){return new Vector2_Vector2(this.x/t,this.y/t)}minimum(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}maximum(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const r=this.length();return this.div(r||1).scale(Math.max(t,Math.min(e,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}rounded(){return Vector2_Vector2.new(Math.round(this.x),Math.round(this.y))}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}squareSum(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.lengthSquared())}lengthSquared(){return this.x*this.x+this.y*this.y}manhat(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.div(this.length()||1)}normalized(){return this.dived(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}disTo(t){return Math.sqrt(this.disToSquared(t))}disToSquared(t){let e=this.x-t.x,r=this.y-t.y;return e*e+r*r}disToManhat(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().scale(t)}lerp(t,e){return new Vector2_Vector2(this.x+(t.x-this.x)*e,this.y+(t.y-this.y)*e)}sign(t,e){return Vector2_Vector2.sign(this,t,e)}projectOnVector(t){const e=t.lengthSquared();if(0===e)return this.set(0,0);const r=t.dot(this)/e;return this.copy(t).scale(r)}}Vector2_Vector2._zero=Vector2_Vector2.zero();class Vector3_Vector3{constructor(t,e,r){this.x=t,this.y=e,this.z=r}static new(t=0,e=0,r=0){return new Vector3_Vector3(t,e,r)}get data(){return[this.x,this.y,this.z]}static from2d(t){return new Vector3_Vector3(t.x,t.y,0)}static calculateWheelOrder(t,e,r){let i=[];t.forEach((t=>{i.push(new Vector2_Vector2(t.dot(e),t.dot(r)).angle())}));let s=Util.range(t.length);return s.sort(((t,e)=>i[t]-i[e])),s}static fromLerp(t,e,r){return new Vector3_Vector3(t.x+(e.x-t.x)*r,t.y+(e.y-t.y)*r,t.z+(e.z-t.z)*r)}static fromArray(t){return new Vector3_Vector3(t[0],t[1],t[2])}static fromRandom(t){return new Vector3_Vector3(t.get(),t.get(),t.get())}static fromRandomUnit(t){return this.fromRandom(t).sub(Vector3_Vector3.new(.5,.5,.5)).normalize()}static fromSphere(t,e,r){const i=Math.sin(r)*t;return this.constructor(i*Math.sin(e),Math.cos(r)*t,i*Math.cos(e))}static fromCylinder(t,e,r){return this.constructor(t*Math.sin(e),r,t*Math.cos(e))}static fromLerpWeights(t,e,r,i,s){if(Math.abs(s-r)<1e-5)return t;if(Math.abs(s-i)<1e-5)return e;if(Math.abs(r-i)<1e-5)return t;let o=(s-r)/(i-r);return new Vector3_Vector3(t.x+o*(e.x-t.x),t.y+o*(e.y-t.y),t.z+o*(e.z-t.z))}static zero(){return new Vector3_Vector3(0,0,0)}static unitX(){return new Vector3_Vector3(1,0,0)}static unitY(){return new Vector3_Vector3(0,1,0)}static unitZ(){return new Vector3_Vector3(0,0,1)}toArray(){return new Float32Array([this.x,this.y,this.z])}set(t,e,r){return this.x=t,this.y=e,this.z=r,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}toString(){return`Vector3(${this.x}, ${this.y}, ${this.z})`}toVector2(){return new Vector2_Vector2(this.x,this.y)}clone(){return new Vector3_Vector3(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}to2D(){return new Vector2_Vector2(this.x,this.y)}largestValue(){return Math.max(this.x,this.y,this.z)}addN(t){return this.x+=t,this.y+=t,this.z+=t,this}addNs(t,e,r){return this.x+=t,this.y+=e,this.z+=r,this}added(t){return new Vector3_Vector3(this.x+t.x,this.y+t.y,this.z+t.z)}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}subbed(t){return new Vector3_Vector3(this.x-t.x,this.y-t.y,this.z-t.z)}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}item(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return 1;default:throw"nope"}}scaled(t){return new Vector3_Vector3(this.x*t,this.y*t,this.z*t)}scale(t){return this.x*=t,this.y*=t,this.z*=t,this}mul(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplied(t){return new Vector3_Vector3(this.x*t.x,this.y*t.y,this.z*t.z)}divVector(t){return new Vector3_Vector3(this.x/t.x,this.y/t.y,this.z/t.z)}divided(t){return new Vector3_Vector3(this.x/t,this.y/t,this.z/t)}div(t){return this.x/=t,this.y/=t,this.z/=t,this}minimumed(t){return new Vector3_Vector3(Math.min(this.x,t.x),Math.min(this.y,t.y),Math.min(this.z,t.z))}maximumed(t){return new Vector3_Vector3(Math.max(this.x,t.x),Math.max(this.y,t.y),Math.max(this.z,t.z))}clamped(t,e){return new Vector3_Vector3(Math.max(t.x,Math.min(e.x,this.x)),Math.max(t.y,Math.min(e.y,this.y)),Math.max(t.z,Math.min(e.z,this.z)))}clampScalared(t,e){return new Vector3_Vector3(GeonMath.clamp(this.x,t,e),GeonMath.clamp(this.y,t,e),GeonMath.clamp(this.z,t,e))}clampLengthed(t,e){const r=this.length();return this.div(r||1).scale(Math.max(t,Math.min(e,r)))}floored(){return new Vector3_Vector3(Math.floor(this.x),Math.floor(this.y),Math.floor(this.z))}ceiled(){return new Vector3_Vector3(Math.ceil(this.x),Math.ceil(this.y),Math.ceil(this.z))}rounded(){return new Vector3_Vector3(Math.round(this.x),Math.round(this.y),Math.round(this.z))}roundedToZero(){return new Vector3_Vector3(this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z<0?Math.ceil(this.z):Math.floor(this.z))}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}negated(){return new Vector3_Vector3(-this.x,-this.y,-this.z)}angle(t,e){let r=this.subbed(e.scaled(this.dot(e))),i=t.subbed(e.scaled(t.dot(e)));return console.log(r),console.log(i),0}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}cross(t){const e=this.x,r=this.y,i=this.z,s=t.x,o=t.y,n=t.z;return new Vector3_Vector3(r*n-i*o,i*s-e*n,e*o-r*s)}getLengthSquared(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.getLengthSquared())}manhat(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.div(this.length()||1)}normalized(){return this.divided(this.length()||1)}isNormal(){return Math.abs(this.length()-1)<Const_Const.TOLERANCE}disTo(t){return Math.sqrt(this.disToSquared(t))}disToSquared(t){const e=this.x-t.x,r=this.y-t.y,i=this.z-t.z;return e*e+r*r+i*i}disToManhat(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setLength(t){return this.normalize().scale(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}projectOnVector(t){const e=t.getLengthSquared();if(0===e)return this.set(0,0,0);const r=t.dot(this)/e;return this.copy(t).scale(r)}projectedOnPlane(e){return t.copy(this).projectOnVector(e),this.minimumed(t)}mirrored(e){return this.minimumed(t.copy(e).scale(2*this.dot(e)))}rotated(t,e){return Matrix4_Matrix4.newAxisRotation(t,e).multiplyVector(this)}}const t=new Vector3_Vector3(0,0,0);class Matrix4_Matrix4 extends FloatMatrix_FloatMatrix{constructor(t=[]){super(4,4,t)}static new(t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]){return new Matrix4_Matrix4(t)}static newIdentity(){return new Matrix4_Matrix4([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}static newCopy(t){let e=new Matrix4_Matrix4;for(let r=0;r<16;r++)e.data[r]=t.data[r];return e}get position(){let t=this.data,e=Vector3_Vector3.new();return e.x=t[12],e.y=t[13],e.z=t[14],e}clone(){return Matrix4_Matrix4.newCopy(this)}copy(t){for(let e=0;e<16;e++)this.data[e]=t.data[e];return this}multiplied(t){const e=t.data,r=this.data;var i=r[0],s=r[1],o=r[2],n=r[3],a=r[4],h=r[5],l=r[6],d=r[7],c=r[8],u=r[9],m=r[10],f=r[11],g=r[12],p=r[13],w=r[14],x=r[15],_=e[0],M=e[1],v=e[2],V=e[3],y=e[4],b=e[5],P=e[6],S=e[7],R=e[8],A=e[9],C=e[10],D=e[11],E=e[12],T=e[13],z=e[14],F=e[15];return new Matrix4_Matrix4([i*_+s*y+o*R+n*E,i*M+s*b+o*A+n*T,i*v+s*P+o*C+n*z,i*V+s*S+o*D+n*F,a*_+h*y+l*R+d*E,a*M+h*b+l*A+d*T,a*v+h*P+l*C+d*z,a*V+h*S+l*D+d*F,c*_+u*y+m*R+f*E,c*M+u*b+m*A+f*T,c*v+u*P+m*C+f*z,c*V+u*S+m*D+f*F,g*_+p*y+w*R+x*E,g*M+p*b+w*A+x*T,g*v+p*P+w*C+x*z,g*V+p*S+w*D+x*F])}multiply(t){return this.data=this.multiplied(t).data,this}transpose(){let t=new Matrix4_Matrix4,e=t.data,r=this.data;return e[0]=r[0],e[1]=r[4],e[2]=r[8],e[3]=r[12],e[4]=r[1],e[5]=r[5],e[6]=r[9],e[7]=r[13],e[8]=r[2],e[9]=r[6],e[10]=r[10],e[11]=r[14],e[12]=r[3],e[13]=r[7],e[14]=r[11],e[15]=r[15],t}static newLookAt(t,e,r){let i=new Matrix4_Matrix4,s=i.data,o=t.clone().sub(e).normalize(),n=r.clone().cross(r).normalize(),a=o.clone().cross(n).normalize();return s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=0,s[4]=a.x,s[5]=a.y,s[6]=a.z,s[7]=0,s[8]=o.x,s[9]=o.y,s[10]=o.z,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,i}static newPerspective(t,e,r,i){let s=new Matrix4_Matrix4,o=s.data;var n=Math.tan(.5*Math.PI-.5*t),a=1/(r-i);return o[0]=n/e,o[1]=0,o[2]=0,o[3]=0,o[4]=0,o[5]=n,o[6]=0,o[7]=0,o[8]=0,o[9]=0,o[10]=(r+i)*a,o[11]=-1,o[12]=0,o[13]=0,o[14]=r*i*a*2,o[15]=0,s}static newOrthographic(t,e,r,i,s,o){let n=new Matrix4_Matrix4,a=n.data;return a[0]=2/(e-t),a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=2/(i-r),a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=2/(s-o),a[11]=0,a[12]=(t+e)/(t-e),a[13]=(r+i)/(r-i),a[14]=(s+o)/(s-o),a[15]=1,n}static newFrustum(t,e,r,i,s,o){let n=new Matrix4_Matrix4,a=n.data;var h=e-t,l=i-r,d=o-s;return a[0]=2*s/h,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=2*s/l,a[6]=0,a[7]=0,a[8]=(t+e)/h,a[9]=(i+r)/l,a[10]=-(o+s)/d,a[11]=-1,a[12]=0,a[13]=0,a[14]=-2*s*o/d,a[15]=0,n}static newTranslation(t,e,r,i=Matrix4_Matrix4.new()){let s=i.data;return s[12]=t,s[13]=e,s[14]=r,i}static newTranslate(t,e=Matrix4_Matrix4.new()){let r=e.data;return r[12]=t.x,r[13]=t.y,r[14]=t.z,e}static newXRotation(t,e=Matrix4_Matrix4.newIdentity()){let r=e.data;var i=Math.cos(t),s=Math.sin(t);return r[5]=i,r[6]=-s,r[9]=s,r[10]=i,e}static newYRotation(t,e=Matrix4_Matrix4.newIdentity()){let r=e.data;var i=Math.cos(t),s=Math.sin(t);return r[0]=i,r[2]=s,r[8]=-s,r[10]=i,e}static newZRotation(t,e=Matrix4_Matrix4.newIdentity()){let r=e.data;var i=Math.cos(t),s=Math.sin(t);return r[0]=i,r[1]=s,r[4]=-s,r[5]=i,e}static newAxisRotation(t,e){let r=new Matrix4_Matrix4,i=r.data,s=t.x,o=t.y,n=t.z,a=Math.sqrt(s*s+o*o+n*n);s/=a,o/=a,n/=a;let h=s*s,l=o*o,d=n*n,c=Math.cos(e),u=Math.sin(e),m=1-c;return i[0]=h+(1-h)*c,i[1]=s*o*m+n*u,i[2]=s*n*m-o*u,i[3]=0,i[4]=s*o*m-n*u,i[5]=l+(1-l)*c,i[6]=o*n*m+s*u,i[7]=0,i[8]=s*n*m+o*u,i[9]=o*n*m-s*u,i[10]=d+(1-d)*c,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,r}axisRotate(t,e){let r=new Matrix4_Matrix4,i=r.data,s=this.data;var o=t.x,n=t.y,a=t.z,h=Math.sqrt(o*o+n*n+a*a),l=(o/=h)*o,d=(n/=h)*n,c=(a/=h)*a,u=Math.cos(e),m=Math.sin(e),f=1-u,g=l+(1-l)*u,p=o*n*f+a*m,w=o*a*f-n*m,x=o*n*f-a*m,_=d+(1-d)*u,M=n*a*f+o*m,v=o*a*f+n*m,V=n*a*f-o*m,y=c+(1-c)*u,b=s[0],P=s[1],S=s[2],R=s[3],A=s[4],C=s[5],D=s[6],E=s[7],T=s[8],z=s[9],F=s[10],L=s[11];return i[0]=g*b+p*A+w*T,i[1]=g*P+p*C+w*z,i[2]=g*S+p*D+w*F,i[3]=g*R+p*E+w*L,i[4]=x*b+_*A+M*T,i[5]=x*P+_*C+M*z,i[6]=x*S+_*D+M*F,i[7]=x*R+_*E+M*L,i[8]=v*b+V*A+y*T,i[9]=v*P+V*C+y*z,i[10]=v*S+V*D+y*F,i[11]=v*R+V*E+y*L,s!==i&&(i[12]=s[12],i[13]=s[13],i[14]=s[14],i[15]=s[15]),r}static newScaler(t,e,r){return new Matrix4_Matrix4([t,0,0,0,0,e,0,0,0,0,r,0,0,0,0,1])}scale(t,e,r){let i=new Matrix4_Matrix4,s=i.data,o=this.data;return s[0]=t*o[0],s[1]=t*o[1],s[2]=t*o[2],s[3]=t*o[3],s[4]=e*o[4],s[5]=e*o[5],s[6]=e*o[6],s[7]=e*o[7],s[8]=r*o[8],s[9]=r*o[9],s[10]=r*o[10],s[11]=r*o[11],o!==s&&(s[12]=o[12],s[13]=o[13],s[14]=o[14],s[15]=o[15]),i}newCompose(t,e,r,i=new Matrix4_Matrix4){let s=i.data;const o=e.x,n=e.y,a=e.z,h=e.w,l=o+o,d=n+n,c=a+a,u=o*l,m=o*d,f=o*c,g=n*d,p=n*c,w=a*c,x=h*l,_=h*d,M=h*c,v=r.x,V=r.y,y=r.z;return s[0]=(1-(g+w))*v,s[1]=(m+M)*v,s[2]=(f-_)*v,s[3]=0,s[4]=(m-M)*V,s[5]=(1-(u+w))*V,s[6]=(p+x)*V,s[7]=0,s[8]=(f+_)*y,s[9]=(p-x)*y,s[10]=(1-(u+g))*y,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,i}decompose(){const t=this.data;let e=Vector3_Vector3.new();e.x=t[12],e.y=t[13],e.z=t[14];let r=Vector3_Vector3.new(t[0],t[1],t[2]).length(),i=Vector3_Vector3.new(t[4],t[5],t[6]).length(),s=Vector3_Vector3.new(t[8],t[9],t[10]).length();this.determinate()<0&&(r=-r);let o=Vector3_Vector3.new();return o.x=r,o.y=i,o.z=s,[e,Vector3_Vector3.new(1/r,1/i,1/s),o]}determinate(){let t=this.data;var e=t[0],r=t[1],i=t[2],s=t[3],o=t[4],n=t[5],a=t[6],h=t[7],l=t[8],d=t[9],c=t[10],u=t[11],m=t[12],f=t[13],g=t[14],p=t[15],w=c*p,x=g*u,_=a*p,M=g*h,v=a*u,V=c*h,y=i*p,b=g*s,P=i*u,S=c*s,R=i*h,A=a*s;return 1/(e*(w*n+M*d+v*f-(x*n+_*d+V*f))+o*(x*r+y*d+S*f-(w*r+b*d+P*f))+l*(_*r+b*n+R*f-(M*r+y*n+A*f))+m*(V*r+P*n+A*d-(v*r+S*n+R*d)))}inverse(t=new Matrix4_Matrix4){let e=t.data,r=this.data;var i=r[0],s=r[1],o=r[2],n=r[3],a=r[4],h=r[5],l=r[6],d=r[7],c=r[8],u=r[9],m=r[10],f=r[11],g=r[12],p=r[13],w=r[14],x=r[15],_=m*x,M=w*f,v=l*x,V=w*d,y=l*f,b=m*d,P=o*x,S=w*n,R=o*f,A=m*n,C=o*d,D=l*n,E=c*p,T=g*u,z=a*p,F=g*h,L=a*u,B=c*h,I=i*p,N=g*s,U=i*u,k=c*s,H=i*h,G=a*s,O=_*h+V*u+y*p-(M*h+v*u+b*p),W=M*s+P*u+A*p-(_*s+S*u+R*p),Y=v*s+S*h+C*p-(V*s+P*h+D*p),X=b*s+R*h+D*u-(y*s+A*h+C*u),q=1/(i*O+a*W+c*Y+g*X);return e[0]=q*O,e[1]=q*W,e[2]=q*Y,e[3]=q*X,e[4]=q*(M*a+v*c+b*g-(_*a+V*c+y*g)),e[5]=q*(_*i+S*c+R*g-(M*i+P*c+A*g)),e[6]=q*(V*i+P*a+D*g-(v*i+S*a+C*g)),e[7]=q*(y*i+A*a+C*c-(b*i+R*a+D*c)),e[8]=q*(E*d+F*f+L*x-(T*d+z*f+B*x)),e[9]=q*(T*n+I*f+k*x-(E*n+N*f+U*x)),e[10]=q*(z*n+N*d+H*x-(F*n+I*d+G*x)),e[11]=q*(B*n+U*d+G*f-(L*n+k*d+H*f)),e[12]=q*(z*m+B*w+T*l-(L*w+E*l+F*m)),e[13]=q*(U*w+E*o+N*m-(I*m+k*w+T*o)),e[14]=q*(I*l+G*w+F*o-(H*w+z*o+N*l)),e[15]=q*(H*m+L*o+k*l-(U*l+G*m+B*o)),t}multiplyVector(t){let e=new Array(3);for(var r=0;r<3;++r){e[r]=0;for(var i=0;i<4;++i)e[r]+=t.item(i)*this.get(i,r)}return new Vector3_Vector3(e[0],e[1],e[2])}multipliedVectorList(t){let e=Array(t.length);for(let r=0;r<t.length;r++)e[r]=this.multiplyVector(t[r]);return e}}class Geometry{rotateX(t){let e=Matrix4_Matrix4.newXRotation(t);return this.transform(e)}rotateY(t){let e=Matrix4_Matrix4.newYRotation(t);return this.transform(e)}rotateZ(t){let e=Matrix4_Matrix4.newZRotation(t);return this.transform(e)}rotate(t,e){let r=Matrix4_Matrix4.newAxisRotation(e,t);return this.transform(r)}move(t){let e=Matrix4_Matrix4.newTranslate(t);return this.transform(e)}scale(t){let e=Matrix4_Matrix4.newScaler(t.x,t.y,t.z);return this.transform(e)}rotatedX(t){let e=Matrix4_Matrix4.newXRotation(t);return this.transformed(e)}rotatedY(t){let e=Matrix4_Matrix4.newYRotation(t);return this.transformed(e)}rotatedZ(t){let e=Matrix4_Matrix4.newZRotation(t);return this.transformed(e)}rotated(t,e){let r=Matrix4_Matrix4.newAxisRotation(e,t);return this.transformed(r)}moved(t){let e=Matrix4_Matrix4.newTranslate(t);return this.transformed(e)}scaled(t){let e=Matrix4_Matrix4.newScaler(t.x,t.y,t.z);return this.transformed(e)}}class MultiVector2_MultiVector2 extends Geometry{constructor(t){super(),this._matrix=t}get data(){return this._matrix.data}static new(t){return new MultiVector2_MultiVector2(new FloatMatrix_FloatMatrix(2,t))}static fromList(t){let e=t.length,r=MultiVector2_MultiVector2.new(e);for(let e=0;e<t.length;e++)r._matrix.set(e,0,t[e].x),r._matrix.set(e,1,t[e].y);return r}static fromMatrix(t){if(2!=t.width)throw new Error("incorrect.");return new MultiVector2_MultiVector2(t)}static fromData(t){let e=MultiVector2_MultiVector2.new(t.length/2);return e._matrix.fillWith(t),e}get width(){return this._matrix.width}get height(){return this._matrix.height}get dimensions(){return this._matrix.width}get count(){return this._matrix.height}get matrix(){return this._matrix}forEach(t){for(let e=0;e<this.count;e++){let r=this.get(e);t(r,e),this.set(e,r)}return this}map(t){let e=this.clone();for(let r=0;r<this.count;r++){let i=this.get(r);e.set(r,t(i,r))}return e}take(t){const e=t.length;let r=MultiVector2_MultiVector2.new(e);for(let i=0;i<e;i++){let e=t[i];r.set(i,this.get(e))}return r}remove(t){const e=this.count-t.length;let r=MultiVector2_MultiVector2.new(e);for(let e=0,i=0;e<this.count;e++)t.includes(e)||(r.set(i,this.get(e)),i++);return r}set(t,e){this._matrix.data[t*this._matrix.width+0]=e.x,this._matrix.data[t*this._matrix.width+1]=e.y}setXY(t,e,r){this._matrix.data[t*this._matrix.width+0]=e,this._matrix.data[t*this._matrix.width+1]=r}get(t){return new Vector2_Vector2(this._matrix.data[t*this.width+0],this._matrix.data[t*this.width+1])}toMatrixSlice(){return this._matrix}toList(){let t=[];for(let e=0;e<this.height;e++)t.push(this.get(e));return t}to3D(){let t=MultiVector3_MultiVector3.new(this.count);for(let e=0;e<this.count;e++){let r=this._matrix.getRow(e);t.setXYZ(e,r[0],r[1],0)}return t}clone(){let t=MultiVector2_MultiVector2.new(this.count);return t._matrix=this._matrix.clone(),t}transform(t){return this._matrix.mul(t),this}transformed(t){let e=MultiVector2_MultiVector2.new(this.count);return e._matrix=this._matrix.mul(t),e}}class MultiVector3_MultiVector3 extends Geometry{constructor(t){super(),this._matrix=t}static new(t){return new MultiVector3_MultiVector3(new FloatMatrix_FloatMatrix(3,t))}static fromList(t){let e=t.length,r=MultiVector3_MultiVector3.new(e);return r.fillFromList(t),r}static fromNative(t){return new MultiVector3_MultiVector3(FloatMatrix_FloatMatrix.fromNative(t))}static fromData(t){let e=MultiVector3_MultiVector3.new(t.length/3);return e._matrix.fillWith(t),e}static fromMatrix(t){if(3!=t.width)throw new Error("incorrect.");return new MultiVector3_MultiVector3(t)}get width(){return this._matrix.width}get height(){return this._matrix.height}get dimensions(){return this._matrix.width}get count(){return this._matrix.height}get matrix(){return this._matrix}setXYZ(t,e,r,i){this._matrix.data[t*this.width+0]=e,this._matrix.data[t*this.width+1]=r,this._matrix.data[t*this.width+2]=i}set(t,e){this._matrix.data[t*this.width+0]=e.x,this._matrix.data[t*this.width+1]=e.y,this._matrix.data[t*this.width+2]=e.z}get(t){return new Vector3_Vector3(this._matrix.data[t*this.width+0],this._matrix.data[t*this.width+1],this._matrix.data[t*this.width+2])}getCopy(t,e){t.x=this._matrix.data[e*this.width+0],t.y=this._matrix.data[e*this.width+1],t.z=this._matrix.data[e*this.width+2]}slice(){return this._matrix}fillFromList(t){for(let e=0;e<t.length;e++)this.set(e,t[e])}forEach(t){for(let e=0;e<this.count;e++){let r=this.get(e);r=t(r,e),r instanceof Vector3_Vector3&&this.set(e,r)}return this}take(t){const e=t.length;let r=MultiVector3_MultiVector3.new(e);for(let i=0;i<e;i++){let e=t[i];r.set(i,this.get(e))}return r}takeRange(t,e){let r=MultiVector3_MultiVector3.new(e-t),i=0;for(let s=t;s<e;s++)r.set(i,this.get(s)),i++;return r}map(t){let e=this.clone();for(let r=0;r<this.count;r++){let i=t(this.get(r),r);e.set(r,i)}return e}mapWith(t,e){let r=this._matrix.mapWith(t._matrix,e);return new MultiVector3_MultiVector3(r)}toList(){let t=[];for(let e=0;e<this.height;e++)t.push(this.get(e));return t}to2D(){let t=MultiVector2_MultiVector2.new(this.count);return this.forEach(((e,r)=>{t.setXY(r,e.x,e.y)})),t}mean(){let t=Vector3_Vector3.zero(),e=this.count;for(let r=0;r<e;r++)t.x+=this._matrix.data[3*r],t.y+=this._matrix.data[3*r+1],t.z+=this._matrix.data[3*r+2];return t.scale(1/e)}average(){return this.mean()}closestId(t){let e=1/0,r=-1;return this.forEach(((i,s)=>{let o=t.disToSquared(i);o<e&&(e=o,r=s)})),r}closestIds(t,e){let r=[];for(let i=0;i<e;i++){let e=1/0,i=-1;this.forEach(((s,o)=>{if(r.includes(i))return;let n=t.disToSquared(s);n<e&&(e=n,i=o)})),r.push(i)}return r}clone(){return new MultiVector3_MultiVector3(this._matrix.clone())}transform(t){for(let e=0;e<this.height;e++){let r=this.get(e);r=t.multiplyVector(r),this.set(e,r)}return this}move(t){for(let e=0;e<this.height;e++){let r=this.get(e);r.add(t),this.set(e,r)}return this}scale(t){for(let e=0;e<this.height;e++){let r=this.get(e);r.mul(t),this.set(e,r)}return this}transformed(t){return new MultiVector3_MultiVector3(function calc(t,e){let r=new FloatMatrix_FloatMatrix(e.width,t.height);for(var i=0;i<t.height;i++)for(var s=0;s<4;s++){for(var o=0;o<3;o++)r.set(i,s,r.get(i,s)+t.get(i,o)*e.get(o,s));r.set(i,s,r.get(i,s)+1*e.get(3,s))}return r}(this._matrix,t))}moved(t){let e=Matrix4_Matrix4.newTranslate(t);return this.transformed(e)}scaled(t){let e=Matrix4_Matrix4.newScaler(t.x,t.y,t.z);return this.transformed(e)}}class Util{static range(t){let e=[];for(let r=0;r<t;r++)e.push(r);return e}static collect(t){let e=new Array;for(let r of t)e.push(r);return e}static lowestScore(t,e,r=1e-10){let i=1/0;for(;t.t1-t.t0>r;)i=(t.t1+t.t0)/2,e(i-r)<e(i+r)?t.t1=i:t.t0=i;return i}static lowestScoreSquared(t,e,r=1e-10){let i=1/0,s=1/0;for(;t.x.t1-t.x.t0>r||t.y.t1-t.y.t0>r;)i=(t.x.t1+t.x.t0)/2,s=(t.y.t1+t.y.t0)/2,e(i-r,s)<e(i+r,s)?t.x.t1=i:t.x.t0=i,e(i,s-r)<e(i,s+r)?t.y.t1=s:t.y.t0=s;return Vector2_Vector2.new(i,s)}static iterateTriangle(t,e){return GeonMath.stack(t)+e}static getTriangleBase(t,e){let r=MultiVector3_MultiVector3.new(e),i=e-1,s=0;for(let e=0;e<=i;e++){let o=Util.iterateTriangle(i,e);r.set(s,t.get(o)),s++}return r}static getTriangleLeft(t,e){let r=MultiVector3_MultiVector3.new(e),i=0;for(let s=e-1;s>-1;s-=1)r.set(i,t.get(Util.iterateTriangle(s,0))),i++;return r}static getTriangleRight(t,e){let r=MultiVector3_MultiVector3.new(e),i=0;for(let s=e-1;s>-1;s-=1)r.set(i,t.get(Util.iterateTriangle(s,s))),i++;return r}}class Kernels{static generateGaussianKernel(t,e){var r,i,s,o,n,a,h,l,d,c,u,m,f,g,p,w;for(n=t,2.718,o=new FloatMatrix_FloatMatrix(e,e),a=0,i=d=0,f=e-1;0<=f?d<=f:d>=f;i=0<=f?++d:--d)for(h=-(e-1)/2+i,s=c=0,g=e-1;0<=g?c<=g:c>=g;s=0<=g?++c:--c)l=-(e-1)/2+s,r=1/(2*Math.PI*n*n)*Math.pow(2.718,-(h*h+l*l)/(2*n*n)),o.set(i,s,r),a+=r;for(i=u=0,p=e-1;0<=p?u<=p:u>=p;i=0<=p?++u:--u)for(s=m=0,w=e-1;0<=w?m<=w:m>=w;s=0<=w?++m:--m)o.set(i,s,o.get(i,s)/a);return o}static buildSobelKernel(t,e){}}Kernels.SmoothKernel=new FloatMatrix_FloatMatrix(3,3,[1,1,1,1,1,1,1,1,1]).forEachValue((t=>1*t/9)),Kernels.SmoothKernel5=new FloatMatrix_FloatMatrix(5,5,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]).forEachValue((t=>1*t/25)),Kernels.Gauss5=new FloatMatrix_FloatMatrix(5,5,[2,4,5,4,2,4,9,12,9,4,5,12,15,12,5,4,9,12,9,4,2,4,5,4,2]).forEachValue((t=>1*t/159)),Kernels.DiagonalKernel=new FloatMatrix_FloatMatrix(3,3,[1,0,-1,0,0,0,-1,0,1]),Kernels.SobelLeft=new FloatMatrix_FloatMatrix(3,3,[1,2,1,0,0,0,-1,-2,-1]),Kernels.SobelRight=new FloatMatrix_FloatMatrix(3,3,[-1,-2,-1,0,0,0,1,2,1]),Kernels.SobelUp=new FloatMatrix_FloatMatrix(3,3,[1,0,-1,2,0,-2,1,0,-1]),Kernels.SobelDown=new FloatMatrix_FloatMatrix(3,3,[-1,0,1,-2,0,2,-1,0,1]);class MultiShader{setAndRender(t,e){this.set(t,g.DynamicDraw),this.render(e)}}const e=[0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0],r=[[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1],[3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,9,0,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1],[3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1],[3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1],[9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1],[1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1],[9,2,10,9,0,2,8,4,7,-1,-1,-1,-1,-1,-1,-1],[2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1],[8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1],[9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1],[4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1],[3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1],[1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1],[4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1],[4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1],[9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1],[1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1],[5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1],[2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1],[9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1],[0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1],[2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1],[10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1],[4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1],[5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1],[5,4,8,5,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1],[9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1],[0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1],[1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1],[10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1],[8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1],[2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1],[7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1],[9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1],[2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1],[11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,-1],[9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1],[5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1],[11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1],[11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1],[1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1],[9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1],[5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1],[2,3,11,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1],[0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1],[5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1],[6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1],[0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1],[3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1],[6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1],[5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1],[1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1],[10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1],[6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,-1,-1,-1],[1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1],[8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1],[7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1],[3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1],[5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1],[0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1],[9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1],[8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1],[5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1],[0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1],[6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1],[10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1],[10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1],[8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1],[1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1],[3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1],[0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1],[10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1],[0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1],[3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1],[6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1],[9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1],[8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1],[3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1],[6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1],[0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1],[10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1],[10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1],[1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1],[2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1],[7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1],[7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1],[2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1],[1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1],[11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1],[8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1],[0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1],[7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1],[10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1],[2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1],[6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1],[7,2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1],[2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1],[1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1],[10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1],[10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1],[0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1],[7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1],[6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1],[8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1],[9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1],[6,8,4,6,11,8,2,10,1,-1,-1,-1,-1,-1,-1,-1],[1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1],[4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1],[10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1],[8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1],[0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1],[1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1],[8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1],[10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1],[4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1],[10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[0,8,3,4,9,5,11,7,6,-1,-1,-1,-1,-1,-1,-1],[5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1],[11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1],[9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1],[6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1],[7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1],[3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1],[7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1],[9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1],[3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1],[6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1],[9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1],[1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1],[4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,-1],[7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1],[6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1],[3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1],[0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1],[6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1],[1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1],[0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1],[11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1],[6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1],[5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1],[9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1],[1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1],[1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1],[10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1],[0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1],[5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1],[10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1],[11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1],[0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1],[9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1],[7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1],[2,5,10,2,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1],[8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1],[9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1],[9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1],[1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1],[9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1],[9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1],[5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1],[0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1],[10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1],[2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1],[0,4,11,0,11,3,4,5,11,2,11,1,5,1,11,-1],[0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1],[9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1],[5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1],[3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1],[5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1],[8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1],[0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1],[9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1],[0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1],[1,10,11,1,11,4,1,4,0,7,4,11,-1,-1,-1,-1],[3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1],[4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1],[9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1],[11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1],[11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1],[2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1],[9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1],[3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1],[1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1],[4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1],[4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[4,8,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1],[0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1],[3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1],[3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1],[0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1],[9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1],[1,10,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]];function marchingCubes(t,i,s){let o=0;if(i[0]<s&&(o|=1),i[1]<s&&(o|=2),i[2]<s&&(o|=4),i[3]<s&&(o|=8),i[4]<s&&(o|=16),i[5]<s&&(o|=32),i[6]<s&&(o|=64),i[7]<s&&(o|=128),0==e[o])return[];let n=[];1&e[o]&&(n[0]=lerp(s,t[0],t[1],i[0],i[1])),2&e[o]&&(n[1]=lerp(s,t[1],t[2],i[1],i[2])),4&e[o]&&(n[2]=lerp(s,t[2],t[3],i[2],i[3])),8&e[o]&&(n[3]=lerp(s,t[3],t[0],i[3],i[0])),16&e[o]&&(n[4]=lerp(s,t[4],t[5],i[4],i[5])),32&e[o]&&(n[5]=lerp(s,t[5],t[6],i[5],i[6])),64&e[o]&&(n[6]=lerp(s,t[6],t[7],i[6],i[7])),128&e[o]&&(n[7]=lerp(s,t[7],t[4],i[7],i[4])),256&e[o]&&(n[8]=lerp(s,t[0],t[4],i[0],i[4])),512&e[o]&&(n[9]=lerp(s,t[1],t[5],i[1],i[5])),1024&e[o]&&(n[10]=lerp(s,t[2],t[6],i[2],i[6])),2048&e[o]&&(n[11]=lerp(s,t[3],t[7],i[3],i[7]));let a=[],h=r[o];for(let t=0;-1!=h[t];t++)a.push(n[h[t]]);return a}function lerp(t,e,r,i,s){return Vector3_Vector3.fromLerpWeights(e,r,i,s,t)}class Perlin{constructor(){this.permutation=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],this.repeat=0,this.repeat=0,this.p=new Array(512);for(let t=0;t<512;t++)this.p[t]=this.permutation[t%256]}static new(){return new Perlin}grad(t,e,r,i){switch(15&t){case 0:return e+r;case 1:return-e+r;case 2:return e-r;case 3:return-e-r;case 4:return e+i;case 5:return-e+i;case 6:return e-i;case 7:return-e-i;case 8:return r+i;case 9:return-r+i;case 10:return r-i;case 11:return-r-i;case 12:return r+e;case 13:return-r+i;case 14:return r-e;case 15:return-r-i;default:return 0}}inc(t){return t++,this.repeat>0&&(t%=this.repeat),t}noise(t,e,r){this.repeat>0&&(t%=this.repeat,e%=this.repeat,r%=this.repeat);let i,s,o,n,a=255&Math.floor(t),h=255&Math.floor(e),l=255&Math.floor(r),d=t-Math.floor(t),c=e-Math.floor(e),u=r-Math.floor(r),m=this.p,f=m[m[m[a]+h]+l],g=m[m[m[a]+this.inc(h)]+l],p=m[m[m[a]+h]+this.inc(l)],w=m[m[m[a]+this.inc(h)]+this.inc(l)],x=m[m[m[this.inc(a)]+h]+l],_=m[m[m[this.inc(a)]+this.inc(h)]+l],M=m[m[m[this.inc(a)]+h]+this.inc(l)],v=m[m[m[this.inc(a)]+this.inc(h)]+this.inc(l)],V=GeonMath.smooth(d),y=GeonMath.smooth(c),b=GeonMath.smooth(u);return i=GeonMath.lerp(this.grad(f,d,c,u),this.grad(x,d-1,c,u),V),s=GeonMath.lerp(this.grad(g,d,c-1,u),this.grad(_,d-1,c-1,u),V),o=GeonMath.lerp(i,s,y),i=GeonMath.lerp(this.grad(p,d,c,u-1),this.grad(M,d-1,c,u-1),V),s=GeonMath.lerp(this.grad(w,d,c-1,u-1),this.grad(v,d-1,c-1,u-1),V),n=GeonMath.lerp(i,s,y),(GeonMath.lerp(o,n,b)+1)/2}}class App{constructor(t,e=""){this.gl=t,this.name=this.constructor.name,this.description=e}ui(t){}start(){}update(t){}draw(){}}class FpsCounter{constructor(){this.fps=0,this.updateEveryXTicks=100,this.elapsed=0,this.frames=0,this.frameTime=0}static new(){return new FpsCounter}_update(t){this.frames+=1,this.elapsed+=t,this.elapsed>this.updateEveryXTicks&&(this.setFps(),this.elapsed=0,this.frames=0)}update(t){this._update(t)}setFps(){this.fps=Math.round(this.frames/this.elapsed*1e3)}getFps(){return this.fps}}class Parameter{constructor(t,e,r=-1/0,i=1/0,s=.1){this.name=t,this.min=r,this.max=i,this.step=s,this.state=e,this.set(this.state)}static new(t,e,r=-1/0,i=1/0,s=.1){return new Parameter(t,e,r,i,s)}static newBoolean(t,e){return new Parameter(t,e?1:0,0,1,1)}get(){return this.state}getDomain(){return Domain_Domain.new(this.min,this.max)}set(t,e=!0){GeonMath.clamp(t,this.min,this.max);let r=t-this.min,i=Math.round(r/this.step),s=this.min+this.step*i;this.state=GeonMath.clamp(s,this.min,this.max),e&&this.onset()}getNPermutations(){return Math.min((this.max-this.min)/this.step+1)}setSlider(t){this.slider=t}setSliderAndText(t,e){this.slider=t,this.text=e}onset(){this.slider&&(this.slider.valueAsNumber=this.state),this.text&&(this.text.innerText=this.state.toString())}}class EnumParameter{constructor(t,e){this.p=t,this.values=e}static new(t,e,r){return new EnumParameter(new Parameter(t,e,0,r.length-1,1),r)}getName(){return this.values[this.get()]}get(){return this.p.get()}get state(){return this.p.state}get name(){return this.p.name}set(t){return this.p.set(t)}getNPermutations(){return this.p.getNPermutations()}setSlider(t){this.slider=t}setSliderAndText(t,e){this.slider=t,this.text=e}onset(){this.slider&&(this.slider.valueAsNumber=this.get()),this.text&&(this.text.innerText=this.getName())}}class UI{constructor(t){this.globalContext=t,this.currentContext=t}static new(t){return new UI(t)}toggleVisibility(){this.globalContext.hidden?this.show():this.hide()}clear(){let t=this.currentContext;for(;t.hasChildNodes();)t.removeChild(t.lastChild)}hide(){this.globalContext.hidden=!0}show(){this.globalContext.hidden=!1}addContext(t){this.currentContext=this.globalContext;let e=this.addDiv(t+" app-interface");this.currentContext=e}setContext(t){let e=this.globalContext.querySelector("."+t);this.currentContext=e}removeContext(t){this.setContext(t);for(let t=this.currentContext.childElementCount-1;t>=0;t-=1)this.currentContext.removeChild(this.currentContext.children.item(t));let e=this.currentContext;this.currentContext=this.globalContext,this.currentContext.removeChild(e)}addElement(t,e=""){let r=document.createElement(t);return r.className=e,this.currentContext.appendChild(r),r}addDiv(t,e=[]){let r=this.addElement("div",t);return e.forEach((t=>{r.appendChild(t)})),r}addBooleanParameter(t,e=(()=>{})){let r=this.addElement("input","checkbox");r.type="checkbox",r.addEventListener("change",(()=>{let i=r.checked;t.set(i?1:0),e(r.valueAsNumber),o.innerText=t.name})),r.checked=1==t.get();let i=this.addElement("label","check-container"),s=this.addElement("span","checkmark");i.appendChild(r),i.appendChild(s);let o=this.addElement("p","control-text");return o.innerText=t.name,this.addDiv("control",[o,i]),r}add3DParameter(t,e,r,i,s){Vector3_Vector3.zero();this.addParameter(new Parameter(t+"-x",i.x,e.x.t0,e.x.t1,r),(t=>{i.x=t,s&&s()})),this.addParameter(new Parameter(t+"-y",i.y,e.y.t0,e.y.t1,r),(t=>{i.y=t,s&&s()})),this.addParameter(new Parameter(t+"-z",i.z,e.z.t0,e.z.t1,r),(t=>{i.z=t,s&&s()}))}addParameter(t,e=(()=>{})){let r;r=t instanceof EnumParameter?t.p:t;let i=this.addRangeInput(r,e),s=this.addElement("p","control-text");s.innerText=r.name;let o=this.addElement("p","control-value");return o.innerText=t instanceof EnumParameter?t.getName():i.value,this.addDiv("control",[s,i,o]),t.setSliderAndText(i,o),i.oninput=()=>{r.set(i.valueAsNumber,!1),e(i.valueAsNumber),o.innerText=t instanceof EnumParameter?t.getName():i.value},i}addColorParameter(t,e,r=(()=>{})){console.log("default",e);let i=this.addElement("input","colorpicker");i.type="color",i.value=e,i.addEventListener("change",(()=>{i.checked;r(i.value)}));let s=this.addElement("p","control-text");return s.innerText=t,this.addDiv("control",[s,i]),i}addRangeInput(t,e=(()=>{})){let r=this.addElement("input","control-slider");return r.type="range",r.min=t.min.toString(),r.max=t.max.toString(),r.valueAsNumber=t.state,r.step=t.step.toString(),r}addText(t){this.addElement("p","ui-text").innerText=t}addButton(t,e){let r=this.addElement("button","control-button");r.innerText=t,r.addEventListener("click",e);let i=this.addElement("p","control-text");return this.addDiv("control",[i,r])}addDropdown(t,e){let r=t.values.length,i=this.addElement("select","enum-selector dropdown-select");for(let e=0;e<r;e++){let r=this.addElement("option","enum-item");r.innerText=t.values[e],i.appendChild(r)}return i.addEventListener("change",(r=>{let i=r.target.selectedIndex;t.set(i),e(i)})),this.addDiv("dropdown-dark",[i]),i}}class Core{constructor(t,e,r){this.fullscreen=!0,this.fpsInTitle=!0,this.canvas=t,this.gl=e,this.input=InputHandler.fromCanvas(t),this.fpsCounter=new FpsCounter,this.ui=new UI(r),this.apps=new Map,this.gl.clearColor(0,0,0,0)}addApp(t){this.apps.set(t.name,t),this.activateApp(t)}removeApp(t){this.ui.removeContext(t),this.apps.delete(t)}activateApp(t){this.ui.addContext(t.name),this.ui.addText(t.description),t.ui(this.ui),t.start()}update(t){this.input.update(),this.fpsCounter.update(this.input.time.tick),this.apps.forEach((t=>{t.update(this.input)})),this.input.postUpdate()}draw(t=!0){const e=this.canvas,r=this.gl;this.fullscreen&&(window.innerHeight==e.height&&window.innerWidth==e.width||(e.height=window.innerHeight,e.style.height=window.innerHeight.toString(),e.width=window.innerWidth,e.style.width=window.innerWidth.toString(),r.viewport(0,0,window.innerWidth,window.innerHeight))),t&&p.clear(r),this.apps.forEach((t=>{t.draw()}))}}class SwapApp extends App{constructor(t,e,r){super(t),this.currentAppIndex=-1,this.isuihidden=!1,this.core=e,this.possibleApps=r}getAppNames(){let t=[],e=this.possibleApps.length;for(let r=0;r<e;r++)t.push(this.possibleApps[r].name.replace("App",""));return t}ui(t){let e=this.getAppNames();this.param=EnumParameter.new("apps",0,e),t.addDropdown(this.param,(t=>{this.swap(t)}))}swapFromUrl(t,e){let r=t.substr(1),i=this.getAppNames();for(let t=0;t<i.length;t++)if(i[t].toLowerCase()===r)return void this.swap(t);console.log("no hash match, defaulting..."),this.swap(e)}swap(t){let e=this.possibleApps[t];if(this.currentAppIndex>-1){let t=this.possibleApps[this.currentAppIndex];console.log("removing",t.name),this.core.removeApp(t.name)}console.log("constructing",e.name),this.currentAppIndex=t;let r=new e(this.gl);location.hash="#"+e.name.replace("App","").toLowerCase(),this.core.addApp(r)}update(t){var e;(null===(e=t.keys)||void 0===e?void 0:e.isPressed(m.M))&&this.core.ui.toggleVisibility()}}class IntCube{constructor(t,e,r,i=[]){this._width=e,this._height=t,this._depth=r;let s=this._width*this._height*this._depth;this.data=new Int32Array(s),i==[]||0==i.length||this.setData(i)}static new(t,e,r,i=[]){return new IntCube(t,e,r,i)}size(){return this._width*this._height*this._depth}clone(){let t=new IntCube(this._height,this._width,this._depth);return t.data=this.data,t}setData(t){if(t.length!=this.size())throw"data.length does not match width * height "+t.length.toString();this.data.set(t)}fill(t){let e=this.size();for(let r=0;r<e;r++)this.data[r]=t}inRange(t,e,r){return!(t<0||e<0||r<0||t>this._width-1||e>this._height-1||r>this._depth-1)}isOnEdge(t,e,r,i=1){return t<i||e<i||r<i||t>this._width-1-i||e>this._height-1-i||r>this._depth-1-i}getIndex(t,e,r){return t*(this._height*this._depth)+e*this._depth+r}getCoord(t){let e=Math.floor(t/(this._height*this._depth))%this._width,r=Math.floor(t/this._depth)%this._height,i=t%this._depth;return new Vector3_Vector3(e,r,i)}get(t,e,r){return this.data[this.getIndex(t,e,r)]}tryGet(t,e,r,i){return this.inRange(t,e,r)?this.data[this.getIndex(t,e,r)]:i}set(t,e,r,i){this.data[this.getIndex(t,e,r)]=i}trySet(t,e,r,i){this.inRange(t,e,r)&&(this.data[this.getIndex(t,e,r)]=i)}iter(t){for(let e=0;e<this.data.length;e++)t(this.data[e],e)}map(t){for(let e=0;e<this.data.length;e++)this.data[e]=t(this.data[e],e)}trueForAll(t){for(let e=0;e<this.data.length;e++)if(!t(this.data[e],e))return!1;return!0}}class IntMatrix_IntMatrix{constructor(t,e,r){this._height=t,this._width=e,this.data=new Uint16Array(this._width*this._height),r&&this.setData(r)}static new(t,e,r){return new IntMatrix_IntMatrix(t,e,r)}static fromList(t,e){let r=t.length/e,i=new IntMatrix_IntMatrix(r,e);for(let e=0;e<t.length;e++)i.data[e]=t[e];return i}print(){let t=[];for(var e=0;e<this._height;e++){t.push("|");for(var r=0;r<this._width;r++){let i=this.get(e,r).toFixed(2);i=i.padStart(8," "),t.push(i),r<this._width-2&&t.push("  ")}t.push("  |\n")}console.log(t.join(""))}clone(){let t=new IntMatrix_IntMatrix(this._height,this._width);return t.data=this.data,t}setData(t){this.data.set(t)}count(){return this._height}getDimensions(){return[this._height,this._width]}inRange(t,e){return!(t<0||t>this._height-1||e<0||e>this._width-1)}fill(t){let e=this._height*this._width;for(let r=0;r<e;r++)this.data[r]=t}fillWith(t,e=this._width){let r=e;if(r>this._width)throw"values per entry is larger than this._width. This will spill over.";for(let e=0;e<this._height;e++)for(let i=0;i<r;i++)this.set(e,i,t[e*r+i])}get(t,e){return this.inRange(t,e)?this.data[t*this._width+e]:(console.warn("out of range!"),0)}getRow(t){let e=new Uint16Array(this._width);for(let r=0;r<this._width;r++)e[r]=this.get(t,r);return e}getColumn(t){let e=new Uint16Array(this._height);for(let r=0;r<this._height;r++){let i=r*this._width+t;e[r]=this.data[i]}return e}set(t,e,r){this.inRange(t,e)?this.data[t*this._width+e]=r:console.warn("out of range!")}setRow(t,e){for(let r=0;r<this._width;r++)this.set(t,r,e[r])}takeRows(t){console.log(this._height,this._width);const e=t.length;let r=new IntMatrix_IntMatrix(e,this._width);for(let i=0;i<e;i++){let e=t[i];r.setRow(i,this.getRow(e))}return r}getData(){return this.data}forEachValue(t){for(let e=0;e<this.data.length;e++)this.data[e]=t(this.data[e],e);return this}forEachRow(t){for(let e=0;e<this._height;e++){let r=this.getRow(e);t(r,e),this.setRow(e,r)}return this}trueForAll(t){for(let e=0;e<this.data.length;e++)if(!t(this.data[e],e))return!1;return!0}}function ToFloatMatrix(t){return t instanceof FloatMatrix_FloatMatrix?t:t instanceof MultiVector2_MultiVector2?t.toMatrixSlice():t instanceof MultiVector3_MultiVector3?t.slice():t[0]instanceof Vector2_Vector2?MultiVector2_MultiVector2.fromList(t).toMatrixSlice():MultiVector3_MultiVector3.fromList(t).slice()}class ShaderMesh_ShaderMesh{constructor(t,e,r,i,s){this._normKind=a.None,this.color=[1,1,1,1],this.linecolor=[1,1,1,1];this.mesh=Mesh_Mesh.newEmpty(t,i,3),this.norms=MultiVector3_MultiVector3.new(e),this.uvs=MultiVector2_MultiVector2.new(r),this.ambi=new Float32Array(t),this.texture=s,this.position=Matrix4_Matrix4.newIdentity()}set norms(t){this.mesh.setNormals(t)}set uvs(t){this.mesh.setUvs(t,this._normKind)}get norms(){return this.mesh.normals}get uvs(){return this.mesh.uvs}static new(t,e,r,i,s){return new ShaderMesh_ShaderMesh(t,e,r,i,s)}static fromRectDoubleSided(t,e){let r=t.getCorners(),i=[];i.push(0,1,3,0,3,2,0,3,1,0,2,3);let s=new ShaderMesh_ShaderMesh(4,0,0,4,e);return s.setUvs(new Float32Array([0,0,0,1,1,0,1,1,0,0,1,0,0,1,1,1])),s.mesh.verts.fillFromList(r),s.mesh.links.setData(i),s}static fromRect(t,e){let r=t.getCorners(),i=[];i.push(...quadToTri([0,1,3,2]));let s=new ShaderMesh_ShaderMesh(4,0,0,2);return s.setUvs(new Float32Array([0,0,0,1,1,0,1,1])),s.mesh.verts.fillFromList(r),s.mesh.links.setData(i),s}static fromImage(t,e,r=!0,i=1,s=!0,o=!0){let n;n=r?Domain_Domain2.fromWH(-t.width/2*i,-t.height/2*i,t.width*i,t.height*i):Domain_Domain2.fromWH(0,0,t.width*i,t.height*i);let a,h=new Rectangle3(e,n);if(a=o?ShaderMesh_ShaderMesh.fromRectDoubleSided(h):ShaderMesh_ShaderMesh.fromRect(h),s){let e=p.getNearestCorrectTextureSize(t.width),r=p.getNearestCorrectTextureSize(t.height);if(e!==t.width||r!==t.height){t.width,t.height;t=t.buffer(e,r)}}return a.setTexture(t.toImageData()),a}static fromMesh(t){let e=new ShaderMesh_ShaderMesh(t.verts.count,0,0,t.maxSize);return e.mesh=t,e}static fromData(t,e,r,i){let s=new ShaderMesh_ShaderMesh(t.length/3,e.length/3,r.length/2,i.length/3);return s.mesh.verts.slice().fillWith(t),s.mesh.links.fillWith(i),s.norms.slice().fillWith(e),s.uvs=MultiVector2_MultiVector2.fromData(r),s}static fromGraph(t){let e=t.toMesh(),r=ShaderMesh_ShaderMesh.fromMesh(e);return r.norms=MultiVector3_MultiVector3.fromList(t.allNorms()),r._normKind=a.Vertex,r}transform(t){for(let e=0;e<this.mesh.verts.count;e++){let r=this.mesh.verts.get(e),i=this.norms.get(e);this.mesh.verts.set(e,t.multiplyVector(r)),this.norms.set(e,t.multiplyVector(i))}}getAdjacentFaces(t){let e=[],r=this.mesh.links.count();for(let i=0;i<r;i++)this.mesh.links.getRow(i).find((e=>e==t))&&e.push(i);return e}getFaceVertices(t){return this.mesh.getVerticesOfFace(t)}getType(){return this.mesh.getType()}getNormalType(){return this._normKind}setTexture(t){this.texture=t}setUvs(t){t instanceof Float32Array?this.uvs=MultiVector2_MultiVector2.fromData(t):this.uvs=t}exportToObj(t){throw"todo"}calculateFaceNormals(){if(this.getType()!=n.Triangles)return console.error("can only calculate normals from triangular meshes"),void(this.norms=MultiVector3_MultiVector3.new(0));let t=this.mesh.OLDcalculateFaceNormals();this.norms=MultiVector3_MultiVector3.fromList(t),this._normKind=a.Face}calculateVertexNormals(){let t=this.mesh.OLDcalculateVertexNormals();this.norms=MultiVector3_MultiVector3.fromList(t),this._normKind=a.Vertex}calculateMultiVertexNormals(){this._normKind=a.MultiVertex,this.calculateFaceNormals();let t=this.mesh.verts.map(((t,e)=>{let r=this.getAdjacentFaces(e);return this.norms.take(r).average()}));this.norms=t}}function ProcessObjFaceVertex(t){let e=[],r=t.split("/");if(1==r.length)e.push(parseInt(r[0])-1);else{if(3!=r.length)throw"invalid face found when processing";e.push(parseInt(r[0])-1)}return e}function ProcessObjFace(t){let e=[];if(4==t.length){let r=ProcessObjFaceVertex(t[0]),i=ProcessObjFaceVertex(t[1]),s=ProcessObjFaceVertex(t[2]),o=ProcessObjFaceVertex(t[3]);e.push(...r,...i,...s,...r,...s,...o)}else if(3==t.length){let r=ProcessObjFaceVertex(t[0]),i=ProcessObjFaceVertex(t[1]),s=ProcessObjFaceVertex(t[2]);e.push(...r,...i,...s)}return e}var i;!function(t){function getHistogram(t,e=0){let r=new Array(256);for(let t=0;t<256;t++)r[t]=0;let i=t.width*t.height;for(let s=0;s<i;s++){let i=t.getWithIndex(s)[e];r[i]=r[i]+1}return r}function getCFG(t,e){let r=new Array(t.length),i=0;for(let s=0;s<t.length;s++){i+=t[s],r[s]=i/e}return r}t.imagedataFromTrueGreyscale=function imagedataFromTrueGreyscale(t){let e=new Uint8ClampedArray(t.width*t.height*4);for(let r=0;r<t.width;r++)for(let i=0;i<t.height;i++){let s=t.get(i,r)[0];0==r&&0==i&&console.log(t.get(100,100)),e[4*(r*t.width+i)]=s,e[4*(r*t.width+i)+1]=s,e[4*(r*t.width+i)+2]=s,e[4*(r*t.width+i)+3]=255}return new ImageData(e,t.width,t.height)},t.fakeGreyscale=function fakeGreyscale(t){if(4!=t.pixelSize)throw"please, only use this when pixelsize is 4";let e=new Bitmap_Bitmap(t.width,t.height,4);for(let r=0;r<t.height;r++)for(let i=0;i<t.width;i++){let s=t.get(i,r),o=(s[0]+s[1]+s[2])/3;e.set(i,r,[o,o,o,255])}return e},t.trueGreyscale=function trueGreyscale(t){let e=new Bitmap_Bitmap(t.width,t.height,1);for(let t=0;t<e.height;t++)for(let r=0;r<e.width;r++)e.data[1*(t*e.width+r)]=0;return e},t.sobelMD=function sobelMD(t){let e=Kernels.SobelLeft,r=Kernels.SobelUp,i=e.count()/2-.5,s=t.width-2*i,o=t.height-2*i,n=new Bitmap_Bitmap(s,o,t.pixelSize),a=new Bitmap_Bitmap(s,o,t.pixelSize);for(let s=i;s<t.width-i;s++)for(let o=i;o<t.height-i;o++){let h=t.getWithKernel(s,o,e,i),l=t.getWithKernel(s,o,r,i),d=h[0],c=l[0],u=Math.pow(d*d+c*c,.5),m=s-i,f=o-i;a.set(m,f,[(d+255)/2,(c+255)/2,255,255]),n.set(m,f,[u,u,u,255])}return[n,a]},t.thetaMap=function thetaMap(t){return t.forEachPixel(((t,e,r)=>{let i=Math.atan2(t[1]-128,t[0]-128);return i=(i+Math.PI)/(2*Math.PI),i*=255,[i,i,i,255]}))},t.clampGreyscale=function clampGreyscale(t,e){return t.forEachGreyscalePixel((t=>Math.round(t/255*e)%e))},t.canny=function canny(e,r=1.4,i=3,s=100,o=200,n=!0,a=!1,h){let l=e.toGreyscale();n&&(l=t.equalizeHistogram(l));let d=Kernels.generateGaussianKernel(r,i),c=l.applyKernel(d),[u,m]=t.sobelMD(c),f=t.thetaMap(m),g=t.cannyNonMaximumSuppression(u,f);a&&([s,o]=t.cannyDynamicthreshold(g,s/255,o/255));let p=t.cannyThreshold(g,s,o,128,255),w=t.cannyHysteresis(p,128,255);if(!h)return w;let x=0,addToDR=(t,e)=>{let r=Plane_Plane.WorldYZ().moveTo(Vector3_Vector3.new(-x,0,0));null==h||h.set(ImageMesh.new(t,r,1,!1,!0),e),x+=10};return a&&console.log("dynamic threshold used: ",{lower:s,upper:o}),addToDR(e,"original"),addToDR(l,"grey"),addToDR(c,"blurred"),addToDR(u,"sobel magnitude"),addToDR(m,"sobel direction"),addToDR(g,"supressed"),addToDR(p,"threshold"),addToDR(w,"hysteresis"),w},t.cannyDynamicthreshold=function cannyDynamicthreshold(e,r,i){let s=t.getHistogram(e),o=e.width*e.height-s[0];s.splice(0,1);let n=t.getCFG(s,o),getValueAtPercentile=(t,e)=>{for(let r=0;r<256;r++)if(t[r]>e)return r};return[getValueAtPercentile(n,r),getValueAtPercentile(n,i)]},t.cannyNonMaximumSuppression=function cannyNonMaximumSuppression(t,e){let magGet=(e,r)=>t.get(e,r)[0],r=new Bitmap_Bitmap(t.width-2,t.height-2,t.pixelSize);for(let i=1;i<t.width-1;i++)for(let s=1;s<t.height-1;s++){const t=magGet(i,s),o=e.get(i,s)[0]%128;let n=t;o>=16&&o<48?(magGet(i+1,s+1)>t||magGet(i-1,s-1)>t)&&(n=0):o>=48&&o<80?(magGet(i,s-1)>t||magGet(i,s+1)>t)&&(n=0):o>=80&&o<112?(magGet(i+1,s-1)>t||magGet(i-1,s+1)>t)&&(n=0):(magGet(i-1,s)>t||magGet(i+1,s)>t)&&(n=0),r.set(i,s,[n,n,n,255])}return r},t.cannyThreshold=function cannyThreshold(t,e,r,i,s){return t.forEachGreyscalePixel((t=>t<e?0:t>=e&&t<r?i:s))},t.cannyHysteresis=function cannyHysteresis(t,e,r){let i=Bitmap_Bitmap.new(t.width,t.height).fill([0,0,0,255]),condition=r=>t.getWithIndex(r)[0]==e,action=t=>{i.setWithIndex(t,[r,r,r,255])},s=t.width*t.height;for(let e=0;e<s;e++){if(t.getWithIndex(e)[0]!=r)continue;let i=t.indexToVec(e);t.bucketFillCustom(i,condition,action,t.getNbIndices8.bind(t))}return i},t.bucketFill=function bucketFill(t,e,r,i=!1){return t.clone(),t.bucketFill(e,r,i),t},t.equalizeHistogram=function equalizeHistogram(t,e=0){let r=getHistogram(t),i=t.width*t.height,s=getCFG(r,i),o=new Bitmap_Bitmap(t.width,t.height);for(let r=0;r<i;r++){let i=255*s[t.getWithIndex(r)[e]];o.setWithIndex(r,[i,i,i,255])}return o},t.getHistogram=getHistogram,t.getCFG=getCFG}(i||(i={}));class Bitmap_Bitmap{constructor(t,e,r=4,i){this.width=t,this.height=e,this.depth=r,this.pixelCount=t*e,this.data=i||new Uint8ClampedArray(this.width*this.height*this.depth)}get pixelSize(){return this.depth}get fullSize(){return this.data.length}static new(t,e,r=4){return new Bitmap_Bitmap(t,e,r)}static fromImageData(t){let e=new Bitmap_Bitmap(t.width,t.height);return e.setData(t.data),e}toImageData(){if(1==this.pixelSize)return console.log("conferting to rgba..."),i.imagedataFromTrueGreyscale(this);if(4!=this.pixelSize)throw"pixelsize must be 4 for toImageData to work";return new ImageData(this.data,this.width,this.height)}setData(t){if(t.length!=this.height*this.width*this.pixelSize)throw"data.length does not match width * height ";this.data=t}clone(){let t=new Bitmap_Bitmap(this.width,this.height,this.pixelSize);return t.setData(this.data),t}fillWithColors(t){for(let e=0;e<this.pixelCount;e++)this.setWithIndex(e,t[e])}fill(t){for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++)this.set(r,e,t);return this}fillEvery(t){for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++)this.set(r,e,t());return this}forEach(t){for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++)this.set(r,e,t(r,e))}forEachPixel(t){let e=new Bitmap_Bitmap(this.width,this.height,this.pixelSize);for(let r=0;r<this.width;r++)for(let i=0;i<this.height;i++){let s=this.get(r,i);s=t(s,r,i),e.set(r,i,s)}return e}forEachGreyscalePixel(t){let e=new Bitmap_Bitmap(this.width,this.height,this.pixelSize);for(let r=0;r<this.width;r++)for(let i=0;i<this.height;i++){let s=this.get(r,i)[0];s=t(s,r,i),e.set(r,i,[s,s,s,255])}return e}includes(t,e){return t<this.width&&t>=0&&e<this.height&&e>=0}set(t,e,r){this.data[4*(e*this.width+t)]=r[0],this.data[4*(e*this.width+t)+1]=r[1],this.data[4*(e*this.width+t)+2]=r[2],this.data[4*(e*this.width+t)+3]=r[3]}get(t,e){return[this.data[4*(e*this.width+t)],this.data[4*(e*this.width+t)+1],this.data[4*(e*this.width+t)+2],this.data[4*(e*this.width+t)+3]]}getWithIndex(t){return[this.data[4*t],this.data[4*t+1],this.data[4*t+2],this.data[4*t+3]]}setWithIndex(t,e){this.data[4*t]=e[0],this.data[4*t+1]=e[1],this.data[4*t+2]=e[2],this.data[4*t+3]=e[3]}vecToIndex(t,e){return e*this.width+t}indexToVec(t){let e=Math.floor(t/this.width),r=t-e*this.width;return Vector2_Vector2.new(r,e)}getNbIndices(t){let e=new Array;return t>=this.width*this.height||(t%this.width!=0&&e.push(t-1),(t+1)%this.width!=0&&e.push(t+1),t-this.width>0&&e.push(t-this.width),t+this.width<this.width*this.height&&e.push(t+this.width)),e}getNbIndices8(t){let e=new Array,r=this.width*this.height;if(t>=r)return e;let i=t%this.width!=0,s=(t+1)%this.width!=0,o=t-this.width>0,n=t+this.width<r;return i&&e.push(t-1),s&&e.push(t+1),o&&e.push(t-this.width),n&&e.push(t+this.width),o&&i&&e.push(t-this.width-1),o&&s&&e.push(t-this.width+1),n&&i&&e.push(t+this.width-1),n&&s&&e.push(t+this.width+1),e}flipHor(){let t=new Bitmap_Bitmap(this.width,this.height,this.pixelSize);for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++){let i=this.width-1-r;t.set(r,e,this.get(i,e))}return t}flipVer(){let t=new Bitmap_Bitmap(this.width,this.height,this.pixelSize);for(let e=0;e<this.height;e++){let r=this.height-1-e;for(let i=0;i<this.width;i++)t.set(i,e,this.get(i,r))}return t}rot90(){let t=new Bitmap_Bitmap(this.height,this.width,this.pixelSize);for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++){let i=this.width-1-e,s=r;t.set(i,s,this.get(r,e))}return t}rot180(){let t=new Bitmap_Bitmap(this.width,this.height,this.pixelSize);for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++){let i=this.width-1-r,s=this.height-1-e;t.set(i,s,this.get(r,e))}return t}rot270(){let t=new Bitmap_Bitmap(this.height,this.width,this.pixelSize);for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++){let i=e,s=this.width-1-r;t.set(i,s,this.get(r,e))}return t}applyKernel(t){let e=t.count()/2-.5,r=new Bitmap_Bitmap(this.width-2*e,this.height-2*e,this.pixelSize);for(let i=e;i<this.width-e;i++)for(let s=e;s<this.height-e;s++){let o=this.getWithKernel(i,s,t,e);r.set(i-e,s-e,o)}return r}getMinMax(){let t=1/0,e=0;for(let r=0;r<this.data.length;r++)this.data[r]<t?t=this.data[r]:this.data[r]>e&&(e=this.data[r]);return[t,e]}applyThreshold(t,e){return this.apply(((r,i)=>{let s=this.get(r,i);return s[0]<t?[0,0,0,0]:s[0]>e?[255,255,255,255]:s}))}apply(t){let e=new Bitmap_Bitmap(this.width,this.height,this.pixelSize);for(let r=0;r<this.height;r++)for(let i=0;i<this.width;i++)e.set(i,r,t(i,r));return e}getWithKernel(t,e,r,i){let s=[0,0,0,255],[o,n]=r.getDimensions();for(let a=0;a<o;a++)for(let o=0;o<n;o++){let n=r.get(a,o),h=this.get(t+a-i,e+o-i);for(let t=0;t<3;t++)s[t]+=h[t]*n}return s}setAplha(t){for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++){let i=this.get(r,e);this.set(r,e,[i[0],i[1],i[2],t])}return this}scale(t,e){return this.resize(Math.round(this.width*t),Math.round(this.height*e))}resize(t,e){const r=new Bitmap_Bitmap(t,e,this.pixelSize),i=this,s=1/r.width*i.width,o=1/r.height*i.height;for(let t=0;t<r.height;t++)for(let e=0;e<r.width;e++){let n=i.get(Math.round(e*s),Math.round(t*o));r.set(e,t,n)}return r}buffer(t,e){const r=new Bitmap_Bitmap(t,e,this.pixelSize),i=this;for(let s=0;s<e;s++)for(let e=0;e<t;e++)i.includes(e,s)&&r.set(e,s,i.get(e,s));return r}trimWithDomain(t){const e=Math.round(t.x.t0),r=Math.round(t.x.t1),i=Math.round(t.y.t0),s=Math.round(t.y.t1);return this.trim(e,i,r,s)}trim(t,e,r,i){const s=r-t,o=i-e,n=new Bitmap_Bitmap(s,o,this.pixelSize);for(let r=0;r<o;r++)for(let i=0;i<s;i++){let s=this.get(i+t,r+e);n.set(i,r,s)}return n}periodicTrim(t,e,r,i){const s=r-t,o=i-e,n=new Bitmap_Bitmap(s,o,this.pixelSize);for(let r=0;r<o;r++)for(let i=0;i<s;i++){let s=this.get((i+t)%this.width,(r+e)%this.height);n.set(i,r,s)}return n}toGreyscale(){if(4!=this.pixelSize)throw"please, only use this when pixelsize is 4";let t=new Bitmap_Bitmap(this.width,this.height,4);for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++){let i=this.get(r,e),s=(i[0]+i[1]+i[2])/3;t.set(r,e,[s,s,s,255])}return t}toRGBA(){return this}bucketFill(t,e,r=!1){let i,s=this.get(t.x,t.y),o=e.toInt();i=r?this.getNbIndices8.bind(this):this.getNbIndices.bind(this),this.bucketFillCustom(t,(t=>{let e=this.getWithIndex(t);return e[0]==s[0]&&e[1]==s[1]&&e[2]==s[2]&&e[3]==s[3]}),(t=>{this.setWithIndex(t,o)}),i)}bucketFillCustom(t,e,r,i){let s=new Set,o=new Array,n=this.vecToIndex(t.x,t.y);for(o.push(n),s.add(n);o.length>0;){let t=o.pop();r(t);for(let r of i(t))s.has(r)||(s.add(r),e(r)&&o.push(r))}}}var s,__awaiter=function(t,e,r,i){return new(r||(r=Promise))((function(s,o){function fulfilled(t){try{step(i.next(t))}catch(t){o(t)}}function rejected(t){try{step(i.throw(t))}catch(t){o(t)}}function step(t){t.done?s(t.value):function adopt(t){return t instanceof r?t:new r((function(e){e(t)}))}(t.value).then(fulfilled,rejected)}step((i=i.apply(t,e||[])).next())}))};!function(t){function getBlob(t){return __awaiter(this,void 0,void 0,(function*(){let e=yield fetch(t);return e.ok?yield e.blob():new Blob}))}t.postJson=function postJson(t,e){return __awaiter(this,void 0,void 0,(function*(){return yield fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})}))},t.getJson=function getJson(t,e={}){return __awaiter(this,void 0,void 0,(function*(){let r=yield fetch(t,{headers:e});return r.ok?yield r.json():{}}))},t.getText=function getText(t){return __awaiter(this,void 0,void 0,(function*(){let e=yield fetch(t);return e.ok?yield e.text():""}))},t.getBlob=getBlob,t.getImage=function getImage(t){return __awaiter(this,void 0,void 0,(function*(){return function loadImageFromBlob(t){return new Promise(((e,r)=>{let i=new FileReader;i.readAsDataURL(t),i.onload=()=>function loadImageHelper1(t){return new Promise((function(e,r){let i=document.createElement("img");i.src=t.result,i.crossOrigin="Anonymous",i.onload=()=>e(function loadImageHelper2(t){var e;let r=document.createElement("canvas");r.width=t.width,r.height=t.height;let i=r.getContext("2d");i.drawImage(t,0,0);let s=i.getImageData(0,0,t.width,t.height);return null===(e=r.parentNode)||void 0===e||e.removeChild(r),s}(i)),i.onerror=()=>r(new Error(`Script load error for ${i}`))}))}(i).then((t=>e(t)),(t=>r(t)))}))}(yield getBlob(t)).catch((t=>new ImageData(0,0)))}))}}(s||(s={}));var o,n,a;function addDropFileEventListeners(t,e){console.log("setting up drag events..."),t.addEventListener("dragenter",(function(t){return t.preventDefault(),console.log("entering entering..."),!0}),!0),t.addEventListener("dragover",(function(t){return t.preventDefault(),console.log("over drag...."),!0}),!0),t.addEventListener("dragleave",(function(t){return t.preventDefault(),console.log("leaving drag...."),!0}),!0),t.addEventListener("drop",(function(t){t.stopPropagation(),t.preventDefault();var r=t.dataTransfer.files;return e(r),!0}),!0)}function loadImageFromSrc(t){return new Promise((function(e,r){let i=document.createElement("img");i.crossOrigin="Anonymous",i.src=t,i.onload=()=>e(loadImageHelper2(i)),i.onerror=()=>r(new Error(`Script load error for ${i}`))}))}function loadImageHelper1(t){return new Promise((function(e,r){let i=document.createElement("img");i.src=t.result,i.crossOrigin="Anonymous",i.onload=()=>e(loadImageHelper2(i)),i.onerror=()=>r(new Error(`Script load error for ${i}`))}))}function loadImageHelper2(t){var e;let r=document.createElement("canvas");r.width=t.width,r.height=t.height;let i=r.getContext("2d");i.drawImage(t,0,0);let s=i.getImageData(0,0,t.width,t.height);return null===(e=r.parentNode)||void 0===e||e.removeChild(r),s}!function(t){function lsa(t,e){let r=FloatMatrix_FloatMatrix.mulBtoA,i=t.tp(),s=r(t,i).inv(),o=r(e,i);return r(o,s).getColumn(0)}t.lsa=lsa,t.circle2=function circle2(t){let e=t.count,r=FloatMatrix_FloatMatrix.zeros(3,e),i=FloatMatrix_FloatMatrix.zeros(1,e);for(let s=0;s<e;s++){let[e,o]=t.matrix.getRow(s);r.setRow(s,[-2*e,-2*o,1]),i.setRow(s,[-(e*e+o*o)])}let s=lsa(r,i),o=s[0],n=s[1];return[o,n,Math.sqrt(o*o+n*n-s[2])]},t.circle2Progressive=function circle2Progressive(t,e,r=1e3){let getIdWithLargestError=(t,e)=>{let r=0,i=-1;for(let s=0;s<e.count;s++){let o=e.get(s),n=Math.abs(t.distance(o));n>r&&(r=n,i=s)}return[r,i]},i=[],s=t.clone();for(let t=0;t<r;t++){if(console.log(t),s.count<2)return void console.error("PROGRESSIVE-LSA FAILED DUE TO LESS THAN TWO POINTS (REMAIN WITHIN ERROR RANGE).");let r=Circle2.fromLSA(s),[o,n]=getIdWithLargestError(r,s);if(console.log(o,r.distance(s.get(n)),e),!(o>e))return{circle:r,included:s,excluded:MultiVector2_MultiVector2.fromList(i)};i.push(s.get(n)),s=s.remove([n])}console.error("PROGRESSIVE-LSA FAILED DUE TO TOO MANY ITERATIONS")},t.matrix=function matrix(t,e){if(t.count!=e.count)throw"matrices need to be of equal width & height";let r=t.count,i=new FloatMatrix_FloatMatrix(16,3*r);for(let s=0;s<r;s++){let r=[...t.slice().getRow(s),1],o=[...e.slice().getRow(s),1];for(let t=0;t<3;t++){let e=3*s+t,n=4*t;for(let t=0;t<r.length;t++)i.set(e,t+n,r[t]);n=12;for(let s=0;s<r.length;s++){let a=i.get(e,s+n);i.set(e,s+n,a+-1*o[t]*r[s])}}}let[s,o,n]=f.svd(i),a=n.getColumn(n.width-1),h=1/a[15];for(let t=0;t<a.length;t++)a[t]=Math.round(a[t]*h*1e5)/1e5;return Matrix4_Matrix4.new([...a]).transpose()}}(o||(o={}));class Circle2{constructor(t,e){this.center=t,this.radius=e}static new(t=Vector2_Vector2.new(),e=1){return new Circle2(t,e)}static fromLSA(t){let[e,r,i]=o.circle2(t);return Circle2.new(Vector2_Vector2.new(e,r),i)}static centersFromPPR(t,e,r){let i=e.clone().sub(t),s=i.length(),o=t.clone().add(e).scale(.5),n=Math.pow(r,2)-Math.pow(s/2,2);if(n<-Const_Const.TOLERANCE)return[];if(n<Const_Const.TOLERANCE)return[o];{let t=Math.pow(n,.5),e=new Vector2_Vector2(i.y,-i.x).normalize();return[o.clone().add(e.clone().scale(t)),o.clone().add(e.clone().scale(-t))]}}distance(t){return this.center.disTo(t)-this.radius}}class MultiLine{constructor(t,e){this.verts=ToFloatMatrix(t),this.links=null==e?getDefaultIndices(this.verts.height):e}static fromLines(t){let e=ToFloatMatrix(t);return new MultiLine(e)}static fromMesh(t,e=!1){let r=t.mesh,i=6*r.links.count(),s=new Uint16Array(i);for(let t=0;t<r.links.count();t++){let e=6*t;s[e]=r.links.get(t,0),s[e+1]=r.links.get(t,1),s[e+2]=r.links.get(t,1),s[e+3]=r.links.get(t,2),s[e+4]=r.links.get(t,2),s[e+5]=r.links.get(t,0)}return new MultiLine(e?t.uvs.toMatrixSlice():r.verts.slice(),s)}static fromGrid(t,e,r){let i=(e-1)*r/2,s=MultiVector3_MultiVector3.new(4*e);for(let t=0;t<e;t++){let e=r*t-i;s.set(2*t,new Vector3_Vector3(e,-i,0)),s.set(2*t+1,new Vector3_Vector3(e,i,0))}for(let t=0;t<e;t++){s.set(2*e+2*t,new Vector3_Vector3(-i,r*t-i,0)),s.set(2*e+2*t+1,new Vector3_Vector3(i,r*t-i,0))}return s.forEach((e=>t.pushToWorld(e))),new MultiLine(s.slice())}static fromPlane(t){let e=Const_Const.PLANE_RENDER_LINECOUNT,r=Const_Const.PLANE_RENDER_LINEDISTANCE,i=r/10,s=(e-1)*r/2,o=MultiVector3_MultiVector3.new(4*e+10);for(let t=0;t<e;t++){let e=r*t-s;o.set(2*t,new Vector3_Vector3(e,-s,0)),o.set(2*t+1,new Vector3_Vector3(e,s,0))}for(let t=0;t<e;t++){o.set(2*e+2*t,new Vector3_Vector3(-s,r*t-s,0)),o.set(2*e+2*t+1,new Vector3_Vector3(s,r*t-s,0))}let n=o.count-10;o.set(n,new Vector3_Vector3(s+i,-i,0)),o.set(n+1,new Vector3_Vector3(s+4*i,i,0));let a=o.count-8;o.set(a,new Vector3_Vector3(s+i,i,0)),o.set(a+1,new Vector3_Vector3(s+4*i,-i,0));let h=o.count-6;o.set(h,new Vector3_Vector3(0,s+2.5*i,0)),o.set(h+1,new Vector3_Vector3(i,s+4*i,0));let l=o.count-4;o.set(l,new Vector3_Vector3(i,s+i,0)),o.set(l+1,new Vector3_Vector3(-i,s+4*i,0));let d=o.count-2;return o.set(d,new Vector3_Vector3(0,0,0)),o.set(d+1,new Vector3_Vector3(0,0,r)),o.forEach((e=>t.pushToWorld(e))),new MultiLine(o.slice())}static fromCircle(t,e=Const_Const.CIRCLE_SEGMENTS,r){let i=e,s=2*Math.PI;r||(r=Domain_Domain.new(0,s));let o=MultiVector3_MultiVector3.new(i);for(let e=0;e<i;e++){let s=r.elevate(e/i);o.set(e,t.at(s))}return new MultiLine(o.slice(),getPairIndices(i,!0))}static fromPolyline(t,e=!1){return new MultiLine(t.verts,getPairIndices(t.verts.count,e))}static fromBezier(t,e=Const_Const.BEZIER_SEGMENTS){let r=e+1,i=MultiVector3_MultiVector3.new(r);for(let s=0;s<r;s++){let r=s/e;i.set(s,t.pointAt(r))}return new MultiLine(i.slice(),getPairIndices(r,!1))}static fromCube(t){let e=MultiVector3_MultiVector3.fromList(t.getCorners());return new MultiLine(e)}static fromRect(t){let e=MultiVector3_MultiVector3.fromList(t.getCorners()),r=e.get(3);return e.set(3,e.get(2)),e.set(2,r),new MultiLine(e,getPairIndices(e.count,!0))}static fromJoin(t){let e=0,r=0;for(let i of t)e+=i.links.length,r+=i.verts.count();let i=MultiVector3_MultiVector3.new(r),s=new Uint16Array(e),o=0,n=0;for(let e of t){for(let t=0;t<e.verts.count();t++)i.slice().setRow(o+t,e.verts.getRow(t));for(let t=0;t<e.links.length;t++)s[n+t]=e.links[t]+o;o+=e.verts.count(),n+=e.links.length}return new MultiLine(i,s)}}function getDefaultIndices(t){let e=new Uint16Array(t);for(let r=0;r<t;r++)e[r]=r;return e}function getPairIndices(t,e){let r=2*t;e||(r-=2);let i=new Uint16Array(r);for(let e=0;e<t;e++)i[2*e]=e,i[2*e+1]=(e+1)%t;return i}class Plane_Plane extends Geometry{constructor(t){super(),this._matrix=t}static fromPN(t,e){let r=e.cross(Vector3_Vector3.unitX());r.length()<Const_Const.TOLERANCE&&(r=e.cross(Vector3_Vector3.unitY()));let i=r.normalize(),s=e.cross(i).normalize(),o=Plane_Plane.planeMatrixFromVecs(t,i,s,e);return new Plane_Plane(o)}static fromPVV(t,e,r){let i=e.clone().cross(r).normalize(),s=t.clone(),o=e.normalized(),n=e.clone().cross(i),a=Plane_Plane.planeMatrixFromVecs(s,o,n,i);return new Plane_Plane(a)}static from3pt(t,e,r){let i=e.clone().sub(t),s=r.clone().sub(t);return this.fromPVV(t,i,s)}static WorldXY(){return Plane_Plane.from3pt(Vector3_Vector3.zero(),Vector3_Vector3.unitX(),Vector3_Vector3.unitY())}static WorldYZ(){return Plane_Plane.from3pt(Vector3_Vector3.zero(),Vector3_Vector3.unitY(),Vector3_Vector3.unitZ())}static WorldXZ(){return Plane_Plane.from3pt(Vector3_Vector3.zero(),Vector3_Vector3.unitX(),Vector3_Vector3.unitZ())}static fromLeastSquares(t){let e=t.mean(),r=f.cov(t.slice()),[i,s]=f.eig(r);console.log(i);let o=Vector3_Vector3.fromArray(s.getColumn(0)),n=Vector3_Vector3.fromArray(s.getColumn(1));return Plane_Plane.fromPVV(e,o,n)}static fromXYLeastSquares(t){let e=t.mean();return Plane_Plane.WorldXY().transform(Matrix4_Matrix4.newTranslation(e.x,e.y,e.z))}static planeMatrixFromVecs(t,e,r,i){return new Matrix4_Matrix4([e.x,e.y,e.z,0,r.x,r.y,r.z,0,i.x,i.y,i.z,0,t.x,t.y,t.z,1])}get ihat(){return Vector3_Vector3.fromArray(this._matrix.getRow(0))}get jhat(){return Vector3_Vector3.fromArray(this._matrix.getRow(1))}get khat(){return Vector3_Vector3.fromArray(this._matrix.getRow(2))}get center(){return Vector3_Vector3.fromArray(this._matrix.getRow(3))}get matrix(){return this._matrix.clone()}get normal(){return this.khat}get d(){return this.closestPoint(Vector3_Vector3.zero())[1]}set ihat(t){this._matrix.setRow(0,[t.x,t.y,t.z,0])}set jhat(t){this._matrix.setRow(1,[t.x,t.y,t.z,0])}set khat(t){this._matrix.setRow(2,[t.x,t.y,t.z,0])}set center(t){this._matrix.setRow(3,[t.x,t.y,t.z,1])}set matrix(t){this._matrix=t}get inverse(){return this._matrix.inverse()}distanceTo(t){return this.khat.dot(t)+this.d}setPosition(t){this.center=t}setNormal(t){this.khat=t}clone(){return new Plane_Plane(this._matrix.clone())}transform(t){return this._matrix=this._matrix.multiply(t),this}transformed(t){return this.clone().transform(t)}moveTo(t){return this.center=t,this}pullToPlane(t){return this.inverse.multiplyVector(t)}pushToWorld(t){return this.matrix.multiplyVector(t)}closestPoint(t){let e=this.pullToPlane(t),r=e.z;return e.z=0,[this.pushToWorld(e),r]}rotateVector(t,e){let r=this.pullToPlane(t);return r=Matrix4_Matrix4.newAxisRotation(this.normal,e).multiplyVector(r),this.pushToWorld(r)}}class Circle3 extends Geometry{constructor(t,e){super(),this.plane=t,this.radius=e}static new(t,e){return new Circle3(t,e)}static newPlanar(t,e){return new Circle3(Plane_Plane.WorldXY().moveTo(t),e)}static fromCircle2(t,e=Plane_Plane.WorldXY()){let r=e.pushToWorld(Vector3_Vector3.from2d(t.center));return(e=e.clone()).center=r,new Circle3(e,t.radius)}at(t){return this.plane.pushToWorld(new Vector3_Vector3(Math.cos(t)*this.radius,Math.sin(t)*this.radius,0))}frameAt(t){let e=this.at(t),r=this.plane.center.subbed(e).normalize(),i=this.plane.khat.normalize();return Plane_Plane.fromPVV(e,r,i)}buffer(){return MultiLine.fromCircle(this)}includes(t){let[e,r]=this.plane.closestPoint(t);r/=3;let i=this.plane.center.clone().disTo(e)-this.radius;return Math.pow(r,2)+Math.pow(i,2)<Const_Const.TOL_SQUARED}clone(){throw new Error("Method not implemented.")}transform(t){throw new Error("Method not implemented.")}transformed(t){throw new Error("Method not implemented.")}}class Cube{constructor(t,e){this.plane=t,this.domain=e}static new(t,e){return new Cube(t,e)}static fromRadius(t,e){return new Cube(Plane_Plane.WorldXY().moveTo(t),Domain3.fromRadius(e))}getCorners(){return this.domain.corners(this.plane.matrix)}}class Domain_Domain{constructor(t=0,e=1){this.t0=t,this.t1=e,this.size=this.t1-this.t0}static new(t=0,e=1){return new Domain_Domain(t,e)}static fromRadius(t){return new Domain_Domain(-t,t)}static fromInclude(t){let e=Number.MAX_VALUE,r=Number.MIN_VALUE;for(let i=0;i<t.length;i++)t[i]<e&&(e=t[i]),t[i]>r&&(r=t[i]);return new Domain_Domain(e,r)}offset(t,e){return this.t0+=t,this.t1+=e,this.size=this.t1-this.t0,this}includes(t){return t>=this.t0&&t<=this.t1}includesEx(t){return t>=this.t0&&t<this.t1}normalize(t){return(t-this.t0)/this.size}elevate(t){return t*this.size+this.t0}lerp(t){return this.elevate(t)}remap(t,e=new Domain_Domain){let r=this.normalize(t);return e.elevate(r)}spawn(t){let e=new Float32Array(t),r=this.size/(t-1);for(let i=0;i<t;i++)e[i]=this.t0+i*r;return e}*iter(t){let e=this.size/(t-1);for(let r=0;r<t;r++){let t=this.t0+r*e;yield t}}*iterStep(t){for(let e=this.t0;e<=this.t1;e+=t)yield e}comform(t){return t<this.t0?this.t0:t>this.t1?this.t1:t}}class Domain_Domain2{constructor(t=new Domain_Domain,e=new Domain_Domain){this.x=t,this.y=e}static fromRadii(t,e){return new Domain_Domain2(Domain_Domain.fromRadius(t),Domain_Domain.fromRadius(e))}static fromRadius(t){return new Domain_Domain2(Domain_Domain.fromRadius(t),Domain_Domain.fromRadius(t))}static fromBounds(t,e,r,i){return new Domain_Domain2(new Domain_Domain(t,e),new Domain_Domain(r,i))}static fromWH(t,e,r,i){return new Domain_Domain2(new Domain_Domain(t,t+r),new Domain_Domain(e,e+i))}static fromInclude(t){let e=t.toMatrixSlice();return new Domain_Domain2(Domain_Domain.fromInclude(e.getColumn(0)),Domain_Domain.fromInclude(e.getColumn(1)))}offset(t){let e=t;if(4!=e.length)throw"need 4 values";return this.x.offset(e[0],e[1]),this.y.offset(e[2],e[3]),this}includes(t){return this.x.includes(t.x)&&this.y.includes(t.y)}includesEx(t){return this.x.includesEx(t.x)&&this.y.includesEx(t.y)}size(){return new Vector2_Vector2(this.x.size,this.y.size)}normalize(t){return new Vector2_Vector2(this.x.normalize(t.x),this.y.normalize(t.y))}elevate(t){return new Vector2_Vector2(this.x.elevate(t.x),this.y.elevate(t.y))}remap(t,e=new Domain_Domain2){let r=this.normalize(t);return e.elevate(r)}corners(){let t=[];for(let e of[this.x.t0,this.x.t1])for(let r of[this.y.t0,this.y.t1])t.push(new Vector2_Vector2(e,r));return t}spawn(t,e){let r=MultiVector2_MultiVector2.new(t*e),i=0,s=this.y.spawn(e),o=this.x.spawn(t);for(const t of s)for(const e of o)r.setXY(i,e,t),i++;return r}populate(t,e){let r=MultiVector2_MultiVector2.new(t);for(let t=0;t<r.count;t++)r.set(t,this.elevate(Vector2_Vector2.fromRandom(e)));return r}}class Domain3{constructor(t=new Domain_Domain,e=new Domain_Domain,r=new Domain_Domain){this.x=t,this.y=e,this.z=r}static fromVectors(t=Vector3_Vector3.zero(),e=Vector3_Vector3.new(1,1,1)){return new Domain3(new Domain_Domain(t.x,e.x),new Domain_Domain(t.y,e.y),new Domain_Domain(t.z,e.z))}static fromBounds(t,e,r,i,s,o){return new Domain3(new Domain_Domain(t,e),new Domain_Domain(r,i),new Domain_Domain(s,o))}static fromRadius(t){return new Domain3(Domain_Domain.fromRadius(t),Domain_Domain.fromRadius(t),Domain_Domain.fromRadius(t))}static fromRadii(t,e,r){return new Domain3(Domain_Domain.fromRadius(t),Domain_Domain.fromRadius(e),Domain_Domain.fromRadius(r))}static fromInclude(t){return new Domain3(Domain_Domain.fromInclude(t.slice().getColumn(0)),Domain_Domain.fromInclude(t.slice().getColumn(1)),Domain_Domain.fromInclude(t.slice().getColumn(2)))}offset(t){let e=t;if(6!=e.length)throw"need 6 values";return this.x.offset(e[0],e[1]),this.y.offset(e[2],e[3]),this.z.offset(e[4],e[5]),this}includes(t){return this.x.includes(t.x)&&this.y.includes(t.y)&&this.z.includes(t.z)}size(){return new Vector3_Vector3(this.x.size,this.y.size,this.z.size)}normalize(t){return new Vector3_Vector3(this.x.normalize(t.x),this.y.normalize(t.y),this.z.normalize(t.z))}elevate(t){return new Vector3_Vector3(this.x.elevate(t.x),this.y.elevate(t.y),this.z.elevate(t.z))}remap(t,e=new Domain3){let r=this.normalize(t);return e.elevate(r)}remapAll(t,e=new Domain3){let r=MultiVector3_MultiVector3.new(t.count);for(let i=0;i<t.count;i++){let s=this.normalize(t.get(i));r.set(i,e.elevate(s))}return r}corners(t){let e=[];for(let r of[this.x.t0,this.x.t1])for(let i of[this.y.t0,this.y.t1])for(let s of[this.z.t0,this.z.t1])e.push(t.multiplyVector(new Vector3_Vector3(r,i,s)));return e}spawn(t,e,r){let i=MultiVector3_MultiVector3.new(t*e),s=0,o=this.z.spawn(r),n=this.y.spawn(e),a=this.x.spawn(t);for(const t of o)for(const e of n)for(const r of a)i.setXYZ(s,r,e,t),s++;return i}populate(t,e){let r=MultiVector3_MultiVector3.new(t);for(let t=0;t<r.count;t++)r.set(t,this.elevate(Vector3_Vector3.fromRandom(e)));return r}}class Matrix3_Matrix3 extends FloatMatrix_FloatMatrix{constructor(t=[]){super(3,3,t)}static fromMat4(t){let e=t.data;return new Matrix3_Matrix3([e[0],e[1],e[2],e[4],e[5],e[6],e[8],e[9],e[10]])}static new(t=[1,0,0,0,1,0,0,0,1]){return new Matrix3_Matrix3(t)}static newIdentity(){return new Matrix3_Matrix3([1,0,0,0,1,0,0,0,1])}static newProjection(t,e){return new Matrix3_Matrix3([2/t,0,0,0,-2/e,0,-1,1,1])}static newTranslation(t,e){return new Matrix3_Matrix3([1,0,0,0,1,0,t,e,1])}static newRotation(t){var e=Math.cos(t),r=Math.sin(t);return new Matrix3_Matrix3([e,-r,0,r,e,0,0,0,1])}static newScalar(t,e){return new Matrix3_Matrix3([t,0,0,0,e,0,0,0,1])}toMat4(){let t=this.data;return new Matrix4_Matrix4([t[0],t[1],0,t[2],t[3],t[4],0,t[5],0,0,1,0,t[6],t[7],0,t[8]])}toMat4Rot(){let t=this.data;return new Matrix4_Matrix4([t[0],t[1],t[2],0,t[3],t[4],t[5],0,t[6],t[7],t[8],0,0,0,0,1])}project(t,e){return this.multiply(Matrix3_Matrix3.newProjection(t,e))}translateN(t,e){return this.multiply(Matrix3_Matrix3.newTranslation(t,e))}translate(t){return this.multiply(Matrix3_Matrix3.newTranslation(t.x,t.y))}rotate(t){return this.multiply(Matrix3_Matrix3.newRotation(t))}scale(t,e){return this.multiply(Matrix3_Matrix3.newScalar(t,e))}multiply(t){let e=this.data,r=t.data;var i=e[0],s=e[1],o=e[2],n=e[3],a=e[4],h=e[5],l=e[6],d=e[7],c=e[8],u=r[0],m=r[1],f=r[2],g=r[3],p=r[4],w=r[5],x=r[6],_=r[7],M=r[8];return new Matrix3_Matrix3([u*i+m*n+f*l,u*s+m*a+f*d,u*o+m*h+f*c,g*i+p*n+w*l,g*s+p*a+w*d,g*o+p*h+w*c,x*i+_*n+M*l,x*s+_*a+M*d,x*o+_*h+M*c])}transformVector(t){let e=this.data,r=t.x,i=t.y,s=r*e[2]+i*e[5]+e[8];return t.x=(r*e[0]+i*e[3]+e[6])/s,t.y=(r*e[1]+i*e[4]+e[7])/s,t}inverse(){let t=this.data;var e=t[4]*t[8]-t[5]*t[7],r=t[1]*t[8]-t[2]*t[7],i=t[1]*t[5]-t[2]*t[4],s=1/(t[0]*e-t[3]*r+t[6]*i);return this.setData([s*e,-s*r,s*i,-s*(t[3]*t[8]-t[5]*t[6]),s*(t[0]*t[8]-t[2]*t[6]),-s*(t[0]*t[5]-t[2]*t[3]),s*(t[3]*t[7]-t[4]*t[6]),-s*(t[0]*t[7]-t[1]*t[6]),s*(t[0]*t[4]-t[1]*t[3])]),this}}class Rectangle3{constructor(t,e){this.plane=t,this.domain=e}static new(t,e){return new Rectangle3(t,e)}getCorners(){return this.domain.corners().map((t=>this.plane.pushToWorld(Vector3_Vector3.from2d(t))))}buffer(){return MultiLine.fromRect(this)}}class Curve extends Geometry{constructor(t,e,r=Domain_Domain.new(0,1)){super(),this.verts=t,this.degree=e,this.domain=r}toPolyline(t){let e=t+1,r=MultiVector3_MultiVector3.new(e);for(let i=0;i<e;i++){let e=i/t;r.set(i,this.pointAt(this.domain.elevate(e)))}return Polyline.new(r)}buffer(t=Const_Const.BEZIER_SEGMENTS){return MultiLine.fromPolyline(this.toPolyline(t))}}class Polynomial_Polynomial{static bernstein(t,e,r){return this.getBicoef(r,e)*Math.pow(t,e)*Math.pow(1-t,r-e)}static coxdeboor(t,e,r,i){if(0==r)return t>=i[e]&&t<i[e+1]?1:0;let s=i[e+r]-i[e],o=i[e+r+1]-i[e+1],n=(t-i[e])/s,a=(i[e+r+1]-t)/o;return n*this.coxdeboor(t,e,r-1,i)+a*this.coxdeboor(t,e+1,r-1,i)}static coxdeboorTriangle(t,e,r,i){let s=i.length,o=new Float32Array(GeonMath.stack(s)),n=Util.iterateTriangle,a=s-1;for(let r=0;r<=a;r++){let s=n(a,r);(i[e]<=t||t<i[e+1])&&(o[s]=1),o[s]=0}for(let a=s-2;a>-1;a-=1)for(let s=0;s<=a;s++){let h=n(a,s),l=o[n(a+1,s)],d=o[n(a+1,s+1)],c=(t-i[e])/(i[e+r]-i[e]),u=(i[e+r+1]-t)/(i[e+r+1]-i[e+1]);o[h]=c*l+u*d}return o}static getBicoef(t,e){return this._pascal[t][e]}static calcBicoef(t,e){let r=GeonMath.factorial;return r(t)/(r(e)*r(t-e))}static calcPascal(t){let e=Array(t);for(let r=0;r<t;r++){e[r]=Array(r+1);for(let t=0;t<r+1;t++)e[r][t]=this.calcBicoef(r,t)}return e}static decastejau(t,e){let r=t.count,i=MultiVector3_MultiVector3.new(GeonMath.stack(r)),s=Util.iterateTriangle,o=r-1,n=0;for(let e=0;e<=o;e++){let r=s(o,e);i.set(r,t.get(n)),n++}for(let t=r-2;t>-1;t-=1)for(let r=0;r<=t;r++){let o=s(t,r),n=i.get(s(t+1,r)),a=i.get(s(t+1,r+1)).scale(e).add(n.scale(1-e));i.set(o,a)}return i}static decastejauExtrapolateEnd(t,e){let r=t.count,i=MultiVector3_MultiVector3.new(GeonMath.stack(r)),s=Util.iterateTriangle,o=0;for(let e=r-1;e>-1;e-=1){let r=s(e,0);i.set(r,t.get(o)),o++}for(let t=1;t<r;t++)for(let r=1;r<=t;r++){let o=s(t-1,r-1),n=s(t,r-1),a=s(t,r),h=i.get(n).lerp(i.get(o),1+e);i.set(a,h)}return i}static decastejauExtrapolateStart(t,e){let r=t.count,i=MultiVector3_MultiVector3.new(GeonMath.stack(r)),s=Util.iterateTriangle,o=r-1,n=0;for(let e=0;e<=o;e++){let r=s(o,e);i.set(r,t.get(n)),n++}for(let t=r-2;t>-1;t-=1)for(let r=0;r<=t;r++){let o=s(t,r),n=i.get(s(t+1,r)),a=i.get(s(t+1,r+1)).scale(e).add(n.scale(1-e));i.set(o,a)}return i}}Polynomial_Polynomial.MAX_DEGREE=15,Polynomial_Polynomial._pascal=Polynomial_Polynomial.calcPascal(Polynomial_Polynomial.MAX_DEGREE);class Bezier extends Curve{constructor(t,e){super(t,e)}static fromList(t){return this.new(MultiVector3_MultiVector3.fromList(t))}static new(t){return new Bezier(t,t.count-1)}static equalizeDegrees(t){let e=0;for(let r of t)r.degree>e&&(e=r.degree);for(let r=0;r<t.length;r++){let i=0;for(;t[r].degree<e&&i<100;)t[r]=t[r].increaseDegree(),i++}return t}hodograph(){let t=MultiVector3_MultiVector3.new(this.verts.count-1);for(let e=0;e<this.verts.count-1;e++)t.set(e,this.verts.get(e+1).subbed(this.verts.get(e)));return Bezier.new(t)}increaseDegree(){let t=this.degree,e=MultiVector3_MultiVector3.new(t+2);e.set(0,this.verts.get(0)),e.set(e.count-1,this.verts.get(this.verts.count-1));for(let r=1;r<t+1;r++){let i=this.verts.get(r-1),s=this.verts.get(r),o=r/(t+1),n=1-o,a=i.scale(o).add(s.scale(n));e.set(r,a)}return Bezier.new(e)}splitAt(t){let e=this.degree+1,r=Polynomial_Polynomial.decastejau(this.verts,t),i=Util.getTriangleLeft(r,e),s=Util.getTriangleRight(r,e);return[Bezier.new(i),Bezier.new(s)]}extend(t){let e=Polynomial_Polynomial.decastejauExtrapolateEnd(this.verts,t),r=this.verts.count,i=Util.getTriangleBase(e,r);this.verts=i}getExtention(t){let e=Polynomial_Polynomial.decastejauExtrapolateEnd(this.verts,t),r=this.verts.count,i=Util.getTriangleRight(e,r);return Bezier.new(i)}pointAt(t){let e=Vector3_Vector3.zero();for(let r=0;r<this.degree+1;r++)e.add(this.verts.get(r).scaled(Polynomial_Polynomial.bernstein(t,r,this.degree)));return e}tangentAt(t){return this.hodograph().pointAt(t).normalize()}normalAt(t,e=Vector3_Vector3.unitZ()){return this.tangentAt(t).cross(e)}frameAt(t,e=Vector3_Vector3.unitZ()){let r=this.pointAt(t),i=this.tangentAt(t);return Plane_Plane.fromPVV(r,i.cross(e),e)}ApproxClosestPoint(t,e=5,r=Const_Const.TOLERANCE){let disToParam=e=>t.disToSquared(this.pointAt(e)),i=e*this.verts.count,s=1/0,o=-1;for(let t=1;t<i+1;t++){let e=disToParam(t/i);e<s&&(s=e,o=t)}let n=Math.max((o-1)/i,0),a=Math.min((o+1)/i,1),h=Domain_Domain.new(n,a);return Util.lowestScore(h,disToParam,r)}uglyClosestPoint(t,e=4){let r=[],i=[],addSuspect=t=>{r.push(this.pointAt(t)),i.push(t)};addSuspect(this.domain.t0),addSuspect(this.domain.t1);let s=1/0,o=-1;for(let e=0;e<r.length;e++){let i=t.disToSquared(r[e]);i<s&&(s=i,o=e)}return[r[o],i[o]]}pointAtApproxLength(t){this.toPolyline(100).tAtLength(t)}getLazyApprox(){return this._approx||this.bufferApprox(),this._approx}bufferApprox(){this._approx=this.toPolyline(100)}clone(){return Bezier.new(this.verts.clone())}transform(t){return this._approx=void 0,this.verts.transform(t),this}transformed(t){return this._approx=void 0,Bezier.new(this.verts.transformed(t))}}class Polyline extends Curve{constructor(t){super(t,1),this.bufferLengths()}static fromList(t){return this.new(MultiVector3_MultiVector3.fromList(t))}static new(t){return new Polyline(t)}fillet(t){let e=this.verts.count+(this.verts.count-2),r=MultiVector3_MultiVector3.new(e);for(let t=0;t<e;t++){let e=Math.ceil(t/2);r.set(t,this.verts.get(e))}return Polyline.new(r)}pointAt(t){let e=t*(this.verts.count-1),r=Math.floor(e),i=Math.ceil(e);return Vector3_Vector3.fromLerp(this.verts.get(r),this.verts.get(i),e-r)}lengthAt(t){let e=this.getLazyLengths();return GeonMath.sample(e,t)}tAtLength(t){let e=this.getLazyLengths(),[r,i]=GeonMath.between(e,t),[s,o]=[e[r],e[i]],n=GeonMath.fraction(t,s,o);return GeonMath.lerp(e[r],e[i],n)}length(){return this.getLazyLengths()[this.verts.count-1]}getLazyLengths(){return this._lengths||this.bufferLengths(),this._lengths}bufferLengths(){let t=this.verts.count,e=Array(t),r=0;e[0]=r;for(let i=0;i<t-1;i++)r+=this.verts.get(i).disTo(this.verts.get(i+1)),e[i+1]=r;this._lengths=e}buffer(){return MultiLine.fromPolyline(this)}clone(){return Polyline.new(this.verts.clone())}transform(t){return this._lengths=void 0,this.verts.transform(t),this}transformed(t){return this._lengths=void 0,Polyline.new(this.verts.transformed(t))}}class Spline extends Curve{constructor(t,e,r,i){super(t,e,i),this.knots=r}static fromList(t,e){return this.new(MultiVector3_MultiVector3.fromList(t),e)}static calcKnots(t,e){let r=new Float32Array(t+e+1);for(let t=0;t<e+1;t++)r[t]=0-1e-4*(e-t);let i=r.length-e-e-1,s=1;for(let t=e+1;t<r.length-e-1;t++)r[t]=s/i,s++;s=0;for(let t=r.length-e-1;t<r.length;t++)r[t]=1+1e-4*s,s++;return r}static new(t,e){let r=Domain_Domain.new(0,1),i=t.count;if(i<e+1)return;let s=this.calcKnots(i,e);return new Spline(t,e,s,r)}extend(t){let e=this.degree+1,r=new Array(e);for(let t=0;t<e;t++){let i=this.verts.count-e+t;r[t]=this.verts.get(i)}let i=Bezier.fromList(r);i.extend(t);for(let t=0;t<e;t++){let r=this.verts.count-e+t;this.verts.set(r,i.verts.get(t))}return this}getExtention(t){let e=this.degree+1,r=new Array(e);for(let t=0;t<e;t++)r[t]=this.verts.get(this.verts.count-e+t);return Bezier.fromList(r).getExtention(t)}pointAt(t){let e=Vector3_Vector3.zero();for(let r=0;r<this.verts.count;r++){let i=Polynomial_Polynomial.coxdeboor(t,r,this.degree,this.knots);e.add(this.verts.get(r).scaled(i))}return e}clone(){throw new Error("Method not implemented.")}transform(t){throw new Error("Method not implemented.")}transformed(t){throw new Error("Method not implemented.")}}class Surface extends Geometry{}class BiSurface extends Surface{buffer(t=100,e=100){return Mesh_Mesh.fromBiSurface(this,t,e)}}class BezierSquare extends BiSurface{constructor(t,e,r){super(),this.verts=t,this.degreeU=e,this.degreeV=r}static new(t,e,r){if(t.count==(e+1)*(r+1))return new BezierSquare(t,e,r);console.warn(`BiSurface Not Created. ${t.count} vertices \n                does not match ${e} degreeU times ${r} degreeV surface...`)}static fromFourEdge(t,e,r,i){}static fromLoft(t){let e=(t=Bezier.equalizeDegrees(t))[0].degree,r=t.length-1,i=e+1*t.length,s=MultiVector3_MultiVector3.new(i),o=0;for(let e=0;e<t.length;e++)for(let r=0;r<t[e].verts.count;r++)s.set(o,t[e].verts.get(r)),o++;return BezierSquare.new(s,r,e)}pointAt(t,e){let r=Vector3_Vector3.zero();for(let i=0;i<this.degreeU+1;i++)for(let s=0;s<this.degreeV+1;s++){let o=Polynomial_Polynomial.bernstein(t,i,this.degreeU)*Polynomial_Polynomial.bernstein(e,s,this.degreeV),n=i*(this.degreeV+1)+s;r.add(this.verts.get(n).scaled(o))}return r}pointAtUV(t){return this.pointAt(t.x,t.y)}approxClosestPoint(t,e=2,r=Const_Const.TOLERANCE){let disToParams=(e,r)=>t.disToSquared(this.pointAt(e,r)),i=e*(this.degreeU+1),s=e*(this.degreeV+1),o=1/0,n=-1,a=-1;for(let t=1;t<i+1;t++){let e=t/i;for(let r=1;r<i+1;r++){let i=disToParams(e,r/s);i<o&&(o=i,n=t,a=r)}}let h=Domain_Domain2.fromBounds(Math.max((n-1)/i,0),Math.min((n+1)/i,1),Math.max((a-1)/s,0),Math.min((a+1)/s,1));return Util.lowestScoreSquared(h,disToParams,r)}clone(){return BezierSquare.new(this.verts.clone(),this.degreeU,this.degreeV)}transform(t){return this._approx=void 0,this.verts.transform(t),this}transformed(t){return this._approx=void 0,BezierSquare.new(this.verts.transformed(t),this.degreeU,this.degreeV)}}!function(t){t[t.Invalid=0]="Invalid",t[t.Points=1]="Points",t[t.Lines=2]="Lines",t[t.Triangles=3]="Triangles",t[t.Quads=4]="Quads"}(n||(n={})),function(t){t[t.None=0]="None",t[t.Vertex=1]="Vertex",t[t.Face=2]="Face",t[t.MultiVertex=3]="MultiVertex"}(a||(a={}));class Mesh_Mesh extends Geometry{constructor(t,e,r,i,s=a.None){super(),this.verts=t,this.links=e,this._uvs=r,this._normals=i,this._normalKind=s}get maxSize(){return this.links?this.links.data.length:this.verts.count}get uvs(){return this._uvs}get normals(){return this._normals}get normalKind(){return this._normalKind}setUvs(t,e){this._uvs=t,this._normalKind=e}setNormals(t){this._normals=t}clone(){var t,e;return new Mesh_Mesh(this.verts.clone(),this.links.clone(),null===(t=this._uvs)||void 0===t?void 0:t.clone(),null===(e=this._normals)||void 0===e?void 0:e.clone(),this._normalKind)}transform(t){return this.verts.transform(t),this}transformed(t){return this.clone().transform(t)}static new(t,e,r,i){return new Mesh_Mesh(t,e,r,i)}static fromLists(t,e,r=[],i=[],s=a.None){return new Mesh_Mesh(MultiVector3_MultiVector3.fromList(t),IntMatrix_IntMatrix.fromList(e,3),MultiVector2_MultiVector2.fromList(r),MultiVector3_MultiVector3.fromList(i),s)}static fromRawLists(t,e,r,i,s=a.None){return new Mesh_Mesh(MultiVector3_MultiVector3.fromData(t),IntMatrix_IntMatrix.fromList(e,3),MultiVector2_MultiVector2.fromData(r),MultiVector3_MultiVector3.fromData(i),s)}static newEmpty(t,e,r){return new Mesh_Mesh(MultiVector3_MultiVector3.new(t),new IntMatrix_IntMatrix(e,r))}static newLines(t,e){let r=MultiVector3_MultiVector3.fromList(t),i=IntMatrix_IntMatrix.fromList(e,2);return new Mesh_Mesh(r,i)}static fromBiSurface(t,e=10,r=10){let i=e+1,s=r+1,o=MultiVector3_MultiVector3.new(i*s),n=new IntMatrix_IntMatrix(e*r*2,3);for(let n=0;n<i;n++)for(let i=0;i<s;i++){let a=n*s+i;o.set(a,t.pointAt(n/e,i/r))}for(let t=0;t<e;t++)for(let e=0;e<r;e++){let o=2*(t*r+e),a=t*i+e,h=a+s,l=a+1,d=h+1;n.setRow(o,[a,h,d]),n.setRow(o+1,[l,a,d])}return new Mesh_Mesh(o,n)}static fromTriSurface(t,e=10){let r=e+1,i=MultiVector3_MultiVector3.new(GeonMath.stack(r)),s=new IntMatrix_IntMatrix(GeonMath.stack(r),3);return new Mesh_Mesh(i,s)}static zero(){return new Mesh_Mesh(MultiVector3_MultiVector3.new(0),new IntMatrix_IntMatrix(0,0))}static fromJoin(t){let e=0,r=0;for(let i of t)e+=i.verts.count,r+=i.links.count();let i=MultiVector3_MultiVector3.new(e),s=new IntMatrix_IntMatrix(r,3),o=0,n=0;for(let e of t){for(let t=0;t<e.verts.count;t++)i.set(o+t,e.verts.get(t));for(let t=0;t<e.links.count();t++){let r=e.links.getRow(t);for(let t=0;t<r.length;t++)r[t]=r[t]+o;s.setRow(n+t,r)}o+=e.verts.count,n+=e.links.count()}return new Mesh_Mesh(i,s)}static fromRectangle(t){let e=t.getCorners(),r=[];return r.push(...quadToTri(h[0])),this.fromLists(e,r)}static fromRectDoubleSided(t,e){let r=t.getCorners(),i=MultiVector2_MultiVector2.fromData(new Float32Array([0,0,0,1,1,0,1,1,0,0,1,0,0,1,1,1])),s=IntMatrix_IntMatrix.fromList([0,1,3,0,3,2,0,3,1,0,2,3],3);return Mesh_Mesh.new(MultiVector3_MultiVector3.fromList(r),s,i)}static newQuad(t){let e=[...quadToTri(h[0])];return this.fromLists(t,e)}static newOct(t){let e=[];for(let t of h)e.push(...quadToTri(t));return this.fromLists(t,e)}static fromCube(t){let e=t.getCorners();return Mesh_Mesh.newOct(e)}static newDefaultCube(){let t=new Cube(Plane_Plane.WorldXY(),Domain3.fromRadius(.5)).getCorners();return Mesh_Mesh.newOct(t)}static newIcosahedron(t=1){let e=new Graph,r=t,i=r*((1+Math.pow(5,.5))/2),addVert=t=>{e.addVert(t,t)};addVert(new Vector3_Vector3(-r,-i,0)),addVert(new Vector3_Vector3(r,-i,0)),addVert(new Vector3_Vector3(-r,i,0)),addVert(new Vector3_Vector3(r,i,0)),addVert(new Vector3_Vector3(0,-r,-i)),addVert(new Vector3_Vector3(0,r,-i)),addVert(new Vector3_Vector3(0,-r,i)),addVert(new Vector3_Vector3(0,r,i)),addVert(new Vector3_Vector3(-i,0,-r)),addVert(new Vector3_Vector3(-i,0,r)),addVert(new Vector3_Vector3(i,0,-r)),addVert(new Vector3_Vector3(i,0,r));let addEdge=(t,r)=>{e.addEdge(t,r)};for(let t=0;t<12;t+=4){addEdge(t+0,t+1),addEdge(t+2,t+3);let e=(t+4)%12;addEdge(t+0,e+2),addEdge(t+0,e+0),addEdge(t+1,e+2),addEdge(t+1,e+0),addEdge(t+2,e+3),addEdge(t+2,e+1),addEdge(t+3,e+3),addEdge(t+3,e+1)}return this.fromGraph(e)}static newSphere(t,e,r,i){let s=r*i+2,o=MultiVector3_MultiVector3.new(s),setVert=function(r,i){o.set(r,i.scale(e).add(t))};setVert(0,new Vector3_Vector3(0,0,1));for(let t=0;t<r;t++)for(let e=0;e<i;e++){let s=Math.PI*(t+1)/(r+1),o=2*Math.PI*e/i,n=Math.sin(s)*Math.cos(o),a=Math.sin(s)*Math.sin(o),h=Math.cos(s);setVert(1+t*i+e,new Vector3_Vector3(n,a,h))}setVert(s-1,new Vector3_Vector3(0,0,-1));let n=i*r*2,a=new IntMatrix_IntMatrix(n,3);a.fill(-1);let setFace=function(t,e){a.setRow(t,e)};for(let t=0;t<i;t++)setFace(t,[0,t+1,(t+1)%i+1]);for(let t=0;t<r-1;t++){let e=i*t+1,r=e+i;for(let s=0;s<i;s++){let o=e+(s+1)%i,n=r+s,a=r+(s+1)%i,h=i+i*t*2+2*s;setFace(h,[e+s,n,o]),setFace(h+1,[n,a,o])}}for(let t=0;t<i;t++){let e=s-i-1;setFace(n-i+t,[s-1,e+(t+1)%i,e+t])}return new Mesh_Mesh(o,a)}static newCylinder(t,e,r,i){let s=e.subbed(t),o=2*i+2,n=2*(o-2),a=MultiVector3_MultiVector3.new(o),setVert=function(t,e){a.set(t,e)},h=Plane_Plane.fromPN(t,s),l=Plane_Plane.fromPN(e,s);setVert(0,t);for(let t=0;t<i;t++){let e=new Vector3_Vector3(Math.cos(2*Math.PI*t/i),Math.sin(2*Math.PI*t/i),0).scale(r);e=h.matrix.multiplyVector(e),setVert(t+1,e)}let d=o/2;for(let t=0;t<i;t++){let e=new Vector3_Vector3(Math.cos(2*Math.PI*t/i),Math.sin(2*Math.PI*t/i),0).scale(r);e=l.matrix.multiplyVector(e),setVert(d+t,e)}setVert(o-1,e);let c=new IntMatrix_IntMatrix(n,3);c.fill(-1);let setFace=function(t,e){c.setRow(t,e)};for(let t=0;t<i;t++){let e=1+t,r=1+(t+1)%i,s=o-1,n=d+t,a=d+(t+1)%i;setFace(4*t,[0,r,e]),setFace(4*t+1,[e,r,n]),setFace(4*t+2,[r,a,n]),setFace(4*t+3,[s,n,a])}return new Mesh_Mesh(a,c)}static newCone(t,e,r,i){let s=i+2,o=2*i,n=MultiVector3_MultiVector3.new(s),setVert=function(e,r){n.set(e,r.add(t))},a=new IntMatrix_IntMatrix(o,3);a.fill(-1);let setFace=function(t,e){a.setRow(t,e)};setVert(0,new Vector3_Vector3(0,0,0));for(let t=0;t<i;t++)setVert(t+1,new Vector3_Vector3(Math.cos(2*Math.PI*t/i),Math.sin(2*Math.PI*t/i),0).scale(e));setVert(s-1,new Vector3_Vector3(0,0,r));for(let t=0;t<i;t++){let e=s-1,r=1+t,o=1+(t+1)%i;setFace(2*t,[0,o,r]),setFace(2*t+1,[r,o,e])}return new Mesh_Mesh(n,a)}static newTorus(t,e,r,i){let s=r*i,o=MultiVector3_MultiVector3.new(s),n=MultiVector3_MultiVector3.new(s);for(let s=0;s<r;s++){let a=2*Math.PI*s/r,h=Vector3_Vector3.new(Math.cos(a)*t,Math.sin(a)*t,0);for(let t=0;t<i;t++){let r=2*Math.PI*t/i,l=Vector3_Vector3.new(Math.cos(r)*Math.cos(a),Math.cos(r)*Math.sin(a),Math.sin(r)).normalize();n.set(s*i+t,l),o.set(s*i+t,l.scale(e).add(h))}}let a,h=IntMatrix_IntMatrix.new(2*s,3),getIndex=(t,e)=>t%r*i+e%i;for(let t=0;t<r;t++)for(let e=0;e<i;e++){let r=getIndex(t,e),i=getIndex(t,e+1),s=getIndex(t+1,e),o=getIndex(t+1,e+1),n=2*r;h.setRow(n,[r,s,i]),h.setRow(n+1,[i,s,o])}return Mesh_Mesh.new(o,h,a,n)}static fromGraph(t){let e=MultiVector3_MultiVector3.fromList(t.allVertPositions()),r=t.allVertLoopsAsInts(),i=new IntMatrix_IntMatrix(r.length,3);return r.forEach(((t,e)=>{3==t.length?i.setRow(e,t):console.log("cant convert loop")})),Mesh_Mesh.new(e,i)}getLineIds(){let t=this.links._width,e=this.links.data.length,r=new IntMatrix_IntMatrix(e,2);for(let e=0;e<this.links.count();e++)for(let i=0;i<t;i++){let s=(i+1)%t,o=e*t+i;r.set(o,0,this.links.get(e,i)),r.set(o,1,this.links.get(e,s))}return r}toLines(){const getLines=t=>{let e=this.links.count()*t,r=new IntMatrix_IntMatrix(e,2);for(let e=0;e<this.links.count();e++)for(let i=0;i<t;i++){let s=(i+1)%t,o=e*t+i;r.set(o,0,this.links.get(e,i)),r.set(o,1,this.links.get(e,s))}return r};let t=this.getType();if(t==n.Lines)return this.clone();if(t==n.Triangles){let t=getLines(3);return Mesh_Mesh.new(this.verts.clone(),t)}if(t==n.Quads){let t=getLines(4);return Mesh_Mesh.new(this.verts.clone(),t)}return console.warn("cannot convert to lines"),Mesh_Mesh.newEmpty(0,0,0)}ToShaderMesh(){return ShaderMesh_ShaderMesh.fromMesh(this)}toGraph(){return Graph.fromMesh(this)}toLinearMesh(){this.ensureFaceNormals();let t=this.links.data.length,e=this.links.count(),r=MultiVector3_MultiVector3.new(t),i=MultiVector3_MultiVector3.new(t);for(let t=0;t<e;t++){let e=this.normals.get(t);this.links.getRow(t).forEach(((s,o)=>{let n=3*t+o;r.set(n,this.verts.get(s)),i.set(n,e)}))}let s=IntMatrix_IntMatrix.fromList([],3);return s._width=3,s._height=t/3,s.data=getDefaultIndices(t),new Mesh_Mesh(r,s,void 0,i)}getVerticesOfFace(t){let e=MultiVector3_MultiVector3.new(this.links._width);return this.links.getRow(t).forEach(((t,r)=>{e.set(r,this.verts.get(t))})),e}get type(){return this.getType()}getType(){return this.links._width==n.Points?n.Points:this.links._width==n.Lines?n.Lines:this.links._width==n.Triangles?n.Triangles:this.links._width==n.Quads?n.Quads:n.Invalid}calcAndSetFaceNormals(){this._normalKind=a.Face,this._normals=this.calculateFaceNormals()}calcAndSetVertexNormals(){this._normalKind=a.Vertex,this._normals=this.calculateVertexNormals()}ensureVertexNormals(){return this._normals&&this._normals.count==this.verts.count?void(this._normalKind=a.Vertex):void this.calcAndSetVertexNormals()}ensureFaceNormals(){return this._normals&&this._normals.count==this.links.count()?(this._normalKind=a.Face,!0):(this.calcAndSetFaceNormals(),!1)}ensureMultiFaceNormals(){return!(!this._normals||this.normals.count!=this.maxSize)&&(this._normalKind=a.MultiVertex,!0)}calculateFaceNormals(){if(this.getType()!=n.Triangles)return console.error("can only calculate normals from triangular meshes"),MultiVector3_MultiVector3.new(0);let t=this.links.count(),e=MultiVector3_MultiVector3.new(t);for(let r=0;r<t;r++){let t=this.getVerticesOfFace(r),i=t.get(1).subbed(t.get(0)).cross(t.get(2).subbed(t.get(0))).normalize();e.set(r,i)}return e}calculateVertexNormals(){let t=this.links.count(),e=this.OLDcalculateFaceNormals(),r=MultiVector3_MultiVector3.new(this.verts.count);for(let i=0;i<t;i++){let t=e[i];this.links.getRow(i).forEach((e=>{let i=r.get(e);r.set(e,i.add(t))}))}for(let t=0;t<r.count;t++)r.set(t,r.get(t).normalize());return r}OLDcalculateFaceNormals(){let t=[];if(this.getType()!=n.Triangles)return console.error("can only calculate normals from triangular meshes"),t;let e=this.links.count();for(let r=0;r<e;r++){let e=this.getVerticesOfFace(r).toList(),i=e[1].subbed(e[0]).cross(e[2].subbed(e[0])).normalize();t.push(i)}return t}OLDcalculateVertexNormals(){let t=this.links.count(),e=this.OLDcalculateFaceNormals(),r=MultiVector3_MultiVector3.new(this.verts.count);for(let i=0;i<t;i++){let t=e[i];this.links.getRow(i).forEach((e=>{let i=r.get(e);r.set(e,i.add(t))}))}let i=r.toList();for(let t=0;t<i.length;t++)i[t].normalize();return i}ensureUVs(){return!(!this._uvs||this._uvs.count!=this.maxSize)||(this._uvs=MultiVector2_MultiVector2.new(this.maxSize),!1)}xPlane(t){if(3!=this.links._width)return D.error("intersection on quad based mesh not implemented..."),MultiLine.fromLines([]);let e,r=this.links.count(),i=MultiVector3_MultiVector3.new(2*r),s=0,o=Vector3_Vector3.zero(),n=Vector3_Vector3.zero(),a=Vector3_Vector3.zero(),h=Vector3_Vector3.zero(),l=Vector3_Vector3.zero(),d=t.khat,c=t.center,u=!1;for(let t=0;t<r;t++){e=void 0,u=!1;for(let r=0;r<3;r++){if(u)continue;let m=(r+1)%3,f=this.links.get(t,r),g=this.links.get(t,m);this.verts.getCopy(o,f),this.verts.getCopy(n,g),h.copy(o).sub(n),l.copy(o).sub(c);let p=h.dot(d);if(0==p)continue;let w=d.dot(l)/p;w<0||w>1||(e?(i.set(s,e),i.set(s+1,a.copy(o).lerp(n,w)),s+=2,u=!0):(a.copy(o).lerp(n,w),e=a))}}return i=MultiVector3_MultiVector3.fromData(i.matrix.data.slice(0,3*s)),MultiLine.fromLines(i)}}const h=[[0,1,3,2],[4,0,2,6],[1,0,4,5],[1,5,7,3],[2,3,7,6],[5,4,6,7]];function quadToTri(t){return[t[0],t[2],t[1],t[0],t[3],t[2]]}class Loft extends BiSurface{constructor(t){super(),this.curves=t}static new(t){return new Loft(Bezier.equalizeDegrees(t))}getTransposedCurves(){let t=[],e=this.curves[0].verts.count,r=this.curves.length;for(let i=0;i<e;i++){let e=MultiVector3_MultiVector3.new(this.curves.length);for(let t=0;t<r;t++)e.set(t,this.curves[t].verts.get(i));t.push(Bezier.new(e))}return t}pointAt(t,e){return this.isoCurveV(t).pointAt(e)}isoCurveV(t){return Loft.isoCurve(this.curves,t)}isoCurveU(t){let e=this.getTransposedCurves();return Loft.isoCurve(e,t)}static isoCurve(t,e){let r=MultiVector3_MultiVector3.new(t.length);for(let i=0;i<t.length;i++)r.set(i,t[i].pointAt(e));return Bezier.new(r)}bufferExact(){let t=[];for(let e of this.curves)e instanceof Polyline&&t.push(e.verts.count-1);let e=t.reduce(((t,e)=>t*e));return Mesh_Mesh.fromBiSurface(this,e,e)}clone(){let t=new Array;for(let e=0;e<this.curves.length;e++)t[e]=this.curves[e].clone();return Loft.new(t)}transform(t){for(let e of this.curves)e.transform(t);return this}transformed(t){let e=new Array;for(let r=0;r<this.curves.length;r++)e[r]=this.curves[r].transformed(t);return Loft.new(e)}}class HashTable_HashTable{constructor(){this.data=new Map}stringify(t){return t.toString()}set(t,e){return this.data.set(this.stringify(t),e)}has(t){return this.data.has(this.stringify(t))}get(t){return this.data.get(this.stringify(t))}}class Graph{constructor(){this.verts=[],this.edges=[]}static new(){return new Graph}static fromMesh(t){let e=Graph.new(),r=t.OLDcalculateVertexNormals();t.verts.forEach(((t,i)=>{e.addVert(t,r[i])}));let i=t.getType();if(i==n.Invalid||i==n.Points)return e;new HashTable_HashTable;let s=t.links._width;return t.links.forEachRow(((t,r)=>{for(let r=0;r<s;r++){let i=(r+1)%s,o=t[r],n=t[i];-1!=o&&-1!=n&&e.addEdgeIfNew(o,n)}})),e}clone(){throw new Error("not yet implemented...")}transform(t){for(let e=0;e<this.verts.length;e++){let r=this.verts[e];r.pos=t.multiplyVector(r.pos)}}print(){console.log("graph"),console.log("--------"),console.log(`${this.verts.length} verts: `);for(let t=0;t<this.verts.length;t++){let e=this.verts[t];console.log(`v(${t}) | edge: ${e.edge}, data: ${e.pos.toString()} normal: ${e.normal.toString()}`)}console.log("--------"),console.log(`${this.edges.length} edges:  `);for(let t=0;t<this.edges.length;t++){let e=this.edges[t];console.log(`e(${t}) | vert: ${e.vert}, twin: ${e.twin}, next: ${e.next}, dead ${e.dead}`)}console.log("--------")}toMesh(){return Mesh_Mesh.fromGraph(this)}toLines(){return Mesh_Mesh.newLines(this.allVertPositions(),this.allUniqueEdgeVerts())}toShaderMesh(){return ShaderMesh_ShaderMesh.fromGraph(this)}allNorms(){let t=[];return this.verts.forEach((e=>{t.push(e.normal)})),t}allVertPositions(){let t=[];return this.verts.forEach((e=>{t.push(e.pos)})),t}allUniqueEdges(){let t=[],e=this.edges.length/2;for(let r=0;r<e;r++){let e=2*r,i=2*r+1,s=this.getEdge(e),o=this.getEdge(i);s.dead||o.dead||t.push(e)}return t}allUniqueEdgeVerts(){let t=[],e=this.edges.length/2;for(let r=0;r<e;r++){let e=2*r,i=2*r+1,s=this.getEdge(e),o=this.getEdge(i);s.dead||o.dead||t.push(s.vert,o.vert)}return t}allEdgeVerts(){let t=[];return this.edges.forEach(((e,r)=>{if(e.dead)return;let i=e.vert,s=this.getEdge(e.twin).vert;i<s&&(t.push(i),t.push(s))})),t}allVertLoops(){throw"TODO"}allVertLoopsAsInts(){let t=[],e=new Set;this.edges.forEach(((t,r)=>{t.dead||e.add(r)}));let r=0;const i=this.edges.length;for(;e.size>0;){let s=[],o=e.entries().next().value[0],n=o;do{if(r>i)throw"topology is corrupt!";r+=1;let t=this.getEdge(o);e.delete(o),s.push(t.vert),o=t.next}while(o!=n);t.push(s)}return t}getLoop(t){let e=[],r=0;const i=this.edges.length;let s=t;do{if(r>i)throw"topology is corrupt!";r+=1;let s=this.getEdge(t);e.push(t),t=s.next}while(t!=s);return e}getVertexPos(t){if(t<0||t>=this.verts.length)throw"out of range";return this.verts[t].pos}getVertexNormal(t){if(t<0||t>=this.verts.length)throw"out of range";return this.verts[t].normal}getVertexCount(){return this.verts.length}getHalfEdgeCount(){return this.edges.length}changeVertex(t,e,r){let i=this.verts[t];i.pos=e,i.normal=r}getVert(t){if(t<0||t>=this.verts.length)throw"out of range";return this.verts[t]}getEdge(t){return(t<0||t>=this.edges.length)&&console.error("out of range"),this.edges[t]}getEdgeIndexBetween(t,e){let r=this.getEdgeBetween(t,e);if(r)return this.getEdgeIndex(r)}getEdgeBetween(t,e){let r=this.getVertEdgeFan(t);for(let t=0;t<r.length;t++)if(this.getEdge(r[t].twin).vert==e)return r[t]}getVertEdgeFan(t){let e=[],r=this.verts[t].edge,i=r;if(-1==r)return e;let s=0;for(;;){if(s>this.verts.length)throw this.print(),console.log("fan: ",e),"nope";s+=1;let t=this.getEdge(r),o=this.getEdgeTwin(r);if(e.push(t),r=o.next,r==i)break}return e}getLoopsAdjacentToEdge(t){let e=[];return e.push(this.getLoop(t)),e.push(this.getLoop(this.getEdge(t).twin)),e}getVertNeighbors(t){let e=[];return this.getVertEdgeFan(t).forEach((t=>{e.push(this.getEdge(t.twin).vert)})),e}getEdgeIndex(t){return this.getEdge(t.twin).twin}getEdgeTwin(t){return this.edges[this.edges[t].twin]}hasEdge(t,e){return this.getVertNeighbors(t).includes(e)}addVert(t,e){return this.verts.push({pos:t,edge:-1,normal:e,dead:!1}),this.verts.length-1}removeVert(t){throw"TODO FIGURE OUT NULL & REMOVAL"}addEdgeIfNew(t,e){return!this.hasEdge(t,e)&&(this.addEdge(t,e),!0)}addEdge(t,e){let r=this.edges.length,i=r+1;this.edges.push({next:-1,twin:i,vert:t,dead:!1}),this.edges.push({next:-1,twin:r,vert:e,dead:!1}),this.addEdgeToDisk(t,r),this.addEdgeToDisk(e,i)}deleteEdgeByIndex(t){this.deleteEdge(this.getEdge(t))}deleteEdge(t){let e=this.getEdge(t.twin);t.dead=!0,e.dead=!0,this.deleteEdgeFromDisk(t),this.deleteEdgeFromDisk(e)}getDiskPositions(t){let e=this.getEdge(t),r=this.getVert(e.vert),i=this.getEdgeTwin(t),s=this.verts[i.vert],o=r.pos.subbed(s.pos),n=[];n.push(o);let a=this.getVertEdgeFan(e.vert),h=[];for(let e=0;e<a.length;e++){let r=a[e];this.getEdgeIndex(r)==t||h.push(r)}if(0==h.length)return[t,t];if(1==h.length){let t=h[0];return[this.getEdgeIndex(t),this.getEdgeIndex(t)]}for(let t=0;t<h.length;t++){let e=h[t],i=this.getEdge(e.twin),s=this.verts[i.vert],o=r.pos.subbed(s.pos);n.push(o)}let l=Plane_Plane.fromPN(r.pos,r.normal),d=l.ihat,c=l.jhat,u=Vector3_Vector3.calculateWheelOrder(n,d,c),m=-1,f=-1;for(let t=0;t<u.length;t++){let e=(t+1)%u.length,r=(t+2)%u.length;if(0==u[e]){m=u[t],f=u[r];break}}let g=h[f-1],p=h[m-1];return[this.getEdgeIndex(g),this.getEdgeIndex(p)]}addEdgeToDisk(t,e){let r=this.getVert(t),i=this.getEdgeTwin(e);if(-1==r.edge)r.edge=e,i.next=e;else{let[t,r]=this.getDiskPositions(e),[s,o]=[this.getEdge(t),this.getEdge(r)];this.getEdge(s.twin).next=e,i.next=this.getEdgeIndex(o)}}deleteEdgeFromDisk(t){let e=this.getEdgeIndex(t),r=this.getVert(t.vert),[i,s]=this.getDiskPositions(e);if(i==e)return void(r.edge=-1);let[o,n]=[this.getEdge(i),this.getEdge(s)];this.getEdge(o.twin).next=s,r.edge==e&&(r.edge=s)}splitEdge(t,e,r){let i=this.getEdgeBetween(t,e);if(!i)throw new Error(`No Edge found between ${t} and ${e}`);this.getEdge(i.twin);let s=this.getVert(t),o=this.getVert(e),n=Vector3_Vector3.fromLerp(s.pos,o.pos,r),a=Vector3_Vector3.fromLerp(s.normal,o.normal,r),h=this.addVert(n,a);this.getVert(h);return this.deleteEdge(i),this.addEdge(t,h),this.addEdge(h,e),h}subdivide(){let t=this.allEdgeVerts(),e=this.allVertLoopsAsInts(),r=new HashTable_HashTable,i=t.length/2,s=new Array(i);for(let e=0;e<i;e++){let i=t[2*e],o=t[2*e+1],n=this.splitEdge(i,o,.5);s[e]=n,r.set([i,o],n),r.set([o,i],n)}for(let t=0;t<e.length;t++){let i=e[t],s=new Array(i.length);for(let t=0;t<i.length;t++){let e=(t+1)%i.length,o=i[t],n=i[e];s[t]=r.get([o,n])}for(let t=0;t<i.length;t++){let e=(t+1)%i.length;this.addEdge(s[t],s[e])}}}subdivideQuad(){let t=this.allEdgeVerts(),e=this.allVertLoopsAsInts(),r=new HashTable_HashTable,i=t.length/2;for(let e=0;e<i;e++){let i=t[2*e],s=t[2*e+1],o=this.splitEdge(i,s,.5);r.set([i,s],o),r.set([s,i],o)}for(let t=0;t<e.length;t++){let i=e[t],s=Vector3_Vector3.zero();for(let t=0;t<i.length;t++)s.add(this.getVertexPos(i[t]));s.scale(1/i.length);let o=calcPlanarFaceNormal(i.map((t=>this.getVertexPos(t)))),n=this.addVert(s,o);for(let t=0;t<i.length;t++){let e=(t+1)%i.length,s=i[t],o=i[e],a=r.get([s,o]);this.addEdge(n,a)}}}forEveryEdgeVerts(t){let e=this.allUniqueEdgeVerts(),r=e.length/2;for(let i=0;i<r;i++){let r=this.getVert(e[2*i]),s=this.getVert(e[2*i+1]);t(r.pos,s.pos)}}}function calcPlanarFaceNormal(t){let e=t.length;if(e<3)throw"cannot get face planar with 2 or less edges";Vector3_Vector3.zero();let r=t[1].subbed(t[0]),i=t[2].subbed(t[1]);for(let s=1;s<e;s++){if(Math.abs(r.dot(i))>Const_Const.TOLERANCE)return r.cross(i);{let r=(s+1)%e;i=t[(s+2)%e].subbed(t[r])}}throw"get planar face failed..."}class Color{constructor(t){this.data=t}get r(){return this.data[0]}get g(){return this.data[1]}get b(){return this.data[2]}get a(){return this.data[3]}set r(t){this.data[0]=t}set g(t){this.data[1]=t}set b(t){this.data[2]=t}set a(t){this.data[3]=t}static new(){return new Color([1,1,1,1])}static fromHex(t){let e=(t=t.replace("#","")).match(/.{1,2}/g);if(!e)return void console.warn(`couldnt convert hex ${t} to color`);let r=[];for(let t of e){let e=parseInt(t,16);if(void 0===e)return void console.warn(`couldnt convert hex ${t} to color`);r.push(e/255)}return Color.fromRGB(...r)}static fromRGB(t=1,e=1,r=1,i=1){return new Color([t,e,r,i])}static fromList(t){if(3==t.length)return new Color(t)}static fromHSL(t,e=1,r=.5,i=1){let s,o,n;if(0==e)s=o=n=r;else{let hue2rgb=(t,e,r)=>(r<0&&(r+=1),r>1&&(r-=1),r<1/6?t+6*(e-t)*r:r<.5?e:r<2/3?t+(e-t)*(2/3-r)*6:t),i=r<.5?r*(1+e):r+e-r*e,a=2*r-i;s=hue2rgb(a,i,t+1/3),o=hue2rgb(a,i,t),n=hue2rgb(a,i,t-1/3)}return Color.fromRGB(s,o,n,i)}static fromInt(t){return new Color(t.map((t=>t/255)))}static isTheSame(t,e){return t[0]==e[0]&&t[1]==e[1]&&t[2]==e[2]}toInt(){let process=t=>Math.round(255*t);return[process(this.r),process(this.g),process(this.b),process(this.a)]}toHex8(){let process=t=>{let e=Math.round(255*t).toString(16);return e=1==e.length?"0"+e:e,e};return`#${process(this.r)}${process(this.g)}${process(this.b)}${process(this.a)}`}toHex6(){let process=t=>{let e=Math.round(255*t).toString(16);return e=1==e.length?"0"+e:e,e};return`#${process(this.r)}${process(this.g)}${process(this.b)}`}}const l={aliceblue:Color.fromHex("#f0f8ff"),antiquewhite:Color.fromHex("#faebd7"),aqua:Color.fromHex("#00ffff"),aquamarine:Color.fromHex("#7fffd4"),azure:Color.fromHex("#f0ffff"),beige:Color.fromHex("#f5f5dc"),bisque:Color.fromHex("#ffe4c4"),black:Color.fromHex("#000000"),blanchedalmond:Color.fromHex("#ffebcd"),blue:Color.fromHex("#0000ff"),blueviolet:Color.fromHex("#8a2be2"),brown:Color.fromHex("#a52a2a"),burlywood:Color.fromHex("#deb887"),cadetblue:Color.fromHex("#5f9ea0"),chartreuse:Color.fromHex("#7fff00"),chocolate:Color.fromHex("#d2691e"),coral:Color.fromHex("#ff7f50"),cornflowerblue:Color.fromHex("#6495ed"),cornsilk:Color.fromHex("#fff8dc"),crimson:Color.fromHex("#dc143c"),cyan:Color.fromHex("#00ffff"),darkblue:Color.fromHex("#00008b"),darkcyan:Color.fromHex("#008b8b"),darkgoldenrod:Color.fromHex("#b8860b"),darkgray:Color.fromHex("#a9a9a9"),darkgreen:Color.fromHex("#006400"),darkgrey:Color.fromHex("#a9a9a9"),darkkhaki:Color.fromHex("#bdb76b"),darkmagenta:Color.fromHex("#8b008b"),darkolivegreen:Color.fromHex("#556b2f"),darkorange:Color.fromHex("#ff8c00"),darkorchid:Color.fromHex("#9932cc"),darkred:Color.fromHex("#8b0000"),darksalmon:Color.fromHex("#e9967a"),darkseagreen:Color.fromHex("#8fbc8f"),darkslateblue:Color.fromHex("#483d8b"),darkslategray:Color.fromHex("#2f4f4f"),darkslategrey:Color.fromHex("#2f4f4f"),darkturquoise:Color.fromHex("#00ced1"),darkviolet:Color.fromHex("#9400d3"),deeppink:Color.fromHex("#ff1493"),deepskyblue:Color.fromHex("#00bfff"),dimgray:Color.fromHex("#696969"),dimgrey:Color.fromHex("#696969"),dodgerblue:Color.fromHex("#1e90ff"),firebrick:Color.fromHex("#b22222"),floralwhite:Color.fromHex("#fffaf0"),forestgreen:Color.fromHex("#228b22"),fuchsia:Color.fromHex("#ff00ff"),gainsboro:Color.fromHex("#dcdcdc"),ghostwhite:Color.fromHex("#f8f8ff"),goldenrod:Color.fromHex("#daa520"),gold:Color.fromHex("#ffd700"),gray:Color.fromHex("#808080"),green:Color.fromHex("#008000"),greenyellow:Color.fromHex("#adff2f"),grey:Color.fromHex("#808080"),honeydew:Color.fromHex("#f0fff0"),hotpink:Color.fromHex("#ff69b4"),indianred:Color.fromHex("#cd5c5c"),indigo:Color.fromHex("#4b0082"),ivory:Color.fromHex("#fffff0"),khaki:Color.fromHex("#f0e68c"),lavenderblush:Color.fromHex("#fff0f5"),lavender:Color.fromHex("#e6e6fa"),lawngreen:Color.fromHex("#7cfc00"),lemonchiffon:Color.fromHex("#fffacd"),lightblue:Color.fromHex("#add8e6"),lightcoral:Color.fromHex("#f08080"),lightcyan:Color.fromHex("#e0ffff"),lightgoldenrodyellow:Color.fromHex("#fafad2"),lightgray:Color.fromHex("#d3d3d3"),lightgreen:Color.fromHex("#90ee90"),lightgrey:Color.fromHex("#d3d3d3"),lightpink:Color.fromHex("#ffb6c1"),lightsalmon:Color.fromHex("#ffa07a"),lightseagreen:Color.fromHex("#20b2aa"),lightskyblue:Color.fromHex("#87cefa"),lightslategray:Color.fromHex("#778899"),lightslategrey:Color.fromHex("#778899"),lightsteelblue:Color.fromHex("#b0c4de"),lightyellow:Color.fromHex("#ffffe0"),lime:Color.fromHex("#00ff00"),limegreen:Color.fromHex("#32cd32"),linen:Color.fromHex("#faf0e6"),magenta:Color.fromHex("#ff00ff"),maroon:Color.fromHex("#800000"),mediumaquamarine:Color.fromHex("#66cdaa"),mediumblue:Color.fromHex("#0000cd"),mediumorchid:Color.fromHex("#ba55d3"),mediumpurple:Color.fromHex("#9370db"),mediumseagreen:Color.fromHex("#3cb371"),mediumslateblue:Color.fromHex("#7b68ee"),mediumspringgreen:Color.fromHex("#00fa9a"),mediumturquoise:Color.fromHex("#48d1cc"),mediumvioletred:Color.fromHex("#c71585"),midnightblue:Color.fromHex("#191970"),mintcream:Color.fromHex("#f5fffa"),mistyrose:Color.fromHex("#ffe4e1"),moccasin:Color.fromHex("#ffe4b5"),navajowhite:Color.fromHex("#ffdead"),navy:Color.fromHex("#000080"),oldlace:Color.fromHex("#fdf5e6"),olive:Color.fromHex("#808000"),olivedrab:Color.fromHex("#6b8e23"),orange:Color.fromHex("#ffa500"),orangered:Color.fromHex("#ff4500"),orchid:Color.fromHex("#da70d6"),palegoldenrod:Color.fromHex("#eee8aa"),palegreen:Color.fromHex("#98fb98"),paleturquoise:Color.fromHex("#afeeee"),palevioletred:Color.fromHex("#db7093"),papayawhip:Color.fromHex("#ffefd5"),peachpuff:Color.fromHex("#ffdab9"),peru:Color.fromHex("#cd853f"),pink:Color.fromHex("#ffc0cb"),plum:Color.fromHex("#dda0dd"),powderblue:Color.fromHex("#b0e0e6"),purple:Color.fromHex("#800080"),rebeccapurple:Color.fromHex("#663399"),red:Color.fromHex("#ff0000"),rosybrown:Color.fromHex("#bc8f8f"),royalblue:Color.fromHex("#4169e1"),saddlebrown:Color.fromHex("#8b4513"),salmon:Color.fromHex("#fa8072"),sandybrown:Color.fromHex("#f4a460"),seagreen:Color.fromHex("#2e8b57"),seashell:Color.fromHex("#fff5ee"),sienna:Color.fromHex("#a0522d"),silver:Color.fromHex("#c0c0c0"),skyblue:Color.fromHex("#87ceeb"),slateblue:Color.fromHex("#6a5acd"),slategray:Color.fromHex("#708090"),slategrey:Color.fromHex("#708090"),snow:Color.fromHex("#fffafa"),springgreen:Color.fromHex("#00ff7f"),steelblue:Color.fromHex("#4682b4"),tan:Color.fromHex("#d2b48c"),teal:Color.fromHex("#008080"),thistle:Color.fromHex("#d8bfd8"),tomato:Color.fromHex("#ff6347"),turquoise:Color.fromHex("#40e0d0"),violet:Color.fromHex("#ee82ee"),wheat:Color.fromHex("#f5deb3"),white:Color.fromHex("#ffffff"),whitesmoke:Color.fromHex("#f5f5f5"),yellow:Color.fromHex("#ffff00"),yellowgreen:Color.fromHex("#9acd32")};var d,c,u,m,f;!function(t){t[t.A=0]="A",t[t.B=1]="B",t[t.C=2]="C",t[t.D=3]="D",t[t.E=4]="E",t[t.F=5]="F",t[t.G=6]="G",t[t.H=7]="H",t[t.I=8]="I",t[t.J=9]="J",t[t.K=10]="K",t[t.L=11]="L",t[t.M=12]="M",t[t.N=13]="N",t[t.O=14]="O",t[t.P=15]="P",t[t.Q=16]="Q",t[t.R=17]="R",t[t.S=18]="S",t[t.T=19]="T",t[t.U=20]="U",t[t.V=21]="V",t[t.W=22]="W",t[t.X=23]="X",t[t.Y=24]="Y",t[t.Z=25]="Z",t[t.Up=26]="Up",t[t.Down=27]="Down",t[t.Left=28]="Left",t[t.Right=29]="Right",t[t.Space=30]="Space",t[t.Control=31]="Control",t[t.Alt=32]="Alt",t[t.Shift=33]="Shift",t[t.Enter=34]="Enter",t[t.Esc=35]="Esc",t[t.N1=36]="N1",t[t.N2=37]="N2",t[t.N3=38]="N3",t[t.N4=39]="N4",t[t.N5=40]="N5",t[t.N6=41]="N6",t[t.N7=42]="N7",t[t.N8=43]="N8",t[t.N9=44]="N9",t[t.N0=45]="N0",t[t.Plus=46]="Plus",t[t.Minus=47]="Minus",t[t.Backspace=48]="Backspace"}(d||(d={}));!function(t){t.range=function range(t){let e=Array(t);for(let r=0;r<t;r++)e[r]=r;return e},t.isUserMobile=function isUserMobile(){return/Mobi|Android/i.test(navigator.userAgent)}}(c||(c={}));class KeyboardHandler{constructor(t,e=new Set,r=new Set,i=new Array,s=new Set,o=new Map,n=new Map,a=new Map){this.context=t,this.keysDownPrev=e,this.keysDown=r,this.keysDownNew=i,this.keysDownWithAction=s,this.keyPressedActions=o,this.keyDownActions=n,this.keyUpActions=a,this.start()}static new(t){return new KeyboardHandler(window)}update(){this.keysDownPrev.clear();for(let t of this.keysDown)this.keysDownPrev.add(t);for(let t of this.keysDownNew)this.keysDown.add(t);this.keysDownNew=[];for(let t of this.keysDownWithAction)this.keyDownActions.get(t)()}postUpdate(){}isDown(t){return this.keysDown.has(t)}isPressed(t){return this.keysDown.has(t)&&!this.keysDownPrev.has(t)}onDown(t,e){this.keyDownActions.set(t,e)}onPressed(t,e){this.keyPressedActions.set(t,e)}onUp(t,e){this.keyUpActions.set(t,e)}removeDown(t){this.keyDownActions.delete(t)}removePressed(t){this.keyPressedActions.delete(t)}removeUp(t){this.keyUpActions.delete(t)}start(){let t=this.context;t.addEventListener("keydown",(t=>this.onDomEventKeyDown(t))),t.addEventListener("keyup",(t=>this.onDomEventKeyUp(t))),t.addEventListener("blur",(t=>this.onDomEventBlur())),t.addEventListener("focus",(t=>this.onDomEventFocus()))}onDomEventKeyDown(t){let e=t.keyCode;if(this.keysDownNew.push(e),this.keysDownWithAction.has(e))return;let r=this.keyPressedActions.get(e);r&&r(),this.keyDownActions.has(e)&&this.keysDownWithAction.add(e)}onDomEventKeyUp(t){let e=t.keyCode;this.keysDownWithAction.delete(e),this.keysDown.delete(e);let r=this.keyUpActions.get(e);r&&r()}onDomEventBlur(){this.keysDownWithAction.clear(),this.keysDown.clear()}onDomEventFocus(){}}class MouseHandler{constructor(t,e,r){this.context=t,this.width=e,this.height=r,this.pos=Vector2_Vector2.zero(),this.delta=Vector2_Vector2.zero(),this.posBefore=Vector2_Vector2.zero(),this.leftDown=!1,this.middleDown=!1,this.rightDown=!1,this.scrollNew=0,this.scrollDelta=0,this.middleDownBefore=!1,this.rightDownBefore=!1,this.leftDownBefore=!1,this.start()}static new(t,e,r){return new MouseHandler(t,e,r)}start(){let t=this.context;document.addEventListener("mousedown",(t=>this.onDomEventMouseDown(t))),document.addEventListener("mouseup",(t=>this.onDomEventMouseUp(t))),document.addEventListener("mousemove",(t=>this.onDomEventMouseMove(t))),document.addEventListener("contextmenu",(t=>{t.preventDefault(),t.stopPropagation()})),document.addEventListener("wheel",(t=>this.onDomEventWheel(t))),t.addEventListener("blur",(()=>this.onDomEventBlur())),t.addEventListener("focus",(()=>this.onDomEventFocus()))}update(){if(0!=this.scrollNew){let t=.1;this.scrollNew<0&&(t=-.1),this.scrollDelta=t,this.scrollNew=0}else this.scrollDelta=0}postUpdate(){this.leftDownBefore=this.leftDown,this.rightDownBefore=this.rightDown,this.middleDownBefore=this.middleDown}get leftPressed(){return this.leftDown&&!this.leftDownBefore}get rightPressed(){return this.rightDown&&!this.rightDownBefore}get middlePressed(){return this.middleDown&&!this.middleDownBefore}onDomEventMouseDown(t){t.preventDefault(),t.stopPropagation(),this.context.focus();let e=t.buttons;return e>=4&&(e-=4,!this.middleDown&&this.onMiddlePressed&&this.onMiddlePressed(t),this.middleDown=!0),e>=2&&(e-=2,!this.rightDown&&this.onRightPressed&&this.onRightPressed(t),this.rightDown=!0),e>=1&&(e-=1,!this.leftDown&&this.onLeftPressed&&this.onLeftPressed(t),this.leftDown=!0),!1}onDomEventMouseUp(t){let e=t.buttons;e<4&&(this.middleDown=!1,this.onMiddleUp&&this.onMiddleUp(t)),e<2&&(this.rightDown=!1,this.onRightUp&&this.onRightUp(t)),e<1&&(this.leftDown=!1,this.onLeftUp&&this.onLeftUp(t))}onDomEventMouseMove(t){this.pos.x=t.clientX,this.pos.y=t.clientY}onDomEventWheel(t){this.scrollNew=t.deltaY}onDomEventBlur(){}onDomEventFocus(){}}class TimeHandler{constructor(){this.start()}static new(){return new TimeHandler}start(){this.tick=0,this.oldTime=Date.now(),this.newTime=this.oldTime,this.startTime=this.oldTime}update(){this.newTime=Date.now(),this.tick=this.newTime-this.oldTime,this.oldTime=this.newTime}}class TouchFinger{constructor(){this.pos=Vector2_Vector2.zero(),this.delta=Vector2_Vector2.zero(),this.down=!1,this.posBefore=Vector2_Vector2.zero(),this.downBefore=!1,this.lastId=0,this.downNew=!1,this.posNew=Vector2_Vector2.zero()}static new(){return new TouchFinger}get pressed(){return this.down&&!this.downBefore}get released(){return!this.down&&this.downBefore}update(){this.downBefore=this.down,this.down=this.downNew,this.posBefore.copy(this.pos),this.pos.copy(this.posNew),this.delta.copy(this.posBefore).sub(this.pos)}_updatePressed(t){this.event=t,this.downNew=!0}_updateReleased(t){this.event=void 0,this.downNew=!1,this.lastId=t.pointerId}_updatePos(t){let e=!1;return this.posNew.set(t.clientX,t.clientY),this.lastId!=t.pointerId&&(this.pos.set(t.clientX,t.clientY),e=!0),this.lastId=t.pointerId,e}}class TouchHandler{constructor(t,e,r){this.context=t,this.width=e,this.height=r,this.fingers=[TouchFinger.new(),TouchFinger.new(),TouchFinger.new(),TouchFinger.new(),TouchFinger.new()],this.down=0,this.downTime=0,this.zoomScore=0,this.distance=0,this.zoomDelta=0,this.newDistance=0,this.start()}static new(t,e,r){return new TouchHandler(t,e,r)}start(){let t=this.context;t instanceof HTMLElement&&(t.style.touchAction="none"),t.onpointerdown=this.onAddFinger.bind(this),t.onpointermove=this.onUpdateFinger.bind(this),t.onpointerup=this.onRemoveFinger.bind(this),t.onpointercancel=this.onRemoveFinger.bind(this),t.onpointerout=this.onRemoveFinger.bind(this),t.onpointerleave=this.onRemoveFinger.bind(this)}update(t){this.updateFingers(),this.updateDown(t),this.updateZoom()}postUpdate(){}get tab(){return 5==this.down&&this.fingers[4].pressed}updateFingers(){for(let t of this.fingers)t.update()}updateDown(t){this.down=0;for(let t of this.fingers)t.down&&(this.down+=1);this.down>0?this.downTime+=t:this.downTime=0}updateZoom(){this.down<2||(this.zoomDelta=this.distance-this.newDistance,this.distance=this.newDistance,this.zoomScore+=this.zoomDelta)}onAddFinger(t){for(let e of this.fingers)if(!e.event)return void e._updatePressed(t)}onRemoveFinger(t){var e;for(let r of this.fingers)if((null===(e=r.event)||void 0===e?void 0:e.pointerId)==t.pointerId)return void r._updateReleased(t)}onUpdateFinger(t){var e;let r=!1;for(let i of this.fingers)if((null===(e=i.event)||void 0===e?void 0:e.pointerId)==t.pointerId){r=i._updatePos(t);break}this.newDistance=this.fingers[0].pos.disTo(this.fingers[1].pos),r&&(this.distance=this.newDistance)}}!function(t){t[t.Mouse=0]="Mouse",t[t.Touch=1]="Touch"}(u||(u={}));class InputHandler{constructor(t,e,r,i,s,o,n,a,h){this.context=t,this.width=e,this.height=r,this.time=i,this.keys=s,this.mouse=o,this.touch=n,this.pointer=a,this.pointerType=h}static fromCanvas(t){return InputHandler.new(t,t.clientWidth,t.clientHeight)}static new(t,e,r){let i=TimeHandler.new(),s=c.isUserMobile();if(console.log({isMobile:s}),s){let s=TouchHandler.new(t,e,r);return new InputHandler(t,e,r,i,void 0,void 0,s,s,u.Touch)}let o=KeyboardHandler.new(t),n=MouseHandler.new(t,e,r);return new InputHandler(t,e,r,i,o,n,void 0,n,u.Mouse)}update(){var t;this.time.update(),null===(t=this.keys)||void 0===t||t.update(),this.pointer.update(this.time.tick)}postUpdate(){var t;null===(t=this.keys)||void 0===t||t.postUpdate(),this.pointer.postUpdate()}}!function(t){t[t.Backspace=8]="Backspace",t[t.Tab=9]="Tab",t[t.Enter=13]="Enter",t[t.Shift=16]="Shift",t[t.Ctrl=17]="Ctrl",t[t.Alt=18]="Alt",t[t.PauseBreak=19]="PauseBreak",t[t.CapsLock=20]="CapsLock",t[t.Escape=27]="Escape",t[t.Space=32]="Space",t[t.PageUp=33]="PageUp",t[t.PageDown=34]="PageDown",t[t.End=35]="End",t[t.Home=36]="Home",t[t.LeftArrow=37]="LeftArrow",t[t.UpArrow=38]="UpArrow",t[t.RightArrow=39]="RightArrow",t[t.DownArrow=40]="DownArrow",t[t.Insert=45]="Insert",t[t.Delete=46]="Delete",t[t.Zero=48]="Zero",t[t.One=49]="One",t[t.Two=50]="Two",t[t.Three=51]="Three",t[t.Four=52]="Four",t[t.Five=53]="Five",t[t.Six=54]="Six",t[t.Seven=55]="Seven",t[t.Eight=56]="Eight",t[t.Nine=57]="Nine",t[t.A=65]="A",t[t.B=66]="B",t[t.C=67]="C",t[t.D=68]="D",t[t.E=69]="E",t[t.F=70]="F",t[t.G=71]="G",t[t.H=72]="H",t[t.I=73]="I",t[t.J=74]="J",t[t.K=75]="K",t[t.L=76]="L",t[t.M=77]="M",t[t.N=78]="N",t[t.O=79]="O",t[t.P=80]="P",t[t.Q=81]="Q",t[t.R=82]="R",t[t.S=83]="S",t[t.T=84]="T",t[t.U=85]="U",t[t.V=86]="V",t[t.W=87]="W",t[t.X=88]="X",t[t.Y=89]="Y",t[t.Z=90]="Z",t[t.LeftWindowKey=91]="LeftWindowKey",t[t.RightWindowKey=92]="RightWindowKey",t[t.SelectKey=93]="SelectKey",t[t.Numpad0=96]="Numpad0",t[t.Numpad1=97]="Numpad1",t[t.Numpad2=98]="Numpad2",t[t.Numpad3=99]="Numpad3",t[t.Numpad4=100]="Numpad4",t[t.Numpad5=101]="Numpad5",t[t.Numpad6=102]="Numpad6",t[t.Numpad7=103]="Numpad7",t[t.Numpad8=104]="Numpad8",t[t.Numpad9=105]="Numpad9",t[t.Multiply=106]="Multiply",t[t.Add=107]="Add",t[t.Subtract=109]="Subtract",t[t.DecimalPoint=110]="DecimalPoint",t[t.Divide=111]="Divide",t[t.F1=112]="F1",t[t.F2=113]="F2",t[t.F3=114]="F3",t[t.F4=115]="F4",t[t.F5=116]="F5",t[t.F6=117]="F6",t[t.F7=118]="F7",t[t.F8=119]="F8",t[t.F9=120]="F9",t[t.F10=121]="F10",t[t.F11=122]="F11",t[t.F12=123]="F12",t[t.NumLock=144]="NumLock",t[t.ScrollLock=145]="ScrollLock",t[t.SemiColon=186]="SemiColon",t[t.Equals=187]="Equals",t[t.Comma=188]="Comma",t[t.Dash=189]="Dash",t[t.Period=190]="Period",t[t.UnderScore=189]="UnderScore",t[t.PlusSign=187]="PlusSign",t[t.ForwardSlash=191]="ForwardSlash",t[t.Tilde=192]="Tilde",t[t.GraveAccent=192]="GraveAccent",t[t.OpenBracket=219]="OpenBracket",t[t.ClosedBracket=221]="ClosedBracket",t[t.Quote=222]="Quote"}(m||(m={}));class Random_Random{constructor(t,e,r,i){this.a=t,this.b=e,this.c=r,this.d=i}static new(t,e,r,i){return new Random_Random(t,e,r,i)}static randomSeed(){return 393847477636*Math.random()}static fromSeed(t){for(var e=3735928559^t,r=Random_Random.new(2654435769,608135816,3084996962,e),i=0;i<15;i++)r.get();return r}static fromRandom(){return this.fromSeed(103948857*Math.random())}static fromHash(t){var e=function xmur3(t){for(var e=0,r=1779033703^t.length;e<t.length;e++)r=(r=Math.imul(r^t.charCodeAt(e),3432918353))<<13|r>>>19;return function(){return r=Math.imul(r^r>>>16,2246822507),r=Math.imul(r^r>>>13,3266489909),(r^=r>>>16)>>>0}}(t);return this.new(e(),e(),e(),e())}get(){this.a>>>=0,this.b>>>=0,this.c>>>=0,this.d>>>=0;let t=this.a+this.b|0;return this.a=this.b^this.b>>>9,this.b=this.c+(this.c<<3)|0,this.c=this.c<<21|this.c>>>11,this.d=this.d+1|0,t=t+this.d|0,this.c=this.c+t|0,(t>>>0)/4294967296}int(t){return Math.floor(this.get()*t)}choose(t){return t[this.int(t.length)]}chooseWeighted(t,e){return t[this.weightedIndex(e)]}weightedIndex(t){let e=0;for(let r=0;r<t.length;r++)e+=t[r];let r=this.get()*e;for(let e=0;e<t.length;e++)if(r-=t[e],r<0)return e;return console.error("RANDOM: should never happen..."),0}}function createRandomGUID(){return function createGUID(t){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){var r=16*t.get()|0;return("x"==e?r:3&r|8).toString(16)}))}(Random_Random.fromRandom())}class Ray{constructor(t,e){this.origin=t,this.normal=e.normalize()}static fromNormal(t,e){return new Ray(t,e)}static fromPoints(t,e){return new Ray(t,e.subbed(t).normalize())}at(t){return this.origin.added(this.normal.scaled(t))}xPlane(t){return-(this.origin.dot(t.normal)+t.d)/this.normal.dot(t.normal)}toLine(t){let e=this.at(t);return MultiLine.fromLines([this.origin,e])}}!function(t){function sum(t){let e=0;for(let r=0;r<t.length;r++)e+=t[r];return e}function mean(t){return sum(t)/t.length}function variance(t){let e=t.length,r=mean(t),i=0;for(let s=0;s<e;s++)i+=Math.pow(t[s]-r,2);return i/(e-1)}function covariance(t,e){if(t.length!=e.length)throw"this is not how covariance works...";let r=t.length,i=mean(t),s=mean(e),o=0;for(let n=0;n<r;n++)o+=(t[n]-i)*(e[n]-s);return o/(r-1)}function svd(t){var e=Math.pow(2,-52),r=1e-64/e,i=0,s=0,o=0,n=0,a=0,h=t.clone().toNative(),l=h.length,d=h[0].length;if(l<d)throw"Need more rows than columns";var c=new Array(d),u=new Array(d);for(s=0;s<d;s++)c[s]=u[s]=0;var m=function rep(t,e,r=0){let i,s=t[r],o=Array(s);if(r===t.length-1){for(i=s-2;i>=0;i-=2)o[i+1]=e,o[i]=e;return-1===i&&(o[0]=e),o}for(i=s-1;i>=0;i--)o[i]=rep(t,e,r+1);return o}([d,d],0);function pythag(t,e){return(t=Math.abs(t))>(e=Math.abs(e))?t*Math.sqrt(1+e*e/t/t):0==e?t:e*Math.sqrt(1+t*t/e/e)}var f,g=0,p=0,w=0,x=0,_=0,M=0,v=0;for(s=0;s<d;s++){for(c[s]=p,v=0,a=s+1,o=s;o<l;o++)v+=h[o][s]*h[o][s];if(v<=r)p=0;else for(g=h[s][s],p=Math.sqrt(v),g>=0&&(p=-p),w=g*p-v,h[s][s]=g-p,o=a;o<d;o++){for(v=0,n=s;n<l;n++)v+=h[n][s]*h[n][o];for(g=v/w,n=s;n<l;n++)h[n][o]+=g*h[n][s]}for(u[s]=p,v=0,o=a;o<d;o++)v+=h[s][o]*h[s][o];if(v<=r)p=0;else{for(g=h[s][s+1],p=Math.sqrt(v),g>=0&&(p=-p),w=g*p-v,h[s][s+1]=g-p,o=a;o<d;o++)c[o]=h[s][o]/w;for(o=a;o<l;o++){for(v=0,n=a;n<d;n++)v+=h[o][n]*h[s][n];for(n=a;n<d;n++)h[o][n]+=v*c[n]}}(_=Math.abs(u[s])+Math.abs(c[s]))>x&&(x=_)}for(s=d-1;-1!=s;s+=-1){if(0!=p){for(w=p*h[s][s+1],o=a;o<d;o++)m[o][s]=h[s][o]/w;for(o=a;o<d;o++){for(v=0,n=a;n<d;n++)v+=h[s][n]*m[n][o];for(n=a;n<d;n++)m[n][o]+=v*m[n][s]}}for(o=a;o<d;o++)m[s][o]=0,m[o][s]=0;m[s][s]=1,p=c[s],a=s}for(s=d-1;-1!=s;s+=-1){for(a=s+1,p=u[s],o=a;o<d;o++)h[s][o]=0;if(0!=p){for(w=h[s][s]*p,o=a;o<d;o++){for(v=0,n=a;n<l;n++)v+=h[n][s]*h[n][o];for(g=v/w,n=s;n<l;n++)h[n][o]+=g*h[n][s]}for(o=s;o<l;o++)h[o][s]=h[o][s]/p}else for(o=s;o<l;o++)h[o][s]=0;h[s][s]+=1}for(e*=x,n=d-1;-1!=n;n+=-1)for(var V=0;V<50;V++){var y=!1;for(a=n;-1!=a;a+=-1){if(Math.abs(c[a])<=e){y=!0;break}if(Math.abs(u[a-1])<=e)break}if(!y){i=0,v=1;var b=a-1;for(s=a;s<n+1&&(g=v*c[s],c[s]=i*c[s],!(Math.abs(g)<=e));s++)for(w=pythag(g,p=u[s]),u[s]=w,i=p/w,v=-g/w,o=0;o<l;o++)_=h[o][b],M=h[o][s],h[o][b]=_*i+M*v,h[o][s]=-_*v+M*i}if(M=u[n],a==n){if(M<0)for(u[n]=-M,o=0;o<d;o++)m[o][n]=-m[o][n];break}if(V>=49)throw"Error: no convergence.";for(x=u[a],p=pythag(g=(((_=u[n-1])-M)*(_+M)+((p=c[n-1])-(w=c[n]))*(p+w))/(2*w*_),1),g=g<0?((x-M)*(x+M)+w*(_/(g-p)-w))/x:((x-M)*(x+M)+w*(_/(g+p)-w))/x,i=1,v=1,s=a+1;s<n+1;s++){for(p=c[s],_=u[s],w=v*p,p*=i,M=pythag(g,w),c[s-1]=M,g=x*(i=g/M)+p*(v=w/M),p=-x*v+p*i,w=_*v,_*=i,o=0;o<d;o++)x=m[o][s-1],M=m[o][s],m[o][s-1]=x*i+M*v,m[o][s]=-x*v+M*i;for(M=pythag(g,w),u[s-1]=M,g=(i=g/M)*p+(v=w/M)*_,x=-v*p+i*_,o=0;o<l;o++)_=h[o][s-1],M=h[o][s],h[o][s-1]=_*i+M*v,h[o][s]=-_*v+M*i}c[a]=0,c[n]=g,u[n]=x}for(s=0;s<u.length;s++)u[s]<e&&(u[s]=0);for(s=0;s<d;s++)for(o=s-1;o>=0;o--)if(u[o]<u[s]){for(i=u[o],u[o]=u[s],u[s]=i,n=0;n<h.length;n++)f=h[n][s],h[n][s]=h[n][o],h[n][o]=f;for(n=0;n<m.length;n++)f=m[n][s],m[n][s]=m[n][o],m[n][o]=f;s=o}let P=new Float32Array(u);return[FloatMatrix_FloatMatrix.fromNative(h),P,FloatMatrix_FloatMatrix.fromNative(m)]}function diagonalizeInverse(t,e){let r=FloatMatrix_FloatMatrix.zeros(e,e);for(let i=0;i<e;i++)r.set(i,i,1/t[i]);return r}t.sum=sum,t.mean=mean,t.meanWeighted=function meanWeighted(t,e){if(t.length!=e.length)throw new Error("values & weights need same length");var r=0,i=0;for(let s=0;s<t.length;s++)r+=t[s]*e[s],i+=e[s];return r/i},t.variance=variance,t.deviation=function deviation(t){return Math.pow(variance(t),.5)},t.covariance=covariance,t.cov=function cov(t){let e=t.width,r=new FloatMatrix_FloatMatrix(e,e),i=Array(e);for(let r=0;r<e;r++)i[r]=t.getColumn(r);for(let t=0;t<e;t++)for(let s=t;s<e;s++){let e=covariance(i[t],i[s]);r.set(t,s,e),r.set(s,t,e)}return r},t.eig=function eig(t){let e=svd(t);return[e[1],e[2]]},t.svd=svd,t.diagonalize=function diagonalize(t,e){let r=FloatMatrix_FloatMatrix.zeros(e,e);for(let i=0;i<e;i++)r.set(i,i,t[i]);return r},t.diagonalizeInverse=diagonalizeInverse,t.pinv=function pinv(t){let[e,r,i]=svd(t),s=diagonalizeInverse(r,Math.min(t.width,t.height)),o=FloatMatrix_FloatMatrix.mulBtoA;return o(e.tp(),o(s,i))},t.pinv2=function pinv2(t){console.log("PSEUDO INVERSE 2"),t.print();let[e,r,i]=svd(t),s=diagonalizeInverse(r,Math.min(t.width,t.height));console.log("[ PRINTING SVD: ]");let o=FloatMatrix_FloatMatrix.mulAtoB;e.print(),s.print(),i.print();let n=o(e,o(s,i));return n.print(),n}}(f||(f={}));class ImageMesh{constructor(t,e,r,i,s){this.image=t,this.plane=e,this.scale=r,this.centered=i,this.doubleSided=s}static new(t,e=Plane_Plane.WorldXY(),r=1,i=!0,s=!0){return new ImageMesh(t,e,r,i,s)}buffer(){return ShaderMesh_ShaderMesh.fromImage(this.image,this.plane,this.centered,this.scale,this.doubleSided)}}var g,p,w,x=0;!function(t){t[t.StreamDraw=35040]="StreamDraw",t[t.StaticDraw=35044]="StaticDraw",t[t.DynamicDraw=35048]="DynamicDraw"}(g||(g={})),function(t){function compileShader(t,e,r){let i=t.createShader(r);if(t.shaderSource(i,e),t.compileShader(i),!t.getShaderParameter(i,t.COMPILE_STATUS))throw"could not compile shader:"+e+t.getShaderInfoLog(i);return i}function createProgram(t,e,r){let i=t.createProgram();if(t.attachShader(i,e),t.attachShader(i,r),t.linkProgram(i),!t.getProgramParameter(i,t.LINK_STATUS))throw"program failed to link:"+t.getProgramInfoLog(i);return i}function getNearestCorrectTextureSize(t){let e=Math.log2(t);return Math.pow(2,Math.ceil(e))}t.clear=function clear(t){t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT)},t.getNextTextureID=function getNextTextureID(){let t=x;return x+=1,t},t.resizeViewportToCanvas=function resizeViewportToCanvas(t){let e=t.canvas;const r=e.clientWidth,i=e.clientHeight,s=t.canvas.width!==r||t.canvas.height!==i;return s&&(t.canvas.width=r,t.canvas.height=i),t.viewport(0,0,t.canvas.width,t.canvas.height),s},t.initWebglContext=function initWebglContext(t,e=!1){let r=t.getContext("webgl");if(null==r)return void alert("webgl unavailable...");let i=r;return i.enable(i.CULL_FACE),e?(i.enable(i.BLEND),i.enable(i.DEPTH_TEST),i.depthFunc(i.LEQUAL)):(i.disable(i.BLEND),i.enable(i.DEPTH_TEST),i.depthFunc(i.LEQUAL)),i.getExtension("OES_element_index_uint"),i.clearColor(0,0,0,1),i.clearDepth(1),i},t.compileShader=compileShader,t.createProgram=createProgram,t.createProgramFromScripts=function createProgramFromScripts(t,e,r){return createProgram(t,compileShader(t,e,t.VERTEX_SHADER),compileShader(t,r,t.FRAGMENT_SHADER))},t.getNearestCorrectTextureSize=getNearestCorrectTextureSize,t.fixTextureSizing=function fixTextureSizing(t){let e=getNearestCorrectTextureSize(t.width),r=getNearestCorrectTextureSize(t.height);if(e!==t.width||r!==t.height){console.log("resizing to ",e,r);t.width,t.height;return t.buffer(e,r)}return t},t.resetDrawTarget=function resetDrawTarget(e){e.bindFramebuffer(e.FRAMEBUFFER,null),t.resizeViewportToCanvas(e)},t.setDrawTarget=function setDrawTarget(e,r,i,s){e.bindFramebuffer(e.FRAMEBUFFER,r),e.viewport(0,0,i,s),t.clear(e)}}(p||(p={}));class Attribute{constructor(t,e,r,i,s){this.gl=t,this.buffer=e,this.position=r,this.width=i,this.type=s}static new(t,e,r,i){let s=t.getAttribLocation(e,r);-1==s&&console.error(`couldnt find attribute [${r}] within glsl! Keep in mind: webgl filters unused attributes automatically`);let o=t.createBuffer();return new Attribute(t,o,s,i,t.FLOAT)}load(t,e,r){t.bindBuffer(t.ARRAY_BUFFER,this.buffer),t.enableVertexAttribArray(this.position),t.vertexAttribPointer(this.position,this.width,this.type,!1,0,0),t.bufferData(t.ARRAY_BUFFER,e,r)}bind(t){t.enableVertexAttribArray(this.position),t.bindBuffer(t.ARRAY_BUFFER,this.buffer),t.vertexAttribPointer(this.position,this.width,this.type,!1,0,0)}}!function(t){t[t.PosX=34069]="PosX",t[t.NegX=34070]="NegX",t[t.PosY=34071]="PosY",t[t.NegY=34072]="NegY",t[t.PosZ=34073]="PosZ",t[t.NegZ=34074]="NegZ"}(w||(w={}));const _=[w.PosX,w.NegX,w.PosY,w.NegY,w.PosZ,w.NegZ];var M,v,V,y,b,P;!function(t){t[t.Depth=256]="Depth",t[t.Stencil=1024]="Stencil",t[t.Color=16384]="Color"}(M||(M={})),function(t){t[t.Points=0]="Points",t[t.Lines=1]="Lines",t[t.LineLoop=2]="LineLoop",t[t.LineStrip=3]="LineStrip",t[t.Triangles=4]="Triangles",t[t.TriangleStrip=5]="TriangleStrip",t[t.TriangleFan=6]="TriangleFan"}(v||(v={})),function(t){t[t.DepthComponent=6402]="DepthComponent",t[t.Alpha=6406]="Alpha",t[t.RGB=6407]="RGB",t[t.RGBA=6408]="RGBA",t[t.Luminance=6409]="Luminance",t[t.LuminanceAlpha=6410]="LuminanceAlpha"}(V||(V={})),function(t){t[t.Arrays=0]="Arrays",t[t.Elements=1]="Elements"}(y||(y={})),function(t){t[t.UnsignedByte=5121]="UnsignedByte",t[t.UnsignedShort=5123]="UnsignedShort",t[t.UnsignedInt=5125]="UnsignedInt"}(b||(b={})),function(t){t[t.Byte=5120]="Byte",t[t.UnsignedByte=5121]="UnsignedByte",t[t.Short=5122]="Short",t[t.UnsignedShort=5123]="UnsignedShort",t[t.Int=5124]="Int",t[t.UnsignedInt=5125]="UnsignedInt",t[t.Float=5126]="Float"}(P||(P={}));const S=3553,R="__index__";class IndexAttribute{constructor(t,e){this.gl=t,this.buffer=e}static new(t){let e=t.createBuffer();return new IndexAttribute(t,e)}load(t,e,r){t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.buffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,r)}bind(t){t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.buffer)}}class Attributes{constructor(t,e,r,i=new Map){this.gl=t,this.program=e,this.indexAttributeElementType=r,this.attributes=i}add(t,e){this.attributes.set(t,Attribute.new(this.gl,this.program,t,e))}has(t){return this.attributes.has(t)}addIndex(t){this.indexAttributeElementType=t,this.attributes.set(R,IndexAttribute.new(this.gl))}load(t,e,r){this.attributes.get(t).load(this.gl,e,r)}unload(t){this.attributes.delete(t)}loadIndex(t,e){this.attributes.get(R).load(this.gl,t,e)}unloadIndex(){this.attributes.delete(R)}getIndex(){return this.attributes.get(R)}bindAll(){for(let[t,e]of this.attributes)e.bind(this.gl)}}var A,C;!function(t){t[t.Float=0]="Float",t[t.Int=1]="Int"}(A||(A={}));class Uniform{constructor(t,e,r,i){this.type=t,this.size=e,this.loc=r,this.setter=i}static new(t,e,r,i,s,o){let n=function getLoader(t,e,r){switch(r){case 1:return A.Float,(t,e,r)=>{t.uniform1fv(e,r)};case 2:return A.Float,(t,e,r)=>{t.uniform2fv(e,r)};case 3:return A.Float,(t,e,r)=>{t.uniform3fv(e,r)};case 4:return A.Float,(t,e,r)=>{t.uniform4fv(e,r)};case 9:return(t,e,r)=>{t.uniformMatrix3fv(e,!1,r)};case 16:return(t,e,r)=>{t.uniformMatrix4fv(e,!1,r)};default:return(t,e,r)=>{console.error("could not set a certain uniform...")}}}(0,0,s),a=t.getUniformLocation(e,r),h=new Uniform(i,s,a,n);return o&&h.loadAndBind(t,o),h}loadAndBind(t,e){this.setter(t,this.loc,e)}}class UniformTexture{constructor(t,e,r,i){this.gl=t,this.id=e,this.texture=r,this.loc=i}static new(t,e,r){let i=t.getUniformLocation(e,r),s=p.getNextTextureID(),o=t.createTexture();return new UniformTexture(t,s,o,i)}load(t){if(4!=t.depth)throw new Error("sorry, but I haven't figured out how to load non-rgba textures...");this.loadArrayBuffer(t.width,t.height,t.data)}loadImageData(t){this.gl.activeTexture(this.gl.TEXTURE0+this.id),this.gl.bindTexture(S,this.texture),this.gl.texImage2D(S,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,t),this.gl.texParameteri(S,this.gl.TEXTURE_MIN_FILTER,this.gl.NEAREST),this.gl.generateMipmap(S)}loadArrayBuffer(t,e,r){let i=this.gl;this.gl.activeTexture(this.gl.TEXTURE0+this.id),this.gl.bindTexture(S,this.texture);const s=i.RGBA,o=i.RGBA,n=i.UNSIGNED_BYTE;i.texImage2D(i.TEXTURE_2D,0,s,t,e,0,o,n,r),isPowerOf2(t)&&isPowerOf2(e)?i.generateMipmap(i.TEXTURE_2D):(i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.LINEAR))}setSource(t){this.texture=t}bind(t){t.uniform1i(this.loc,this.id),t.activeTexture(t.TEXTURE0+this.id),t.bindTexture(t.TEXTURE_2D,this.texture)}unbind(){throw"TODO"}}function isPowerOf2(t){return 0==(t&t-1)}class CubeMap{constructor(t,e,r,i){this.gl=t,this.id=e,this.idPointer=r,this.texturePointer=i,this.start()}static new(t,e,r){let i=t.getUniformLocation(e,r),s=p.getNextTextureID(),o=t.createTexture();return new CubeMap(t,s,i,o)}start(){let t=this.gl;t.bindTexture(t.TEXTURE_CUBE_MAP,this.texturePointer),_.forEach((e=>{t.texImage2D(e,0,t.RGBA,1024,1024,0,t.RGBA,t.UNSIGNED_BYTE,null)})),t.generateMipmap(t.TEXTURE_CUBE_MAP),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MIN_FILTER,t.LINEAR_MIPMAP_LINEAR)}loadUrls(t){let e=this.gl;const r=this.texturePointer;e.bindTexture(e.TEXTURE_CUBE_MAP,r),_.forEach(((i,s)=>{const o=t[s],n=e.RGBA,a=e.RGBA,h=e.UNSIGNED_BYTE,l=new Image;l.src=o,l.addEventListener("load",(function(){e.bindTexture(e.TEXTURE_CUBE_MAP,r),e.texImage2D(i,0,n,a,h,l),e.generateMipmap(e.TEXTURE_CUBE_MAP)}))}))}bind(t){t.uniform1i(this.idPointer,this.id),t.activeTexture(t.TEXTURE0+this.id),t.bindTexture(t.TEXTURE_CUBE_MAP,this.texturePointer)}}class Uniforms{constructor(t,e,r=new Map,i=new Map){this.gl=t,this.program=e,this.uniforms=r,this.textures=i}add(t,e,r,i=A.Float){let s=Uniform.new(this.gl,this.program,t,i,e,r);return this.uniforms.set(t,s),s}addTexture(t){let e=UniformTexture.new(this.gl,this.program,t);return this.textures.set(t,e),e}addCubeMap(t){let e=CubeMap.new(this.gl,this.program,t);return this.textures.set(t,e),e}get(t){let e=this.uniforms.get(t);if(e)return e;throw new Error(`uniform called [${t}] is not addded to the uniforms at init...`)}bindAll(){for(let t of this.textures.values())t.bind(this.gl)}loadCubeMapUrls(t,e){this.textures.get(t).loadUrls(e)}loadTexture(t,e){this.textures.get(t).load(e)}loadTextureSource(t,e){this.textures.get(t).setSource(e)}load(t,e){this.get(t).loadAndBind(this.gl,[e])}load2(t,e){this.get(t).loadAndBind(this.gl,e.data)}load3(t,e){this.get(t).loadAndBind(this.gl,e.data)}load4(t,e){this.get(t).loadAndBind(this.gl,e)}loadColor(t,e){this.get(t).loadAndBind(this.gl,e.data)}loadMatrix3(t,e){this.get(t).loadAndBind(this.gl,e.data)}loadMatrix4(t,e){this.get(t).loadAndBind(this.gl,e.data)}}class OldShader_OldShader{constructor(t,e,r){this.active=!0,this.draw=()=>{},this.method=y.Arrays,this.mode=v.Triangles,this.drawCount=0,this.drawOffset=0,this.gl=t,this.program=p.createProgramFromScripts(t,e,r),this.uniforms=new Uniforms(this.gl,this.program),this.attributes=new Attributes(this.gl,this.program),this.drawCount=0,t.useProgram(this.program)}setAndRender(t,e){this.set(t,g.DynamicDraw),this.render(e)}setDrawCount(t){this.drawCount=t}}class DotShader extends OldShader_OldShader{constructor(t,e=5,r=[1,1,1,1],i=!0){let s="\n        precision mediump int;\n        precision mediump float;\n\n        uniform mat4 u_transform;\n        uniform vec4 u_color;\n        uniform float u_size;\n\n        attribute vec3 a_vertex;\n\n        void main() {\n            // Set the size of a rendered point.\n            gl_PointSize = u_size;\n\n            // Transform the location of the vertex.\n            gl_Position = u_transform * vec4(a_vertex, 1.0);\n        }\n\n        ";super(t,s,i?"\n        precision mediump int;\n        precision mediump float;\n\n        uniform vec4 u_color;\n        // vec2 center = vec2(0.5, 0.5);\n\n        void main() {\n            gl_FragColor = u_color;\n        }\n        ":"\n        precision mediump int;\n        precision mediump float;\n\n        uniform vec4 u_color;\n        vec2 center = vec2(0.5, 0.5);\n\n        void main() {\n            if (distance(center, gl_PointCoord) > 0.5) {\n               discard;\n            }\n            gl_FragColor = u_color;\n        }\n        "),this.u_transform=t.getUniformLocation(this.program,"u_transform"),this.u_size=t.getUniformLocation(this.program,"u_size"),this.u_color=t.getUniformLocation(this.program,"u_color"),this.color=r,this.size=e,this.count=0,this.a_position=t.getAttribLocation(this.program,"a_vertex"),this.a_position_buffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.a_position_buffer)}set(t,e=g.StaticDraw){let r=this.gl;r.useProgram(this.program);let i=ToFloatMatrix(t);this.count=i.count(),r.bindBuffer(r.ARRAY_BUFFER,this.a_position_buffer),r.enableVertexAttribArray(this.a_position),r.vertexAttribPointer(this.a_position,i.width,r.FLOAT,!1,0,0),r.bufferData(r.ARRAY_BUFFER,i.data,e)}render(t){let e=this.gl,r=t.camera.totalMatrix;e.useProgram(this.program),e.uniformMatrix4fv(this.u_transform,!1,r.data),e.uniform1f(this.u_size,this.size),e.uniform4f(this.u_color,this.color[0],this.color[1],this.color[2],this.color[3]),e.bindBuffer(e.ARRAY_BUFFER,this.a_position_buffer),e.enableVertexAttribArray(this.a_position),e.vertexAttribPointer(this.a_position,3,e.FLOAT,!1,0,0),e.drawArrays(e.POINTS,0,this.count)}setAndRender(t,e){this.set(t,g.DynamicDraw),this.render(e)}}class LineShader extends OldShader_OldShader{constructor(t,e=[1,1,1,.5]){super(t,"\n        precision mediump int;\n        precision mediump float;\n\n        attribute vec4 a_position;\n        uniform mat4 u_transform;\n        uniform vec4 u_color;\n\n        void main() {\n            gl_Position = u_transform * a_position;\n        }\n        ","\n        precision mediump int;\n        precision mediump float;\n\n        uniform vec4 u_color;\n\n        void main () {\n            gl_FragColor = u_color;\n        }\n        "),this.u_transform=t.getUniformLocation(this.program,"u_transform"),this.u_color=t.getUniformLocation(this.program,"u_color"),this.a_position=t.getAttribLocation(this.program,"a_position"),this.a_position_buffer=t.createBuffer(),this.index_buffer=t.createBuffer(),t.useProgram(this.program),t.uniform4f(this.u_color,e[0],e[1],e[2],e[3]),this.count=0,this.vertCount=0}set(t,e=g.StaticDraw,r=Matrix4_Matrix4.newIdentity()){let i,s,o=this.gl;t instanceof Mesh_Mesh?(s=t.verts.slice(),i=t.links.getData()):(s=t.verts,i=t.links),o.useProgram(this.program),this.count=i.length,this.vertCount=s.width;let n=e;o.bindBuffer(o.ARRAY_BUFFER,this.a_position_buffer),o.enableVertexAttribArray(this.a_position),o.vertexAttribPointer(this.a_position,this.vertCount,o.FLOAT,!1,0,0),o.bufferData(o.ARRAY_BUFFER,s.data,n),o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,this.index_buffer),o.bufferData(o.ELEMENT_ARRAY_BUFFER,i.buffer,n)}render(t){let e=this.gl,r=t.camera.totalMatrix;e.useProgram(this.program),e.bindBuffer(e.ARRAY_BUFFER,this.a_position_buffer),e.enableVertexAttribArray(this.a_position),e.vertexAttribPointer(this.a_position,this.vertCount,e.FLOAT,!1,0,0),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.index_buffer),e.uniformMatrix4fv(this.u_transform,!1,r.data),e.drawElements(e.LINES,this.count,e.UNSIGNED_SHORT,0)}setAndRender(t,e){this.set(t,g.DynamicDraw),this.render(e)}}class NormalShader extends OldShader_OldShader{constructor(t){super(t,"\n        precision mediump int;\n        precision mediump float;\n\n        attribute vec4 a_vertex;\n        attribute vec4 a_vertex_color;\n\n        uniform mat4 u_transform;\n\n        varying vec4 v_color;\n\n        void main() {\n            gl_Position = u_transform * a_vertex;\n            v_color = a_vertex_color;\n        }\n        ","\n        precision mediump int;\n        precision mediump float;\n\n        varying vec4 v_color;\n\n        void main () {\n            gl_FragColor = v_color;\n        }\n        "),this.u_transform=t.getUniformLocation(this.program,"u_transform"),this.a_position=t.getAttribLocation(this.program,"a_vertex"),this.a_color=t.getAttribLocation(this.program,"a_vertex_color"),this.a_position_buffer=t.createBuffer(),this.a_color_buffer=t.createBuffer(),this.index_buffer=t.createBuffer(),t.useProgram(this.program),this.count=0,this.vertCount=0,this.scale=.4}set(t,e=g.StaticDraw){let r=this.gl;r.useProgram(this.program);let i,s,o=e;this.vertCount=3;let n=t.getNormalType();if(n==a.Face){let e=t.mesh.links.count();this.count=2*e,i=MultiVector3_MultiVector3.new(this.count),s=MultiVector3_MultiVector3.new(this.count);for(let r=0;r<e;r++){let e=t.getFaceVertices(r).average(),o=t.norms.get(r),n=2*r,a=2*r+1;i.set(n,e),i.set(a,e.add(o.scaled(this.scale)));let h=o.add(new Vector3_Vector3(1,1,1).div(2));s.set(n,h),s.set(a,h)}}else{if(n!=a.Vertex)return void(this.count=0);{let e=t.mesh.verts.count;this.count=2*e,i=MultiVector3_MultiVector3.new(this.count),s=MultiVector3_MultiVector3.new(this.count);for(let r=0;r<e;r++){let e=t.mesh.verts.get(r),o=t.norms.get(r),n=2*r,a=2*r+1;i.set(n,e),i.set(a,e.add(o.scaled(this.scale)));let h=o.add(new Vector3_Vector3(1,1,1)).div(2);s.set(n,h),s.set(a,h)}}}r.bindBuffer(r.ARRAY_BUFFER,this.a_position_buffer),r.enableVertexAttribArray(this.a_position),r.vertexAttribPointer(this.a_position,this.vertCount,r.FLOAT,!1,0,0),r.bufferData(r.ARRAY_BUFFER,i.slice().data,o),r.bindBuffer(r.ARRAY_BUFFER,this.a_color_buffer),r.enableVertexAttribArray(this.a_color),r.vertexAttribPointer(this.a_color,this.vertCount,r.FLOAT,!1,0,0),r.bufferData(r.ARRAY_BUFFER,s.slice().data,o),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,this.index_buffer),r.bufferData(r.ELEMENT_ARRAY_BUFFER,getDefaultIndices(this.count),o)}render(t){let e=this.gl,r=t.camera.totalMatrix;t.camera;e.useProgram(this.program),e.bindBuffer(e.ARRAY_BUFFER,this.a_position_buffer),e.enableVertexAttribArray(this.a_position),e.vertexAttribPointer(this.a_position,this.vertCount,e.FLOAT,!1,0,0),e.bindBuffer(e.ARRAY_BUFFER,this.a_color_buffer),e.enableVertexAttribArray(this.a_color),e.vertexAttribPointer(this.a_color,this.vertCount,e.FLOAT,!1,0,0),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.index_buffer),e.uniformMatrix4fv(this.u_transform,!1,r.data),e.drawElements(e.LINES,this.count,e.UNSIGNED_SHORT,0)}}class SimpleMeshShader extends OldShader_OldShader{constructor(t,e=[1,0,0,.25]){super(t,"\n        precision mediump int;\n        precision mediump float;\n\n        attribute vec4 a_position;\n        uniform mat4 u_transform;\n        uniform vec4 u_color;\n\n        void main() {\n            gl_Position = u_transform * a_position;\n        }\n        ","\n        precision mediump int;\n        precision mediump float;\n\n        uniform vec4 u_color;\n\n        void main () {\n            gl_FragColor = u_color;\n        }\n        "),this.u_transform=t.getUniformLocation(this.program,"u_transform"),this.u_color=t.getUniformLocation(this.program,"u_color"),t.useProgram(this.program),t.uniform4f(this.u_color,e[0],e[1],e[2],e[3]),this.count=0,this.size=0,this.a_position=t.getAttribLocation(this.program,"a_position"),this.a_position_buffer=t.createBuffer(),this.index_buffer=t.createBuffer()}set(t,e=g.StaticDraw){let r=this.gl;r.useProgram(this.program),this.count=t.links.data.length,r.bindBuffer(r.ARRAY_BUFFER,this.a_position_buffer),this.size=3;r.FLOAT;r.vertexAttribPointer(this.a_position,this.size,r.FLOAT,!1,0,0),r.bufferData(r.ARRAY_BUFFER,t.verts.slice().data,e),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,this.index_buffer),r.bufferData(r.ELEMENT_ARRAY_BUFFER,t.links.data,e)}render(t){let e=this.gl,r=t.camera.totalMatrix;e.useProgram(this.program),e.enableVertexAttribArray(this.a_position),e.bindBuffer(e.ARRAY_BUFFER,this.a_position_buffer),e.vertexAttribPointer(this.a_position,this.size,e.FLOAT,!1,0,0),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.index_buffer),e.uniformMatrix4fv(this.u_transform,!1,r.data),e.drawElements(e.TRIANGLES,this.count,e.UNSIGNED_SHORT,0)}setAndRender(t,e){this.set(t,g.DynamicDraw),this.render(e)}}class MeshDebugShader extends MultiShader{constructor(t,e=[1,0,0,.25],r=[1,0,0,1],i=!0){super(),this.faceRend=new SimpleMeshShader(t,e),this.lineRend=new LineShader(t,r),this.personal=Matrix4_Matrix4.newIdentity(),i&&(this.normRend=new NormalShader(t))}static new(t,e=[1,0,0,.25],r=[1,0,0,1],i=!0){return new MeshDebugShader(t,e,r,i)}set(t,e=g.StaticDraw){var r;this.personal=t.position,this.faceRend.set(t.mesh),this.lineRend.set(MultiLine.fromMesh(t),e),null===(r=this.normRend)||void 0===r||r.set(t,e)}render(t){var e;this.faceRend.render(t),this.lineRend.render(t),null===(e=this.normRend)||void 0===e||e.render(t)}setAndRender(t,e){this.set(t,g.DynamicDraw),this.render(e)}}class ShadedMeshShader extends OldShader_OldShader{constructor(t){super(t,"\n\n        attribute vec4 a_vertex_position;\n        attribute vec3 a_vertex_normal;\n        attribute float a_vertex_ambi;\n    \n        uniform mat4 u_normal_matrix;\n        uniform mat4 u_personal_matrix;\n        uniform mat4 u_model_view_matrix;\n        uniform mat4 u_projection_matrix;\n\n        // should be uniforms constances\n        uniform vec3 u_ambient_light;\n        uniform vec3 u_dir_light_color;\n        uniform vec3 u_dir_light_vector;  \n\n        // varying vec2 v_texture_coord;\n        varying vec3 v_lighting;\n    \n        void main(void) {\n\n            gl_Position = u_projection_matrix * u_model_view_matrix * u_personal_matrix * a_vertex_position;\n            // v_texture_coord = a_texture_coord;\n        \n            // Apply lighting effect\n            // highpr is removed\n            vec4 transformedNormal = u_normal_matrix * vec4(a_vertex_normal, 1.0);\n            float directional = max(dot(transformedNormal.xyz, u_dir_light_vector), 0.0);\n            v_lighting = (u_ambient_light + (u_dir_light_color * directional));\n        }\n        ","\n        precision mediump float;\n\n        // Calculates the diffuse factor produced by the light illumination  \n        // if done like this, color could look nicer\n        // float diffuseFactor(vec3 normal, vec3 light_direction) {\n        //     float df = dot(normalize(normal), normalize(light_direction));\n        //     if (gl_FrontFacing) {\n        //         df = -df;\n        //     }\n        //     return max(0.0, df);\n        // }\n\n        varying vec3 v_lighting;\n\n        void main() {\n\n            // Fragment shader output\n            gl_FragColor = vec4(v_lighting, 1.0);\n        }\n        "),t.useProgram(this.program),this.count=0,this.size=0,this.u_normal_matrix=t.getUniformLocation(this.program,"u_normal_matrix"),this.u_model_view_matrix=t.getUniformLocation(this.program,"u_model_view_matrix"),this.u_projection_matrix=t.getUniformLocation(this.program,"u_projection_matrix"),this.u_personal_matrix=t.getUniformLocation(this.program,"u_personal_matrix"),this.u_ambient_light=t.getUniformLocation(this.program,"u_ambient_light"),this.u_dir_light_color=t.getUniformLocation(this.program,"u_dir_light_color"),this.u_dir_light_vector=t.getUniformLocation(this.program,"u_dir_light_vector"),this.a_vertex_position=t.getAttribLocation(this.program,"a_vertex_position"),this.a_vertex_postition_buffer=t.createBuffer(),this.a_vertex_normal=t.getAttribLocation(this.program,"a_vertex_normal"),this.a_vertex_normal_buffer=t.createBuffer(),this.a_vertex_ambi=t.getAttribLocation(this.program,"a_vertex_ambi"),this.a_vertex_ambi_buffer=t.createBuffer(),this.index_buffer=t.createBuffer()}set(t,e=g.StaticDraw){let r=this.gl;this.setShallow(r,t);let i=t.getNormalType();if(i==a.Face){r.useProgram(this.program),this.count=t.mesh.links.data.length;let i=MultiVector3_MultiVector3.new(this.count),s=MultiVector3_MultiVector3.new(this.count),o=new Float32Array(this.count);t.mesh.links.count();for(let e=0;e<t.mesh.links.count();e++){let r=t.norms.get(e);t.mesh.links.getRow(e).forEach(((n,a)=>{let h=3*e+a;i.set(h,t.mesh.verts.get(n)),s.set(h,r),o[h]=1}))}r.bindBuffer(r.ARRAY_BUFFER,this.a_vertex_postition_buffer),r.vertexAttribPointer(this.a_vertex_position,3,r.FLOAT,!1,0,0),r.bufferData(r.ARRAY_BUFFER,i.slice().data.buffer,e),r.bindBuffer(r.ARRAY_BUFFER,this.a_vertex_normal_buffer),r.vertexAttribPointer(this.a_vertex_normal,3,r.FLOAT,!1,0,0),r.bufferData(r.ARRAY_BUFFER,s.slice().data.buffer,e),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,this.index_buffer),r.bufferData(r.ELEMENT_ARRAY_BUFFER,getDefaultIndices(this.count),e)}else if(i==a.Vertex){r.useProgram(this.program);let i=e;t.ambi,t.mesh.links.count();this.count=t.mesh.links.data.length,r.bindBuffer(r.ARRAY_BUFFER,this.a_vertex_postition_buffer),r.vertexAttribPointer(this.a_vertex_position,3,r.FLOAT,!1,0,0),r.bufferData(r.ARRAY_BUFFER,t.mesh.verts.slice().data,i),r.bindBuffer(r.ARRAY_BUFFER,this.a_vertex_normal_buffer),r.vertexAttribPointer(this.a_vertex_normal,3,r.FLOAT,!1,0,0),r.bufferData(r.ARRAY_BUFFER,t.norms.slice().data,i),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,this.index_buffer),r.bufferData(r.ELEMENT_ARRAY_BUFFER,t.mesh.links.data,i)}else console.log("cannot render with this normal data")}setShallow(t,e){t.useProgram(this.program),t.uniformMatrix4fv(this.u_personal_matrix,!1,e.position.data);let r=e.color,i=r.map((t=>.25*t));i[2]=Math.min(1,1.05*i[2]);let s=r.map((t=>t));s[0]=Math.min(1,1.05*s[0]),s[1]=Math.min(1,1.05*s[1]),s[2]=Math.min(1,1*s[2]),t.uniform3fv(this.u_ambient_light,i.slice(0,3)),t.uniform3fv(this.u_dir_light_color,s.slice(0,3))}render(t){let e=this.gl,r=t.camera;e.useProgram(this.program),e.uniformMatrix4fv(this.u_normal_matrix,!1,Matrix4_Matrix4.newIdentity().data),e.uniformMatrix4fv(this.u_model_view_matrix,!1,r.worldMatrix.data),e.uniformMatrix4fv(this.u_projection_matrix,!1,r.projectMatrix.data);r.getMouseWorldRay(e.canvas.width,e.canvas.height,!1).normal;e.uniform3fv(this.u_dir_light_vector,Vector3_Vector3.unitX().add(Vector3_Vector3.unitY()).add(Vector3_Vector3.unitZ()).normalize().toArray()),e.enableVertexAttribArray(this.a_vertex_position),e.bindBuffer(e.ARRAY_BUFFER,this.a_vertex_postition_buffer),e.vertexAttribPointer(this.a_vertex_position,3,e.FLOAT,!1,0,0),e.enableVertexAttribArray(this.a_vertex_normal),e.bindBuffer(e.ARRAY_BUFFER,this.a_vertex_normal_buffer),e.vertexAttribPointer(this.a_vertex_normal,3,e.FLOAT,!1,0,0),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.index_buffer),e.drawElements(e.TRIANGLES,this.count,e.UNSIGNED_SHORT,0)}}class TextureMeshShader extends OldShader_OldShader{constructor(t){let e;e="\n            precision mediump float;\n    \n            varying vec2 v_texcoord;\n\n            uniform vec2 u_texture_size;\n            uniform sampler2D u_texture;\n    \n            // make pixel-perfect, but round it so it has no artefacts.\n            vec2 snapPixel(vec2 uv, vec2 size, vec2 alpha) {\n                vec2 pixel_uv = uv * size;\n                vec2 x = fract(pixel_uv);\n                vec2 x_ = clamp(0.5 / alpha * x, 0.0, 0.5) +\n                          clamp(0.5 / alpha * (x - 1.0) + 0.5, 0.0, 0.5);\n                return clamp((floor(pixel_uv) + x_) / size, 0.0, 0.9999);\n            } \n\n            void main() {\n                vec2 coord = snapPixel(v_texcoord, u_texture_size, vec2(0.02));\n                gl_FragColor = texture2D(u_texture, coord);\n            }\n            ",super(t,"\n        // precision mediump int;\n        // precision mediump float;\n\n        attribute vec4 a_position;\n        attribute vec2 a_texcoord;\n\n        uniform mat4 u_transform;\n\n        varying vec2 v_texcoord;\n\n        void main() {\n            gl_Position = u_transform * a_position;\n            v_texcoord = a_texcoord;\n        }\n        ",e),t.useProgram(this.program),this.count=0,this.size=0,this.u_transform=t.getUniformLocation(this.program,"u_transform"),this.u_texture_size=t.getUniformLocation(this.program,"u_texture_size"),this.u_texture=t.getUniformLocation(this.program,"u_texture"),this.a_position=t.getAttribLocation(this.program,"a_position"),this.a_position_buffer=t.createBuffer(),this.a_texcoord=t.getAttribLocation(this.program,"a_texcoord"),this.a_texcoord_buffer=t.createBuffer(),this.index_buffer=t.createBuffer(),this.texture_id=p.getNextTextureID(),this.texture=t.createTexture()}static new(t){return new TextureMeshShader(t)}set(t,e){let r=this.gl;t.texture?(r.useProgram(this.program),this.count=t.mesh.links.data.length,r.bindBuffer(r.ARRAY_BUFFER,this.a_position_buffer),r.vertexAttribPointer(this.a_position,3,r.FLOAT,!1,0,0),r.bufferData(r.ARRAY_BUFFER,t.mesh.verts.matrix.data,e),r.bindBuffer(r.ARRAY_BUFFER,this.a_texcoord_buffer),r.vertexAttribPointer(this.a_texcoord,2,r.FLOAT,!1,0,0),r.bufferData(r.ARRAY_BUFFER,t.uvs.data,e),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,this.index_buffer),r.bufferData(r.ELEMENT_ARRAY_BUFFER,new Uint16Array(t.mesh.links.data),e),r.activeTexture(r.TEXTURE0+this.texture_id),r.bindTexture(r.TEXTURE_2D,this.texture),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t.texture),r.uniform2f(this.u_texture_size,t.texture.width,t.texture.height),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.generateMipmap(r.TEXTURE_2D)):console.warn("Mesh does not contain a texture!")}setWithMesh(t,e,r){let i=this.gl;i.useProgram(this.program),this.count=t.links.data.length,i.bindBuffer(i.ARRAY_BUFFER,this.a_position_buffer),i.vertexAttribPointer(this.a_position,3,i.FLOAT,!1,0,0),i.bufferData(i.ARRAY_BUFFER,t.verts.slice().data,r),i.bindBuffer(i.ARRAY_BUFFER,this.a_texcoord_buffer),i.vertexAttribPointer(this.a_texcoord,2,i.FLOAT,!1,0,0),i.bufferData(i.ARRAY_BUFFER,t.uvs.toMatrixSlice().data,r),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,this.index_buffer),i.bufferData(i.ELEMENT_ARRAY_BUFFER,new Uint16Array(t.links.data),r),i.activeTexture(i.TEXTURE0+this.texture_id),i.bindTexture(i.TEXTURE_2D,this.texture),i.texImage2D(i.TEXTURE_2D,0,i.RGBA,e.width,e.height,0,i.RGBA,i.UNSIGNED_BYTE,e.data),i.uniform2f(this.u_texture_size,e.width,e.height),i.generateMipmap(i.TEXTURE_2D),isPowerOf2(e.width)&&isPowerOf2(e.height)?i.generateMipmap(i.TEXTURE_2D):(i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.LINEAR))}render(t){let e=this.gl,r=t.camera.totalMatrix;e.useProgram(this.program),e.uniformMatrix4fv(this.u_transform,!1,r.data),e.uniform1i(this.u_texture,this.texture_id),e.activeTexture(e.TEXTURE0+this.texture_id),e.bindTexture(e.TEXTURE_2D,this.texture),e.enableVertexAttribArray(this.a_position),e.bindBuffer(e.ARRAY_BUFFER,this.a_position_buffer),e.vertexAttribPointer(this.a_position,3,e.FLOAT,!1,0,0),e.enableVertexAttribArray(this.a_texcoord),e.bindBuffer(e.ARRAY_BUFFER,this.a_texcoord_buffer),e.vertexAttribPointer(this.a_texcoord,2,e.FLOAT,!1,0,0),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.index_buffer),e.drawElements(e.TRIANGLES,this.count,e.UNSIGNED_SHORT,0)}setAndRender(t,e){this.set(t,g.DynamicDraw),this.render(e)}}class Material{constructor(t,e,r,i,s,o,n,a){this.ambient=t,this.diffuse=e,this.specular=r,this.occluded=i,this.specularDampner=s,this.opacity=o,this.texture=n,this.bumpmap=a}static fromObjMtl(){throw new Error("TODO!!!")}static fromTexture(t){let e=Material.neutral();return e.texture=t,e}static newPurple(){return new Material(Color.fromHex("#35006a"),Color.fromHex("#ff0080"),Color.fromHex("#513600"),Color.fromHex("#1b0035"),3.195,1)}static grey(){return new Material(Color.fromHex("#1d1d1d"),Color.fromHex("#4c4c4c"),Color.fromHex("#f0f0f0"),Color.fromHex("#1d1d1d"),3.195,1)}static neutral(){return new Material(Color.fromHex("#ffffff"),Color.fromHex("#ffffff"),Color.fromHex("#ffffff"),Color.fromHex("#ffffff"),3.195,1)}static yellow(){return new Material(Color.fromHex("#fff25f"),Color.fromHex("#fff25f"),Color.fromHex("#fff25f"),Color.fromHex("#fff25f"),3.195,1)}static default(){return new Material(Color.fromHex("#4f009d"),Color.fromHex("#06ffff"),Color.fromHex("#58593e"),Color.fromHex("#1b0035"),3.195,1)}}class Model{constructor(t,e){this.mesh=t,this.material=e}static new(t=Mesh_Mesh.newIcosahedron(),e=Material.default()){return new Model(t,e)}spawn(){return Entity.new(Matrix4_Matrix4.newIdentity(),this)}}class Entity{constructor(t,e){this.position=t,this.model=e}static new(t=Matrix4_Matrix4.new(),e=Model.new()){return new Entity(t,e)}}class ShaderProgram_ShaderProgram{constructor(t,e,r){this.drawElementsOrArrays=()=>{},this.drawMethod=y.Arrays,this.mode=v.Triangles,this.drawCount=0,this.drawOffset=0,this.gl=t,this.program=p.createProgramFromScripts(t,e,r),this.init()}init(){this.useProgram(),this.uniforms=new Uniforms(this.gl,this.program),this.attributes=new Attributes(this.gl,this.program),this.drawCount=0,this.mode=this.onInit(),this.updateDrawMethod()}load(t,e=g.StaticDraw){this.useProgram(),this.drawCount=this.onLoad(t,e)}draw(t){this.useProgram(),this.onDraw(t),this.uniforms.bindAll(),this.attributes.bindAll(),this.drawElementsOrArrays()}loadAndDraw(t,e){this.load(t,g.DynamicDraw),this.draw(e)}render(t){return this.draw(t)}useProgram(){this.gl.useProgram(this.program)}setDrawCount(t){this.drawCount=t}updateDrawMethod(){this.attributes.has(R)?(this.drawMethod=y.Elements,this.drawElementsOrArrays=this.drawElements):(this.drawMethod=y.Arrays,this.drawElementsOrArrays=this.drawArrays)}drawElements(){this.gl.drawElements(this.mode,this.drawCount,this.attributes.indexAttributeElementType,this.drawOffset)}drawArrays(){this.gl.drawArrays(this.mode,this.drawOffset,this.drawCount)}}class PhongShader extends ShaderProgram_ShaderProgram{constructor(t){super(t,"\n        precision mediump int;\n        precision mediump float;\n\n        attribute vec4 position;\n        attribute vec2 uv;\n        attribute vec3 normal;\n        attribute float occlusion;\n        \n        uniform mat4 worldMatrix;\n        uniform mat4 worldInverse;\n        uniform mat4 modelMatrix;\n        uniform vec3 sunPosition;\n        uniform vec3 cameraPosition;\n\n        varying vec2 varUv;\n        varying vec3 varNormal;\n        varying vec3 varToSun;\n        varying vec3 varToCamera;\n        varying float varVectorOcclusion;\n\n        void main() {\n            vec4 worldPosition = modelMatrix * position;\n            gl_Position = worldMatrix * worldPosition;\n            \n            varUv = uv;\n            varNormal = mat3(modelMatrix) * normal;\n            varToSun = sunPosition - worldPosition.xyz;\n            varToCamera = cameraPosition - worldPosition.xyz;\n            varVectorOcclusion = occlusion;\n        }\n        ","\n        precision mediump int;\n        precision mediump float;\n\n        uniform vec4 ambient;\n        uniform vec4 diffuse;\n        uniform vec4 specular;\n        uniform vec4 occluded;\n        uniform float opacity;\n        uniform float specularDampner;\n\n        uniform float textureBlend;\n        uniform sampler2D u_texture;\n\n        varying float varVectorOcclusion;\n        varying vec2 varUv;\n        varying vec3 varNormal;\n        varying vec3 varToSun;\n        varying vec3 varToCamera;\n\n        // float smooth(float t) {\n        //     // Fade function as defined by Ken Perlin.  This eases coordinate values\n        //     // so that they will ease towards integral values.  This ends up smoothing\n        //     // the final output.\n        //     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0); // 6t^5 - 15t^4 + 10t^3\n        // }\n    \n        void main () {\n\n            // normalize \n            // vec3 toSun = varToSun;\n            // vec3 normal = varNormal;\n            // vec3 toCamera = varToCamera;\n\n            vec3 toSun = normalize(varToSun);\n            vec3 normal = normalize(varNormal);\n            vec3 toCamera = normalize(varToCamera);\n            \n            // ambient\n            // vec4 ambientColor = ambient * (1.0 - textureBlend) + textureBlend * texture2D(u_texture, varUv);\n            vec4 ambientColor = ambient;\n\n            // occluded (TODO: expand upon this using ambient occlusion)\n            float sunDot = dot(normal, toSun);\n            float occlusion = clamp(sunDot, -1.0, 0.0) * -1.0;\n            occlusion = min(occlusion + varVectorOcclusion, 1.0);\n            vec4 occludedColor = occluded * occlusion + ambientColor * (1.0 - occlusion);\n\n            // diffuse \n            float diffusion = max(0.0, sunDot);\n            vec4 diffuseColor = diffuse * diffusion; \n\n            // specular\n            vec3 reflectedLight = reflect(-toSun, normal);\n            float reflection = max(0.0, dot(reflectedLight, toCamera));\n            reflection = pow(reflection, specularDampner);\n            // reflection = smooth(reflection);\n            vec4 specularColor = vec4(reflection * specular.xyz, 1.0); \n\n            gl_FragColor = max(occludedColor, diffuseColor) + specularColor;\n            // gl_FragColor = vec4(normal, 1.0);\n        }\n        ")}static new(t){return new PhongShader(t)}onInit(){return this.attributes.add("position",3),this.attributes.add("uv",2),this.attributes.add("normal",3),this.attributes.add("occlusion",1),this.attributes.addIndex(b.UnsignedShort),this.uniforms.add("worldMatrix",16),this.uniforms.add("worldInverse",16),this.uniforms.add("modelMatrix",16),this.uniforms.add("sunPosition",3),this.uniforms.add("cameraPosition",3),this.uniforms.add("ambient",4,Color.fromHSL(0,0).data),this.uniforms.add("diffuse",4,[1,1,1,1]),this.uniforms.add("specular",4,[1,1,1,1]),this.uniforms.add("occluded",4,[.2,.2,.2,1]),this.uniforms.add("opacity",1,[1]),this.uniforms.add("specularDampner",1,[.5]),this.uniforms.add("textureBlend",1,[0]),v.Triangles}onLoad(t,e){return this.loadPosition(t.position),this.loadMesh(t.model.mesh,e),this.loadMaterial(t.model.material),t.model.mesh.maxSize}loadOcclusion(t,e){this.useProgram(),this.attributes.load("occlusion",t,e)}loadPosition(t){this.useProgram(),this.uniforms.loadMatrix4("modelMatrix",t)}loadMesh(t,e){this.useProgram(),t.links?this.attributes.loadIndex(t.links.data,e):(this.setDrawCount(t.maxSize),this.attributes.unloadIndex(),this.updateDrawMethod()),this.attributes.load("position",t.verts.matrix.data,e),t.uvs&&this.attributes.load("uv",t.uvs.matrix.data,e),t.normals&&this.attributes.load("normal",t.normals.matrix.data,e),this.attributes.unload("occlusion")}loadMaterial(t){this.useProgram(),this.uniforms.loadColor("ambient",t.ambient),this.uniforms.loadColor("diffuse",t.diffuse),this.uniforms.loadColor("specular",t.specular),this.uniforms.loadColor("occluded",t.occluded),this.uniforms.load("opacity",t.opacity),this.uniforms.load("specularDampner",t.specularDampner),t.texture&&this.loadTexture(t.texture)}loadTexture(t){this.useProgram(),this.uniforms.addTexture("u_texture"),this.uniforms.loadTexture("u_texture",t),this.uniforms.add("textureBlend",1,[1])}onDraw(t){this.uniforms.loadMatrix4("worldMatrix",t.camera.totalMatrix),this.uniforms.loadMatrix4("worldInverse",t.camera.inverseTransposeMatrix),this.uniforms.load3("sunPosition",t.sun.pos),this.uniforms.load3("cameraPosition",t.camera.getActualPosition())}}class DebugRenderer{constructor(t,e,r){this.gl=t,this.shaders=e,this.activeShaders=r}static new(t){return new DebugRenderer(t,new Map,new Set)}clear(){this.shaders.clear(),this.activeShaders.clear()}set(t,e,...r){e||(e=createRandomGUID().slice(0,8));let i=this.shaders.get(e);return i?(this.multiSet(e,t,...r),i):this.add(e,t,...r)}setBufferable(t,e,...r){this.setShadable(t.buffer(),e,r)}setShadable(t,e,...r){e||(e=createRandomGUID().slice(0,8));let i=this.shaders.get(e);return i||(i=function createNewShaderForShadable(t,e){return t instanceof MultiLine||t instanceof MultiLine?new LineShader(e):t instanceof Mesh_Mesh?new MeshDebugShader(e):void console.warn("No shader can be found for shadable: ",t)}(t,this.gl),this.shaders.set(e,i),this.activeShaders.add(e)),i.set(t,g.StaticDraw),i}addUi(t){t.clear();for(let[e,r]of this.shaders){let r=Parameter.newBoolean(e,!0);t.addBooleanParameter(r,(()=>{this.onChange(e,0!==r.state)}))}}onChange(t,e){e?this.activeShaders.add(t):this.activeShaders.delete(t)}render(t){for(let e of this.activeShaders)this.shaders.get(e).render(t)}multiSet(t,e,...r){this.gl;let i=this.shaders.get(t);if(e instanceof MultiVector3_MultiVector3)i.set(e);else if(e instanceof ShaderMesh_ShaderMesh)i.set(e);else if(e instanceof Mesh_Mesh){let t=e.ToShaderMesh();i.set(t)}else if(e instanceof BiSurface){let t=e.buffer().ToShaderMesh();i.set(t)}else if(e instanceof Curve){let t=e.buffer();i.set(t)}else if(e instanceof Polyline){let t=MultiLine.fromPolyline(e);i.set(t)}else if(e instanceof Plane_Plane){let t=MultiLine.fromPlane(e);i.set(t)}else if(e instanceof Circle3)i.set(MultiLine.fromCircle(e));else if(e instanceof MultiLine)i.set(e);else if(e instanceof ImageMesh)i.set(e.buffer(),g.StaticDraw);else{if(!(e instanceof Entity))return void console.error("MultiRenderer cannot render: ",e);i.load(e,g.StaticDraw)}}add(t,e,...r){let i,s=this.gl;if(e instanceof MultiVector3_MultiVector3)i=new DotShader(s,...r),i.set(e);else if(e instanceof ShaderMesh_ShaderMesh)i=new ShadedMeshShader(s),i.set(e);else if(e instanceof Mesh_Mesh){i=new MeshDebugShader(s,[.5,0,0,1],[.8,0,0,1]);let t=e.ToShaderMesh();i.set(t)}else if(e instanceof BiSurface){i=new MeshDebugShader(s,...r);let t=e.buffer().ToShaderMesh();i.set(t)}else if(e instanceof Curve){i=new LineShader(s,...r);let t=e.buffer();i.set(t)}else if(e instanceof Polyline){i=new LineShader(s,...r);let t=MultiLine.fromPolyline(e);i.set(t)}else if(e instanceof Plane_Plane){i=new LineShader(s,...r);let t=MultiLine.fromPlane(e);i.set(t)}else if(e instanceof Circle3){i=new LineShader(s,...r);let t=MultiLine.fromCircle(e);i.set(t)}else if(e instanceof MultiLine)i=new LineShader(s,...r),i.set(e);else if(e instanceof ImageMesh)i=new TextureMeshShader(s),i.set(e.buffer(),g.StaticDraw);else{if(!(e instanceof Entity))return void console.error("MultiRenderer cannot render: ",e);e.model.material.texture?(i=new TextureMeshShader(s),i.setWithMesh(e.model.mesh,e.model.material.texture,g.StaticDraw)):(i=new PhongShader(s),e.model.mesh.calcAndSetVertexNormals(),i.load(e,g.StaticDraw))}return this.shaders.set(t,i),this.activeShaders.add(t),i}}class ImageRenderer{constructor(t,e,r=10,i=2,s=[],o=[]){this.gl=t,this.stdSize=e,this.gap=r,this.scale=i,this.images=s,this.shaders=o}static new(t,e){return new ImageRenderer(t,e)}add(t){this.images.push(t),this.shaders.push(new TextureMeshShader(this.gl))}buffer(){let t=0;this.images.forEach(((e,r)=>{let i=ShaderMesh_ShaderMesh.fromImage(e,Plane_Plane.WorldXY().moveTo(Vector3_Vector3.new(t,0,0)),!1,100);this.shaders[r].set(i,g.StaticDraw),t+=e.width+this.gap}))}render(t){this.shaders.forEach((e=>{e.render(t)}))}}class AmbientMeshShader extends ShaderProgram_ShaderProgram{constructor(t){super(t,"\n        precision mediump int;\n        precision mediump float;\n\n        attribute vec4 vertexPosition;\n        uniform mat4 worldMatrix;\n\n        void main() {\n            gl_Position = worldMatrix * vertexPosition;\n        }\n        ","\n        precision mediump int;\n        precision mediump float;\n\n        uniform vec4 ambientColor;\n\n        void main () {\n            gl_FragColor = ambientColor;\n        }\n        ")}onInit(){return this.attributes.add("vertexPosition",3),this.attributes.addIndex(b.UnsignedShort),this.uniforms.add("ambientColor",4,[1,1,1,1]),this.uniforms.add("worldMatrix",16),v.Triangles}onLoad(t,e){return this.attributes.load("vertexPosition",t.verts.slice().data,e),this.attributes.loadIndex(t.links.data,e),t.links.data.length}loadColor(t){this.useProgram(),this.uniforms.loadColor("ambientColor",t)}onDraw(t){this.uniforms.loadMatrix4("worldMatrix",t.camera.totalMatrix)}}class TexturedMeshShader extends ShaderProgram_ShaderProgram{constructor(t){let e;e="\n            precision mediump float;\n    \n            varying vec2 v_texcoord;\n\n            uniform vec2 u_texture_size;\n            uniform sampler2D u_texture;\n    \n            // make pixel-perfect, but round it so it has no artefacts.\n            vec2 snapPixel(vec2 uv, vec2 size, vec2 alpha) {\n                vec2 pixel_uv = uv * size;\n                vec2 x = fract(pixel_uv);\n                vec2 x_ = clamp(0.5 / alpha * x, 0.0, 0.5) +\n                          clamp(0.5 / alpha * (x - 1.0) + 0.5, 0.0, 0.5);\n                return clamp((floor(pixel_uv) + x_) / size, 0.0, 0.9999);\n            } \n\n            void main() {\n                vec2 coord = snapPixel(v_texcoord, u_texture_size, vec2(0.02));\n                gl_FragColor = texture2D(u_texture, coord);\n            }\n            ",super(t,"\n        // precision mediump int;\n        // precision mediump float;\n\n        attribute vec4 a_position;\n        attribute vec2 a_uv;\n\n        uniform mat4 u_transform;\n\n        varying vec2 v_texcoord;\n\n        void main() {\n            gl_Position = u_transform * a_position;\n            v_texcoord = a_uv;\n        }\n        ",e)}onInit(){return this.attributes.add("a_position",3),this.attributes.add("a_uv",2),this.attributes.addIndex(b.UnsignedShort),this.uniforms.addTexture("u_texture"),this.uniforms.add("u_transform",16),this.uniforms.add("u_texture_size",2),v.Triangles}onLoad(t,e){return this.attributes.load("a_position",t.verts.slice().data,e),this.attributes.load("a_uv",t.uvs.data,e),this.attributes.loadIndex(t.links.data,e),t.links.data.length}loadTexture(t,e,r){this.useProgram(),this.uniforms.loadTextureSource("u_texture",r),this.uniforms.load2("u_texture_size",Vector2_Vector2.new(t,e))}onDraw(t){this.uniforms.loadMatrix4("u_transform",t.camera.totalMatrix)}}class Billboard{constructor(t,e){this.position=t,this.image=e}static new(t,e){return new Billboard(t,e)}toPayload(){return{positions:MultiVector3_MultiVector3.fromList([this.position]),uvs:MultiVector2_MultiVector2.fromData([0,0]),uvSizes:MultiVector2_MultiVector2.fromData([this.image.width,this.image.height]),texture:this.image}}}class BillboardShader extends ShaderProgram_ShaderProgram{constructor(t,e=[1,1,1,1],r=100){super(t,"\n        // Vertex Shader\n        precision mediump int;\n        precision mediump float;\n        \n        uniform mat4  u_transform;\n        uniform vec3  u_camera_position;\n        uniform float u_size;\n \n        attribute vec3 a_vertex;\n        attribute vec2 a_uv;\n        attribute vec2 a_uv_wh;\n        \n        varying vec2  uv;\n        varying vec2  uv_size;\n        varying float point_size;\n        \n        void main() {\n        \n            // edit size based on distance from camera\n            float value = 15.0; // TODO how to derrive this???\n            float dis = distance(a_vertex, u_camera_position);\n            float size = u_size / (dis / value);\n            gl_PointSize = size;\n            point_size = size;\n\n            // Pass the point's texture coordinate to the fragment shader\n            uv = a_uv;\n            uv_size = a_uv_wh;\n            \n            // Transform the location of the vertex.\n            gl_Position = u_transform * vec4(a_vertex, 1.0);\n        }\n\n        ","\n\n        precision mediump int;\n        precision mediump float;\n    \n        uniform sampler2D u_texture;\n        uniform vec2      u_texture_size;  // delta_s, delta_t\n        \n        varying vec2  uv;\n        varying vec2  uv_size;\n        varying float point_size; // can this be replaced with u_size ??\n\n\n        void main() {\n            // NOTE this can be done way easier, we dont need uv sized, we just need to go to pixel space\n            \n            // make pixel-perfect, but round it so it has no artefacts.\n            // coord ~= gp_PointCoord\n            vec2 sprite_uv = gl_PointCoord * uv_size;\n            vec2 alpha = vec2(0.03);\n            vec2 x = fract(sprite_uv);\n            vec2 x_ = clamp(0.5 / alpha * x, 0.0, 0.5) +\n                      clamp(0.5 / alpha * (x - 1.0) + 0.5, 0.0, 0.5);\n            vec2 coord = (floor(sprite_uv) + x_);\n\n            // take the right part of the spritemap\n            vec2 texture_fraction = 1.0 / u_texture_size;\n            vec2 texture_topleft = uv * texture_fraction;\n            vec2 realCoord = texture_topleft + coord / u_texture_size;\n\n            gl_FragColor = texture2D(u_texture, realCoord);\n        }\n        "),this.uniforms.add("u_transform",16),this.radius=this.uniforms.add("u_size",1,[r]),this.color=this.uniforms.add("u_color",4,e),this.uniforms.add("u_camera_position",3),this.uniforms.add("u_texture_size",2,[16,16]),this.uniforms.addTexture("u_texture")}onInit(){return this.attributes.add("a_vertex",3),this.attributes.add("a_uv",2),this.attributes.add("a_uv_wh",2),v.Points}onLoad(t,e){return t instanceof Billboard&&(t=t.toPayload()),this.attributes.load("a_vertex",ToFloatMatrix(t.positions).data,e),this.attributes.load("a_uv",ToFloatMatrix(t.uvs).data,e),this.attributes.load("a_uv_wh",ToFloatMatrix(t.uvSizes).data,e),this.uniforms.loadTexture("u_texture",t.texture),this.uniforms.load2("u_texture_size",Vector2_Vector2.new(t.texture.width,t.texture.height)),t.positions.count}onDraw(t){this.uniforms.load3("u_camera_position",t.camera.pos.scaled(-1)),this.uniforms.loadMatrix4("u_transform",t.camera.totalMatrix)}}class DepthMeshShader extends ShaderProgram_ShaderProgram{constructor(t){super(t,"\n        precision mediump int;\n        precision mediump float;\n\n        attribute vec4 vertexPosition;\n\n        uniform mat4 worldMatrix;\n\n        void main() {\n            gl_Position = worldMatrix * vertexPosition;\n        }\n        ","\n        precision mediump int;\n        precision mediump float;\n\n        uniform vec4 ambientColor;\n\n        uniform float far;\n        uniform float near;\n\n        void main () {\n\n            float depth = gl_FragCoord.z * 0.06 + 0.6;\n            gl_FragColor = vec4(depth);\n        }\n        ")}onInit(){return this.attributes.add("vertexPosition",3),this.attributes.addIndex(b.UnsignedShort),this.uniforms.add("ambientColor",4,[1,1,1,1]),this.uniforms.add("worldMatrix",16),this.uniforms.add("far",1),this.uniforms.add("near",1),v.Triangles}onLoad(t,e){return this.attributes.load("vertexPosition",t.verts.slice().data,e),this.attributes.loadIndex(t.links.data,e),t.links.data.length}loadColor(t){this.useProgram(),this.uniforms.loadColor("ambientColor",t)}onDraw(t){this.uniforms.loadMatrix4("worldMatrix",t.camera.totalMatrix),this.uniforms.load("far",t.camera.zFar),this.uniforms.load("near",t.camera.zNear)}}class DotShaderWithHeight extends ShaderProgram_ShaderProgram{constructor(t,e=5,r=[1,1,1,1],i,s=!0){let o="\n        precision mediump int;\n        precision mediump float;\n\n        uniform mat4 u_transform;\n        uniform vec4 u_color;\n        uniform float u_range;\n        uniform float u_size;\n\n        attribute vec3 a_vertex;\n\n        varying vec4 v_color;\n\n        void main() {\n            // Set the size of a rendered point.\n            gl_PointSize = u_size;\n            float factor = a_vertex.z / u_range;\n\n            v_color = vec4(u_color.xyz * factor, 1);\n\n            // Transform the location of the vertex.\n            gl_Position = u_transform * vec4(a_vertex, 1.0);\n        }\n\n        ";super(t,o,s?"\n        precision mediump int;\n        precision mediump float;\n\n        uniform vec4 u_color;\n        // vec2 center = vec2(0.5, 0.5);\n\n        varying vec4 v_color;\n\n        void main() {\n            gl_FragColor = v_color;\n        }\n        ":"\n        precision mediump int;\n        precision mediump float;\n\n        uniform vec4 u_color;\n        vec2 center = vec2(0.5, 0.5);\n\n        varying vec4 v_color;\n\n        void main() {\n            if (distance(center, gl_PointCoord) > 0.5) {\n               discard;\n            }\n            gl_FragColor = v_color;\n        }\n        "),this.uniforms.add("u_transform",16),this.size=this.uniforms.add("u_size",1,[e]),this.color=this.uniforms.add("u_color",4,r),this.height=this.uniforms.add("u_range",1,[i])}onInit(){return this.attributes.add("a_vertex",3),v.Points}onLoad(t,e){let r=ToFloatMatrix(t);return this.attributes.load("a_vertex",r.data,e),r.count()}onDraw(t){this.uniforms.loadMatrix4("u_transform",t.camera.totalMatrix)}}class ZebraShader extends ShaderProgram_ShaderProgram{constructor(t,e=!0){super(t,"\n        precision mediump int;\n        precision mediump float;\n\n        attribute vec4 position;\n        attribute vec2 uv;\n        attribute vec3 normal;\n        \n        uniform mat3 normalMatrix;\n        uniform mat4 worldMatrix;\n        uniform mat4 worldInverse;\n        uniform mat4 modelMatrix;\n        uniform vec3 sunPosition;\n        uniform vec3 cameraPosition;\n\n        varying vec2 varUv;\n        varying vec3 varNormal;\n        varying vec3 varToSun;\n        varying vec3 varToCamera;\n\n        void main() {\n            vec4 worldPosition = modelMatrix * position;\n            gl_Position = worldMatrix * worldPosition;\n            \n            varUv = uv;\n            varNormal = normalMatrix * normal;\n            varToSun = sunPosition - worldPosition.xyz;\n            varToCamera = cameraPosition - worldPosition.xyz;\n        }\n        ","\n        precision mediump int;\n        precision mediump float;\n\n        varying vec2 varUv;\n        varying vec3 varNormal;\n        varying vec3 varToSun;\n        varying vec3 varToCamera;\n    \n        uniform float zebraStripeCount;\n\n        // make from '/' curve a './' curve\n        float flattenPeakClamp(float x, float alpha) {\n            float beta = 0.5 - alpha;\n            float leftover = 1.0 - 2.0 * beta;\n            return clamp((x-beta) * (1.0 / leftover), 0.0, 1.0);\n        }\n\n        // make from '/' curve a '/' curve\n        float hillClamp(float x) {\n            float clamped = clamp(x, 0.0, 0.5) - clamp(x - 0.5, 0.0, 0.5);\n            return clamped * 2.0;\n        }\n\n        void main () {\n\n            // normalize \n            vec3 toSun = normalize(varToSun);\n            vec3 normal = normalize(varNormal);\n            vec3 toCamera = normalize(varToCamera);\n\n            // specular\n            vec3 reflectedLight = reflect(-toSun, normal);\n            float factor = dot(reflectedLight, toCamera);\n            factor = hillClamp(fract(factor * zebraStripeCount));\n            factor = flattenPeakClamp(factor, 0.05);\n\n            vec4 specularColor = vec4(vec3(factor), 1.0); \n\n            gl_FragColor = specularColor;\n        }\n        ")}onInit(){return this.attributes.add("position",3),this.attributes.add("uv",2),this.attributes.add("normal",3),this.attributes.addIndex(b.UnsignedShort),this.uniforms.add("worldMatrix",16),this.uniforms.add("worldInverse",16),this.uniforms.add("modelMatrix",16),this.uniforms.add("normalMatrix",9),this.uniforms.add("sunPosition",3),this.uniforms.add("cameraPosition",3),this.uniforms.add("zebraStripeCount",1,[7]),v.Triangles}onLoad(t,e){return this.loadPosition(t.position),this.loadMesh(t.model.mesh,e),t.model.mesh.maxSize}loadPosition(t){this.useProgram();t.decompose()[1];this.uniforms.loadMatrix4("modelMatrix",t),this.uniforms.loadMatrix3("normalMatrix",Matrix3_Matrix3.newIdentity())}loadMesh(t,e){this.useProgram(),this.attributes.loadIndex(t.links.data,e),this.attributes.load("position",t.verts.matrix.data,e),this.attributes.load("uv",t.uvs.matrix.data,e),this.attributes.load("normal",t.normals.matrix.data,e)}loadZebraStripeCount(t){this.uniforms.load("zebraStripeCount",t)}onDraw(t){this.uniforms.loadMatrix4("worldMatrix",t.camera.totalMatrix),this.uniforms.load3("sunPosition",t.sun.pos),this.uniforms.load3("cameraPosition",t.camera.getActualPosition())}}class SkyBoxShader extends ShaderProgram_ShaderProgram{constructor(t){super(t,"\n        precision mediump float;\n\n        attribute vec4 a_position;\n        varying vec4 v_position;\n        uniform mat4 u_viewDirectionProjectionInverse;\n\n        void main() {\n\n            v_position = a_position;\n            gl_Position = a_position;\n            gl_Position.z = 1.0;\n        }\n        ","\n        #define PI 3.1415926538;\n        #define TWO_PI 2.0 * PI;\n\n        precision mediump float;\n     \n        uniform samplerCube u_skybox;\n        uniform mat4 u_viewDirectionProjectionInverse;\n         \n        varying vec4 v_position;\n\n        void main() {\n            vec4 t = u_viewDirectionProjectionInverse * v_position;\n            vec3 normal = normalize(t.xyz / t.w);\n\n            // using cubemap\n            gl_FragColor = textureCube(u_skybox, normal);\n        }\n        ")}onInit(){return this.attributes.add("a_position",2),this.uniforms.add("u_viewDirectionProjectionInverse",16,Matrix4_Matrix4.newIdentity().data),this.uniforms.addCubeMap("u_skybox"),v.Triangles}onLoad(t,e){var r=new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]);return this.attributes.load("a_position",r,e),this.uniforms.loadCubeMapUrls("u_skybox",t),6}onDraw(t){this.uniforms.loadMatrix4("u_viewDirectionProjectionInverse",t.camera.inverseTotalViewMatrix)}}class DrawTarget{constructor(t,e,r,i,s){this.width=t,this.height=e,this.texture=r,this.depthBuffer=i,this.frameBuffer=s}static createAndBind(t,e,r){const i=t.createTexture();t.bindTexture(t.TEXTURE_2D,i);const s=t.RGBA,o=t.RGBA,n=t.UNSIGNED_BYTE;t.texImage2D(t.TEXTURE_2D,0,s,e,r,0,o,n,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE);const a=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,a),t.viewport(0,0,e,r);const h=t.COLOR_ATTACHMENT0;t.framebufferTexture2D(t.FRAMEBUFFER,h,t.TEXTURE_2D,i,0);const l=t.createRenderbuffer();return t.bindRenderbuffer(t.RENDERBUFFER,l),t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,e,r),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,l),new DrawTarget(e,r,i,l,a)}bind(t){p.setDrawTarget(t,this.frameBuffer,this.width,this.height)}unbind(t){p.resetDrawTarget(t)}}class GraphDebugShader extends MultiShader{constructor(t,e=[1,0,0,.25],r=[1,0,0,1],i=!0){super(),this.faceRend=new SimpleMeshShader(t,e),this.lineRend=new LineShader(t,r),this.pointRend=new DotShader(t,7,r,!1),i&&(this.normRend=new NormalShader(t))}set(t,e=g.StaticDraw){this.pointRend.set(t.allVertPositions(),e),this.lineRend.set(t.toLines(),e)}render(t){this.pointRend.render(t),this.lineRend.render(t)}setAndRender(t,e){throw new Error("Method not implemented.")}}!function(t){t[t.None=0]="None",t[t.Rotate=1]="Rotate",t[t.Pan=2]="Pan",t[t.Zoom=3]="Zoom"}(C||(C={}));class Camera{constructor(t,e=1,r=!1,i=!0){this.angleAlpha=0,this.angleBeta=0,this.mousePos=Vector2_Vector2.zero(),this.fov=20*Math.PI/100,this.zFar=1e4,this.zNear=.01,this.speed=10,this.rotateSmoothener=.9,this.scrollSmoothener=.9,this.worldPlane=Plane_Plane.WorldXY(),this.positionM=Matrix4_Matrix4.new(),this.rotateXRev=Matrix4_Matrix4.new(),this.rotateZRev=Matrix4_Matrix4.new(),this.rotateX=Matrix4_Matrix4.new(),this.rotateZ=Matrix4_Matrix4.new(),this.rotate=Matrix4_Matrix4.new(),this.calculateInverseMatrices=!0,this.rotateDropoffDelta=Vector2_Vector2.zero(),this.zoomDelta=0,this.getRelativeUnitZ=()=>{let t=this.rotateXRev;return this.rotateZRev.multiplyVector(t.multiplyVector(Vector3_Vector3.unitZ()))},this.getRelativeTrueUnitY=()=>{let t=this.rotateXRev;return this.rotateZRev.multiplyVector(t.multiplyVector(Vector3_Vector3.unitY()))},this.getRelativeUnitY=()=>this.rotateZRev.multiplyVector(Vector3_Vector3.unitY()),this.getRelativeUnitX=()=>this.rotateZRev.multiplyVector(Vector3_Vector3.unitX()),this.canMove=r,this.canControl=i,this.pos=new Vector3_Vector3(0,0,0),this.offset=new Vector3_Vector3(0,0,-e),this.updateMatrices(t.width,t.height)}get zoom(){return this.offset.z}set zoom(t){this.offset.z=t}static new(t,e=1,r=!1){return new Camera(t,e,r)}update(t,e=!0){var r;let i=this.updateControlsNew(t);return(i||e)&&this.updateMatrices(t.width,t.height),null===(r=t.keys)||void 0===r||r.onPressed(m.P,this.printState.bind(this)),i}updateOld(t,e=!0){let r=this.updateControlsOld(t);return(r||e)&&this.updateMatrices(t.canvas.width,t.canvas.height),t.IsKeyPressed("p")&&this.printState(),r}printState(){D.log(`camera state: [${this.pos.x.toPrecision(5)}, ${this.pos.y.toPrecision(5)}, ${this.pos.z.toPrecision(5)}, ${this.zoom}, ${this.angleAlpha},${this.angleBeta}]`),D.log("speed is now: "+this.speed)}getActualPosition(){return this.inverseWorldMatrix.multiplyVector(Vector3_Vector3.zero())}getState(){return[this.pos.x,this.pos.y,this.pos.z,this.zoom,this.angleAlpha,this.angleBeta]}setState(t){this.pos.x=t[0],this.pos.y=t[1],this.pos.z=t[2],this.zoom=t[3],this.angleAlpha=t[4],this.angleBeta=t[5]}set(t,e,r){this.zoom=t,this.angleAlpha=e,this.angleBeta=r}updateMatrices(t,e){let r=this.offset,i=Matrix4_Matrix4.newTranslation(this.pos.x,this.pos.y,this.pos.z),s=Matrix4_Matrix4.newTranslation(r.x,r.y,r.z);this.rotateX=Matrix4_Matrix4.newXRotation(this.angleAlpha,this.rotateX),this.rotateXRev=Matrix4_Matrix4.newXRotation(-this.angleAlpha,this.rotateXRev),this.rotateZ=Matrix4_Matrix4.newZRotation(this.angleBeta,this.rotateZ),this.rotateZRev=Matrix4_Matrix4.newZRotation(-this.angleBeta,this.rotateZRev),this.rotate.copy(this.rotateZ).multiply(this.rotateX);let o=i.multiply(this.rotate).multiply(s),n=this.getProjectionMatrix(t,e),a=o.multiplied(n);var h=Matrix4_Matrix4.newCopy(o);h.data[12]=0,h.data[13]=0,h.data[14]=0;let l=this.rotate.multiplied(n);this.worldMatrix=o,this.projectMatrix=n,this.totalMatrix=a,this.calculateInverseMatrices&&(this.inverseWorldMatrix=this.worldMatrix.inverse(),this.inverseTransposeMatrix=this.inverseWorldMatrix.transpose(),this.inverseTotalViewMatrix=l.inverse())}lookat(t,e){Matrix4_Matrix4.newLookAt(t,e,this.worldPlane.khat)}updateControlsOld(t){if(!this.canControl)return!1;let e=this.getMoveModeFromKeyboard(t),r=this.mousePos.clone(),i=t.mousePos.clone();this.mousePos=i;let s=r.clone().sub(this.mousePos),o=t.mouseScrollDelta,n=this.updatePointerControls(e,s,o),a=this.updateKeyboardControlsOld(t);return this.updatePointerStyle(),n||a}updateControlsNew(t){if(!this.canControl)return!1;let e=C.None,r=Vector2_Vector2.zero(),i=0,s=!1,o=!1;if(t.touch&&(e=this.getMoveModeFromTouch(t.touch),t.touch.down>0?(r=t.touch.fingers[0].delta,this.mousePos.copy(t.touch.fingers[0].pos)):r=Vector2_Vector2.zero(),e==C.Zoom&&(r.x=0,r.y=0,i=.05*t.touch.zoomDelta)),t.mouse){e=this.getMoveModeFromKeyboardNew(t.keys,t.mouse);let s=this.mousePos.clone(),o=t.mouse.pos.clone();this.mousePos=o,r=s.clone().sub(this.mousePos),this.scrollSmoothener=.9,i=3*t.mouse.scrollDelta}return t.keys&&(o=this.updateKeyboardControls(t.keys)),s=this.updatePointerControls(e,r,i),this.updatePointerStyle(),s||o}getMoveModeFromTouch(t){return t.down>3?C.Pan:2==t.down?C.Zoom:1==t.down?C.Rotate:C.None}getMoveModeFromKeyboard(t){let e=t.mouseRightDown,r=t.IsKeyDown("control"),i=t.IsKeyDown("shift");return!e||r||i?e&&r&&!i?C.Zoom:t.mouseRightDown&&!r&&i?C.Pan:C.None:C.Rotate}getMoveModeFromKeyboardNew(t,e){let r=e.rightDown,i=t.isDown(m.Ctrl),s=t.isDown(m.Shift);return!r||i||s?r&&i&&!s?C.Zoom:r&&!i&&s?C.Pan:C.None:C.Rotate}updatePointerControls(t,e,r){let i=!1;if(!this.canControl)return i;if(t==C.Rotate&&(i=0!=e.y||0!=e.x,this.rotateDropoffDelta.copy(e)),!this.rotateDropoffDelta.roughlyEquals(Vector2_Vector2._zero,.1)){i=!0;let t=.003;this.angleAlpha=GeonMath.clamp(this.angleAlpha+this.rotateDropoffDelta.y*t,0,Math.PI),this.angleBeta+=this.rotateDropoffDelta.x*-t,this.rotateDropoffDelta.scale(this.rotateSmoothener)}if(0!=r){let t=.03;this.zoomDelta+=r*t}return t==C.Zoom&&(this.zoomDelta-=5e-4*e.y),GeonMath.isRougly(this.zoomDelta,0,.001)||(i=!0,this.zoom=Math.min(-.001,this.zoom*(1+this.zoomDelta)),this.zoomDelta*=this.scrollSmoothener),t==C.Pan&&(i=!0,this.pos.add(this.getRelativeUnitX().scale(5e-4*this.zoom*e.x)),this.pos.add(this.getRelativeTrueUnitY().scale(5e-4*this.zoom*-e.y))),i}updatePointerStyle(){}updateKeyboardControlsOld(t){let e=!1;return t.IsKeyPressed("r")&&(this.speed*=2),t.IsKeyPressed("f")&&(this.speed=Math.max(.5*this.speed,.1)),this.canMove?(t.IsKeyDown("s")&&(e=!0,this.pos.add(this.getRelativeUnitY().scale(.01*this.speed))),t.IsKeyDown("w")&&(e=!0,this.pos.add(this.getRelativeUnitY().scale(-.01*this.speed))),t.IsKeyDown("a")&&(e=!0,this.pos.add(this.getRelativeUnitX().scale(.01*this.speed))),t.IsKeyDown("d")&&(e=!0,this.pos.add(this.getRelativeUnitX().scale(-.01*this.speed))),t.IsKeyDown("q")&&(e=!0,this.pos.z+=.01*this.speed),t.IsKeyDown("e")&&(e=!0,this.pos.z-=.01*this.speed),e):e}updateKeyboardControls(t){let e=!1;return t.isPressed(m.R)&&(this.speed*=2),t.isPressed(m.F)&&(this.speed=Math.max(.5*this.speed,.1)),this.canMove?(t.isDown(m.S)&&(e=!0,this.pos.add(this.getRelativeUnitY().scale(.01*this.speed))),t.isDown(m.W)&&(e=!0,this.pos.add(this.getRelativeUnitY().scale(-.01*this.speed))),t.isDown(m.A)&&(e=!0,this.pos.add(this.getRelativeUnitX().scale(.01*this.speed))),t.isDown(m.D)&&(e=!0,this.pos.add(this.getRelativeUnitX().scale(-.01*this.speed))),t.isDown(m.Q)&&(e=!0,this.pos.z+=.01*this.speed),t.isDown(m.E)&&(e=!0,this.pos.z-=.01*this.speed),e):e}getCameraPoint(){return this.inverseWorldMatrix.multiplyVector(new Vector3_Vector3(0,0,0))}getMouseWorldRay(t,e,r=!0){let i=this.mousePos,s=t/e,o=(i.x/t-.5)*s,n=i.y/e-.5,a=.5/Math.tan(this.fov/2),h=this.inverseWorldMatrix,l=h.multiplyVector(new Vector3_Vector3(0,0,0)),d=h.multiplyVector(new Vector3_Vector3(1,0,0)),c=h.multiplyVector(new Vector3_Vector3(0,1,0)),u=h.multiplyVector(new Vector3_Vector3(0,0,-1)),m=d.sub(l).normalize(),f=c.sub(l).normalize(),g=u.sub(l).normalize(),p=r?l.added(g.scaled(a)).add(m.scaled(o)).add(f.scaled(-n)):l.added(g.scaled(a));return Ray.fromPoints(l,p)}getProjectionMatrix(t,e){let r=t/e;return Matrix4_Matrix4.newPerspective(this.fov,r,this.zNear,this.zFar)}}class Light{constructor(t,e){this.pos=t,this.color=e}static new(t,e=Color.fromRGB()){return new Light(t,e)}static newDirectional(t,e=Color.fromRGB()){return new Light(t,e)}}class Scene{constructor(t,e=Light.new(Vector3_Vector3.new(30,40,50),Color.fromHSL(.1)),r=[]){this.camera=t,this.sun=e,this.lights=r}static new(t,e,r){return new Scene(t,e,r)}}var D,E,Microphone_awaiter=function(t,e,r,i){return new(r||(r=Promise))((function(s,o){function fulfilled(t){try{step(i.next(t))}catch(t){o(t)}}function rejected(t){try{step(i.throw(t))}catch(t){o(t)}}function step(t){t.done?s(t.value):function adopt(t){return t instanceof r?t:new r((function(e){e(t)}))}(t.value).then(fulfilled,rejected)}step((i=i.apply(t,e||[])).next())}))};class Microphone{constructor(t,e,r,i,s,o){this.ac=t,this.microphone=e,this.analyser=r,this.array=i,this.normedArray=s,this.delayedArray=o}static new(t=512){return Microphone_awaiter(this,void 0,void 0,(function*(){let e=yield navigator.mediaDevices.getUserMedia({audio:!0}),r=new AudioContext,i=r.createMediaStreamSource(e),s=r.createAnalyser();s.fftSize=t;const o=s.frequencyBinCount;let n=new Uint8Array(o),a=new Float32Array(o),h=new Float32Array(o);return i.connect(s),new Microphone(r,i,s,n,h,a)}))}getTimeDomain(){return this.analyser.getByteTimeDomainData(this.array),this.array}getFrequency(){return this.analyser.getByteFrequencyData(this.array),this.array}getTimeDomainNormalized(){this.getTimeDomain();for(let t=0;t<this.array.length;t++)this.normedArray[t]=this.array[t]/128-1;return this.normedArray}getFrequencyNormalized(){this.getFrequency();for(let t=0;t<this.array.length;t++)this.normedArray[t]=this.array[t]/128-1;return this.normedArray}getTimeDomainDelayed(t=.97){this.getTimeDomainNormalized();for(let e=0;e<this.array.length;e++)this.normedArray[e]>this.delayedArray[e]?this.delayedArray[e]=this.normedArray[e]:this.delayedArray[e]*=t;return this.delayedArray}getFrequencyDelayed(t=.97){this.getTimeDomainNormalized();for(let e=0;e<this.array.length;e++)this.normedArray[e]>this.delayedArray[e]?this.delayedArray[e]=this.normedArray[e]:this.delayedArray[e]*=t;return this.delayedArray}}!function(t){t.Active=!0,t.Once=!0,t.Times=0;let e=0;t.dispatch=function dispatch(t,e="my-log-event"){let r=new CustomEvent(e,{detail:{message:t}});document.dispatchEvent(r)},t.logOnce=function logOnce(e,...r){t.Active&&t.Once&&(console.log(e,...r),t.Once=!1)},t.logTimes=function logTimes(r,i,...s){t.Active&&(t.Times=r,e+=1,e>t.Times||(console.log(i,...s),t.Once=!1))},t.assert=function assert(e,...r){t.Active&&console.assert(e,...r)},t.clear=function clear(){t.Active&&console.clear()},t.count=function count(e){t.Active&&console.count(e)},t.countReset=function countReset(e){t.Active&&console.countReset(e)},t.debug=function debug(e,...r){t.Active&&console.debug(e,...r)},t.dir=function dir(e,r){t.Active&&console.dir(e,r)},t.dirxml=function dirxml(...e){t.Active&&console.dir(...e)},t.error=function error(e,...r){t.Active&&console.error(e,...r)},t.group=function group(...e){t.Active&&console.group(...e)},t.groupCollapsed=function groupCollapsed(...e){t.Active&&console.groupCollapsed(...e)},t.groupEnd=function groupEnd(){t.Active&&console.groupEnd()},t.info=function info(e,...r){t.Active&&console.info(e,...r)},t.log=function log(e,...r){t.Active&&console.log(e,...r)},t.table=function table(e,r){t.Active&&console.log(e,r)},t.time=function time(e){t.Active&&console.time(e)},t.timeEnd=function timeEnd(e){t.Active&&console.timeEnd(e)},t.timeLog=function timeLog(e,...r){t.Active&&console.timeLog(e)},t.timeStamp=function timeStamp(e){t.Active&&console.timeStamp(e)},t.trace=function trace(e,...r){t.Active&&console.trace(e,...r)},t.warn=function warn(e,...r){t.Active&&console.warn(e,...r)}}(D||(D={})),function(t){t.sleep=function sleep(t){return new Promise((e=>setTimeout(e,t)))}}(E||(E={}));class BezierApp extends App{constructor(t){super(t),this.params=[];let e=t.canvas;this.camera=new Camera(e,-2,!0),this.camera.set(-10,1,1),this.dots=[],this.lines=[],this.drRed=new DotShader(t,10,[1,0,0,1],!1),this.drBlue=new DotShader(t,10,[0,0,1,1],!1),this.lrRed=new LineShader(t,[1,0,0,1]),this.lrBlue=new LineShader(t,[0,0,1,1]),this.lrGrid=new LineShader(t,[.3,.3,.3,1]),this.mr=new MeshDebugShader(t,[1,0,0,.5],[1,1,1,.5])}ui(t){this.params.push(Parameter.new("t",.6,0,1,.001)),t.addParameter(this.params[0],this.start.bind(this)),this.params.push(Parameter.new("increase degree",0,0,10,1)),t.addParameter(this.params[1],this.start.bind(this)),this.params.push(Parameter.new("cut",1,0,1,.001)),t.addParameter(this.params[2],this.start.bind(this)),this.params.push(Parameter.new("expand",0,0,1,.001)),t.addParameter(this.params[3],this.start.bind(this)),this.params.push(Parameter.new("detail",50,2,100,1)),t.addParameter(this.params[this.params.length-1],this.start.bind(this))}start(){this.startGrid();let t,e=this.params[0].get(),r=this.params[1].get(),i=this.params[2].get(),s=this.params[3].get(),o=this.params[this.params.length-1].get(),n=Bezier.fromList([Vector3_Vector3.new(-2,-2,0),Vector3_Vector3.new(-2,2,0),Vector3_Vector3.new(2,2,0),Vector3_Vector3.new(2,-2,0)]);[n,t]=n.splitAt(i);for(let t=0;t<r;t++)n=n.increaseDegree();n.extend(s);let a=Polynomial_Polynomial.decastejau(n.verts,e),h=[];for(let t=n.degree+1-1;t>-1;t-=1){if(t<1)continue;let e=MultiVector3_MultiVector3.new(t+1);for(let r=0;r<=t;r++){let i=Util.iterateTriangle(t,r);e.set(r,a.get(i))}h.push(MultiLine.fromPolyline(Polyline.new(e)))}this.lrBlue.set(MultiLine.fromJoin(h)),this.drBlue.set(a),this.dots=[],this.dots.push(...n.verts.toList()),this.dots.push(n.pointAt(e)),this.dots.push(n.pointAt(e).add(n.tangentAt(e))),this.dots.push(n.pointAt(e).add(n.normalAt(e))),this.lines=[],this.lines.push(n.buffer(o)),this.lines.push(Circle3.newPlanar(n.pointAt(e),.1).buffer())}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY(),100,2);this.lrGrid.set(t,g.StaticDraw)}update(t){this.camera.update(t)}draw(){let t=new Scene(this.camera);this.lrGrid.render(t),this.drRed.setAndRender(this.dots,t),this.drBlue.render(t),this.lrRed.setAndRender(MultiLine.fromJoin(this.lines),t),this.lrBlue.render(t)}}class BezierCpApp extends App{constructor(t){super(t),this.params=[],this.plane=Plane_Plane.WorldXY(),this.point=Vector3_Vector3.zero();let e=t.canvas;this.camera=new Camera(e,-2,!0),this.camera.set(-10,1,1),this.dots=[],this.lines=[],this.drRed=new DotShader(t,10,[1,0,0,1],!1),this.drBlue=new DotShader(t,10,[0,0,1,1],!1),this.lrRed=new LineShader(t,[1,0,0,1]),this.lrBlue=new LineShader(t,[0,0,1,1]),this.lrWhite=new LineShader(t,[1,1,1,1]),this.lrGrid=new LineShader(t,[.3,.3,.3,1]),this.mr=new MeshDebugShader(t,[1,0,0,.5],[1,1,1,.5])}ui(t){this.params.push(Parameter.new("t",.6,0,1,.001)),t.addParameter(this.params[0],this.start.bind(this)),this.params.push(Parameter.new("detail",50,2,100,1)),t.addParameter(this.params[this.params.length-1],this.start.bind(this))}start(){this.startGrid();let t=this.params[0].get(),e=this.params[this.params.length-1].get();this.bezier=Bezier.fromList([Vector3_Vector3.new(-2,-2,0),Vector3_Vector3.new(-2,2,0),Vector3_Vector3.new(2,2,0),Vector3_Vector3.new(2,-2,0)]);let r=this.bezier;this.dots=[],this.dots.push(...r.verts.toList()),this.dots.push(r.pointAt(t)),this.dots.push(r.pointAt(t).add(r.tangentAt(t))),this.dots.push(r.pointAt(t).add(r.normalAt(t))),this.lines=[],this.lines.push(r.buffer(e)),this.lines.push(Circle3.newPlanar(r.pointAt(t),.1).buffer())}startGrid(){let t=MultiLine.fromGrid(this.plane,100,2);this.lrGrid.set(t,g.StaticDraw)}update(t){this.camera.update(t),this.updateCursor(t)}updateCursor(t){let e=this.camera.getMouseWorldRay(t.width,t.height),r=e.xPlane(this.plane);this.point=e.at(r);let i=[];i.push(Circle3.newPlanar(this.point,.1).buffer()),r=this.bezier.ApproxClosestPoint(this.point);let s=this.bezier.pointAt(r);i.push(Circle3.newPlanar(s,.1).buffer()),this.lrBlue.set(MultiLine.fromJoin(i))}draw(){let t=new Scene(this.camera);this.lrGrid.render(t),this.drRed.setAndRender(this.dots,t),this.drBlue.render(t),this.lrRed.setAndRender(MultiLine.fromJoin(this.lines),t),this.lrBlue.render(t),this.lrWhite.render(t)}}class IcosahedronApp extends App{constructor(t){super(t),this.radius=.1,this.detail=10;let e=t.canvas;this.scene=new Scene(new Camera(e,8,!0)),this.meshRend=new PhongShader(t),this.normalRend=new NormalShader(t),this.skyboxShader=new SkyBoxShader(t)}getIcosahedron(){return Mesh_Mesh.newIcosahedron(1).toGraph()}getDemoShape(){let t=Graph.new();function addVert(e){t.addVert(e,e)}return addVert(new Vector3_Vector3(-1,0,-1)),addVert(new Vector3_Vector3(0,1,-1)),addVert(new Vector3_Vector3(1,0,-1)),addVert(new Vector3_Vector3(0,-1,-1)),addVert(new Vector3_Vector3(0,0,1)),addVert(new Vector3_Vector3(-1,1,0)),t.addEdge(4,0),t.addEdge(4,1),t.addEdge(4,2),t.addEdge(4,3),t.addEdge(0,1),t.addEdge(1,2),t.addEdge(2,3),t.addEdge(3,0),t.addEdge(1,3),t.print(),t}demo(){let t=new Graph,e=new Vector3_Vector3(0,0,1);return t.addVert(new Vector3_Vector3(0,0,0),e),t.addVert(new Vector3_Vector3(1,0,0),e),t.addVert(new Vector3_Vector3(0,1,0),e),t.addVert(new Vector3_Vector3(-1,0,0),e),t.addVert(new Vector3_Vector3(0,-1,0),e),t.addEdge(0,1),t.addEdge(0,2),t.addEdge(0,3),t.addEdge(0,4),t.addEdge(1,2),t}ui(t){this.rotate=new Parameter("rotate",1,0,1,1),this.inner=new Parameter("inner",1,0,1,1);t.addBooleanParameter(this.rotate),t.addBooleanParameter(this.inner,(()=>{this.start()}))}start(){this.graph=this.getIcosahedron();let t=function graphToMultiMesh(t,e,r,i,s=!0){let o=[];s&&t.allVertPositions().forEach((t=>{o.push(Mesh_Mesh.newSphere(t,2*e,r,2*r))}));let n=t.allEdgeVerts();for(let i=0;i<n.length;i+=2){let s=t.getVertexPos(n[i]),a=t.getVertexPos(n[i+1]),h=Mesh_Mesh.newCylinder(s,a,e,r);o.push(h)}i&&o.push(Mesh_Mesh.fromGraph(t));let a=Mesh_Mesh.fromJoin(o);return a.ensureUVs(),a.calcAndSetVertexNormals(),a}(this.graph,this.radius,this.detail,1==this.inner.get()),e=Entity.new(void 0,Model.new(t,void 0));this.meshRend.load(e),this.isocahedron=e,this.skyboxShader.load(["./data/textures/corona_ft.png","./data/textures/corona_bk.png","./data/textures/corona_up.png","./data/textures/corona_dn.png","./data/textures/corona_rt.png","./data/textures/corona_lf.png"])}update(t){if(this.scene.camera.update(t),1==this.rotate.get()){let e=2e-4*t.time.tick,r=Matrix4_Matrix4.newXRotation(e).multiply(Matrix4_Matrix4.newYRotation(e));this.isocahedron.position.multiply(r),this.meshRend.loadPosition(this.isocahedron.position)}}draw(){this.meshRend.draw(this.scene),this.skyboxShader.draw(this.scene)}}class LoftApp extends App{constructor(t){super(t),this.params=[];let e=t.canvas;this.camera=new Camera(e,-2,!0),this.camera.set(-10,1,1),this.dots=[],this.lines=[],this.drRed=new DotShader(t,10,[1,0,0,1],!1),this.drBlue=new DotShader(t,10,[0,0,1,1],!1),this.lrRed=new LineShader(t,[1,0,0,1]),this.lrBlue=new LineShader(t,[0,0,1,1]),this.lrGrid=new LineShader(t,[.3,.3,.3,1]),this.mr=new MeshDebugShader(t,[1,0,0,.5],[1,1,1,.5])}ui(t){this.params.push(Parameter.new("u",.5,0,1,.001)),t.addParameter(this.params[0],this.start.bind(this)),this.params.push(Parameter.new("v",.5,0,1,.001)),t.addParameter(this.params[1],this.start.bind(this)),this.params.push(Parameter.new("displace bottom",0,-5,5,.001)),t.addParameter(this.params[2],this.start.bind(this)),this.params.push(Parameter.new("detail",10,2,100,1)),t.addParameter(this.params[this.params.length-1],this.start.bind(this))}start(){this.startGrid();let t=this.params[0].get(),e=this.params[1].get(),r=this.params[2].get(),i=this.params[this.params.length-1].get(),s=[Bezier.fromList([Vector3_Vector3.new(3,-1,4),Vector3_Vector3.new(1,-2,4),Vector3_Vector3.new(1,2,4.5),Vector3_Vector3.new(-1,1,4)]),Bezier.fromList([Vector3_Vector3.new(3,-1,2),Vector3_Vector3.new(1,-1,1.5),Vector3_Vector3.new(1,1,1.5),Vector3_Vector3.new(-1,1,2),Vector3_Vector3.new(-2,1,2),Vector3_Vector3.new(-4,2,3)]),Bezier.fromList([Vector3_Vector3.new(3,-1,0),Vector3_Vector3.new(1,-1,0),Vector3_Vector3.new(1,1,0),Vector3_Vector3.new(-1,1,0)])];s[2].move(Vector3_Vector3.new(0,r,0));let o=Loft.new(s);this.dots=[],this.dots.push(o.pointAt(t,e)),this.lines=[],this.lines.push(o.isoCurveV(t).buffer(i)),this.lines.push(o.isoCurveU(e).buffer(i)),this.mr.set(o.buffer(i,i).ToShaderMesh())}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY(),100,2);this.lrGrid.set(t,g.StaticDraw)}update(t){this.camera.update(t)}draw(){let t=new Scene(this.camera);this.lrGrid.render(t),this.drRed.setAndRender(this.dots,t),this.drBlue.render(t),this.lrRed.setAndRender(MultiLine.fromJoin(this.lines),t),this.lrBlue.render(t),this.mr.render(t)}}class SplineApp extends App{constructor(t){super(t),this.params=[];let e=t.canvas;this.camera=new Camera(e,-2,!0),this.camera.set(-10,1,1),this.dots=[],this.lines=[],this.drRed=new DotShader(t,10,[1,0,0,1],!1),this.drBlue=new DotShader(t,10,[0,0,1,1],!1),this.lrRed=new LineShader(t,[1,0,0,1]),this.lrBlue=new LineShader(t,[0,0,1,1]),this.lrGrid=new LineShader(t,[.3,.3,.3,1]),this.mr=new MeshDebugShader(t,[1,0,0,.5],[1,1,1,.5])}ui(t){this.params.push(Parameter.new("t",.6,0,1,.001)),t.addParameter(this.params[0],this.start.bind(this)),this.params.push(Parameter.new("degree",1,1,10,1)),t.addParameter(this.params[1],this.start.bind(this)),this.params.push(Parameter.new("n control points",4,0,1e3,1)),t.addParameter(this.params[2],this.start.bind(this)),this.params.push(Parameter.new("detail",50,2,1e3,1)),t.addParameter(this.params[this.params.length-1],this.start.bind(this))}start(){this.startGrid(),console.clear();let t=this.params[0].get(),e=this.params[1].get(),r=this.params[2].get(),i=this.params[this.params.length-1].get(),s=Domain3.fromRadii(5,5,1),o=Random_Random.fromSeed(1234),n=Spline.new(s.populate(r,o),e);this.dots=[],this.dots.push(...n.verts.toList()),this.dots.push(n.pointAt(t)),this.lines=[],this.lines.push(n.buffer(i)),this.lines.push(Circle3.newPlanar(n.pointAt(t),.1).buffer())}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY(),100,2);this.lrGrid.set(t,g.StaticDraw)}update(t){this.camera.update(t)}draw(){let t=new Scene(this.camera);this.lrGrid.render(t),this.drRed.setAndRender(this.dots,t),this.drBlue.render(t),this.lrRed.setAndRender(MultiLine.fromJoin(this.lines),t),this.lrBlue.render(t)}}class SurfaceApp extends App{constructor(t){super(t),this.params=[];let e=t.canvas;this.camera=new Camera(e,-2,!0),this.camera.setState([21.926,11.337,-10.04,-10,1.12,1.08]),this.seed=Random_Random.randomSeed(),this.dots=[],this.lines=[],this.drBlue=new DotShader(t,10,[0,0,1,1],!1),this.lrRed=new LineShader(t,[1,0,0,1]),this.lrGrid=new LineShader(t,[.3,.3,.3,1]),this.mr=new MeshDebugShader(t,[1,0,0,.5],[1,1,1,.5])}ui(t){this.params.push(Parameter.new("degree",3,2,6,1)),t.addParameter(this.params[0],this.start.bind(this)),this.params.push(Parameter.new("displace",4,0,10,.001)),t.addParameter(this.params[1],this.start.bind(this)),this.params.push(Parameter.new("detail",50,2,100,1)),t.addParameter(this.params[2],this.start.bind(this))}start(){this.startGrid();let t=this.params[0].get(),e=this.params[1].get(),r=this.params[2].get(),i=Random_Random.fromSeed(this.seed),s=Domain_Domain2.fromRadius(-11).offset([-22,22,0,0]).spawn(t+1,t+1).to3D().forEach((t=>t.add(Vector3_Vector3.fromRandomUnit(i).scale(e)).add(Vector3_Vector3.unitZ().scale(5)))),o=BezierSquare.new(s,t,t);this.drBlue.set(s),this.lines=[],this.mr.set(o.buffer(r,r).ToShaderMesh())}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY(),100,2);this.lrGrid.set(t,g.StaticDraw)}update(t){this.camera.update(t)}draw(){let t=new Scene(this.camera);this.lrRed.setAndRender(MultiLine.fromJoin(this.lines),t),this.drBlue.render(t),this.lrGrid.render(t),this.mr.render(t)}}class SurfaceCpApp extends App{constructor(t){super(t),this.params=[],this.plane=Plane_Plane.WorldXY();let e=t.canvas;this.camera=new Camera(e,-2,!0),this.camera.setState([21.926,11.337,-10.04,-10,1.12,1.08]),this.seed=Random_Random.randomSeed(),this.dots=[],this.lines=[],this.drBlue=new DotShader(t,10,[0,0,1,1],!1),this.lrRed=new LineShader(t,[1,0,0,1]),this.lrGrid=new LineShader(t,[.3,.3,.3,1]),this.mr=new MeshDebugShader(t,[1,0,0,.5],[1,.5,.5,.5]),this.mr2=new MeshDebugShader(t,[0,1,1,.25],[0,1,1,.75])}ui(t){this.params.push(Parameter.new("degree",3,2,6,1)),t.addParameter(this.params[0],this.start.bind(this)),this.params.push(Parameter.new("displace",4,0,10,.001)),t.addParameter(this.params[1],this.start.bind(this)),this.params.push(Parameter.new("detail",50,2,100,1)),t.addParameter(this.params[2],this.start.bind(this))}start(){this.startGrid();let t=this.params[0].get(),e=this.params[1].get(),r=this.params[2].get(),i=Random_Random.fromSeed(this.seed),s=Domain_Domain2.fromRadius(-11).offset([-22,22,0,0]).spawn(t+1,t+1).to3D().forEach((t=>t.add(Vector3_Vector3.fromRandomUnit(i).scale(e)).add(Vector3_Vector3.unitZ().scale(5)))),o=BezierSquare.new(s,t,t);this.surface=o,this.drBlue.set(s),this.lines=[],this.mr.set(o.buffer(r,r).ToShaderMesh())}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY(),100,2);this.lrGrid.set(t,g.StaticDraw)}update(t){this.camera.update(t),this.updateCursor(t)}updateCursor(t){let e=this.camera.getMouseWorldRay(t.width,t.height),r=(e.xPlane(this.plane),e.at(20)),i=[];i.push(Mesh_Mesh.newSphere(r,1,10,10));let s=this.surface.approxClosestPoint(r),o=this.surface.pointAtUV(s);i.push(Mesh_Mesh.newSphere(o,1,10,10)),this.mr2.set(Mesh_Mesh.fromJoin(i).ToShaderMesh(),g.DynamicDraw)}draw(){let t=new Scene(this.camera);this.lrRed.setAndRender(MultiLine.fromJoin(this.lines),t),this.drBlue.render(t),this.lrGrid.render(t),this.mr.render(t),this.mr2.render(t)}}class LeastSquaresApp extends App{constructor(t){super(t),this.params=[],this.count=2;let e=t.canvas;this.rng=Random_Random.fromSeed(1234),this.camera=new Camera(e,-2,!0),this.drRed=new DotShader(t,10,[1,0,0,1],!1),this.drGreen=new DotShader(t,10,[0,1,0,1],!1),this.drBlue=new DotShader(t,10,[0,0,1,1],!1),this.lineRenderer=new LineShader(t,[.3,.3,.3,1]),this.points=createRandomPoints(16,1,this.rng),this.resetCamera()}ui(t){this.params.push(new Parameter("x",0,-5,5,.1)),this.params.push(new Parameter("y",0,-5,5,.1)),this.params.push(new Parameter("z",0,-5,5,.1));const e=6.283,r=.12566;this.params.push(new Parameter("a",0,-6.283,e,r)),this.params.push(new Parameter("b",0,-6.283,e,r)),this.params.push(new Parameter("g",0,-6.283,e,r)),this.params.push(new Parameter("sx",1,-5,5,.1)),this.params.push(new Parameter("sy",1,-5,5,.1)),this.params.push(new Parameter("sz",1,-5,5,.1)),this.params.push(new Parameter("noise",0,0,1,.01)),this.params.push(Parameter.newBoolean("realtime",!0)),this.params.push(new Parameter("point count",16,1,100,1));let i=this.params,recalc=()=>{1==this.params[10].state&&this.start()};t.addText("Using least squares adjustment & singular value decomposition to solve a 3D transformation between points. F12 for more info"),t.addText("translate"),t.addParameter(i[0],recalc),t.addParameter(i[1],recalc),t.addParameter(i[2],recalc),t.addText("rotate"),t.addParameter(i[3],recalc),t.addParameter(i[4],recalc),t.addParameter(i[5],recalc),t.addText("scale"),t.addParameter(i[6],recalc),t.addParameter(i[7],recalc),t.addParameter(i[8],recalc),t.addText(""),t.addParameter(i[9],recalc),t.addParameter(i[11],(()=>{this.points=createRandomPoints(this.params[11].get(),1,this.rng),this.start()})),t.addBooleanParameter(i[10]),t.addButton("recalculate",(()=>{this.start()}))}resetCamera(){this.camera.zoom=-10,this.camera.angleAlpha=.25*Math.PI,this.camera.angleBeta=.25*Math.PI}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY().moveTo(new Vector3_Vector3(0,0,-1)),100,2);this.lineRenderer.set(t,g.StaticDraw)}start(){console.clear();let t=Matrix4_Matrix4.newTranslation(this.params[0].get(),this.params[1].get(),this.params[2].get()),e=Matrix4_Matrix4.newXRotation(this.params[3].get()),r=Matrix4_Matrix4.newYRotation(this.params[4].get()),i=Matrix4_Matrix4.newZRotation(this.params[5].get()),s=e.multiplied(r).multiplied(i),o=Matrix4_Matrix4.newScaler(this.params[6].get(),this.params[7].get(),this.params[8].get()).multiplied(s.multiplied(t));this.Pnormal=this.points.clone().transform(o);let n=Random_Random.fromSeed(123494854),a=this.params[9].get();this.Pnormal=this.Pnormal.map(((t,e)=>t.add(Vector3_Vector3.fromRandomUnit(n).scale(a))));let h=function leastSquares(t,e){if(t.count!=e.count)throw"matrices need to be of equal width & height";let r=t.count,i=4,s=3,o=16,n=new FloatMatrix_FloatMatrix(o,s*r);for(let a=0;a<r;a++){let r=[...t.slice().getRow(a),1],h=[...e.slice().getRow(a),1];for(let t=0;t<s;t++){let e=a*s+t,l=i*t;for(let t=0;t<r.length;t++)n.set(e,t+l,r[t]);l=o-i;for(let i=0;i<r.length;i++){let s=n.get(e,i+l);n.set(e,i+l,s+-1*h[t]*r[i])}}}let[a,h,l]=f.svd(n),d=l.getColumn(l.width-1),c=1/d[15];for(let t=0;t<d.length;t++)d[t]=Math.round(d[t]*c*1e5)/1e5;return Matrix4_Matrix4.new([...d]).transpose()}(this.points,this.Pnormal);this.Plsa=this.points.clone().transform(h),console.log("original matrix: (blue)"),o.print(),console.log(o.get(0,3)),console.log("lsa+svd recovered matrix from nothing but the points: (green)"),h.print(),this.startGrid()}update(t){this.camera.update(t)}draw(){let t=new Scene(this.camera);this.lineRenderer.render(t),this.drRed.setAndRender(this.points,t),this.drBlue.setAndRender(this.Pnormal,t),this.drGreen.setAndRender(this.Plsa,t)}}function createRandomPoints(t,e,r){let i=Domain3.fromBounds(-e,e,-e,e,-e,e),s=MultiVector3_MultiVector3.new(t);for(let e=0;e<t;e++)s.set(e,i.elevate(Vector3_Vector3.fromRandom(r)));return s}class PerlinApp extends App{constructor(t){super(t),this.params=[];let e=t.canvas;this.camera=new Camera(e,-2,!0),this.camera.setState([21.919,-.26769,-16.72,-10,.9,1.5700000000000014]),this.perlin=Perlin.new(),this.seed=Random_Random.randomSeed(),this.drRed=new DotShaderWithHeight(t,15,[1,0,0,1],5,!1),this.lrGrid=new LineShader(t,[.3,.3,.3,1])}ui(t){this.params.push(Parameter.new("count",200,2,500,1)),this.params.push(Parameter.new("displace",0,0,1,.001)),this.params.push(Parameter.newBoolean("perlin move",!0)),this.params.push(Parameter.new("perlin amp",5,1,10,.01)),this.params.push(Parameter.new("perlin speed",2.5,.5,10,.1)),t.addParameter(this.params[0],this.start.bind(this)),t.addParameter(this.params[1],this.start.bind(this)),t.addBooleanParameter(this.params[2],this.start.bind(this)),t.addParameter(this.params[3],this.start.bind(this)),t.addParameter(this.params[4],this.start.bind(this))}start(){this.startGrid();let t=this.params[0].get(),e=this.params[1].get(),r=Random_Random.fromSeed(this.seed),i=Domain_Domain2.fromRadius(11).spawn(t+1,t+1).to3D().forEach((t=>t.add(Vector3_Vector3.fromRandomUnit(r).scale(e))));this.dots=i,this.drRed.load(i,g.StaticDraw)}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY(),100,2);this.lrGrid.set(t,g.StaticDraw)}update(t){if(this.camera.update(t),1==this.params[2].get()){let e=this.params[3].get(),r=this.params[4].get(),i=MultiVector3_MultiVector3.new(this.dots.count);for(let s=0;s<this.dots.count;s++){let o=this.dots.get(s),n=this.perlin.noise(o.x,o.y,1e-4*t.time.newTime*r)*e;o.z=n,i.set(s,o)}this.drRed.load(i,g.DynamicDraw)}}draw(){let t=new Scene(this.camera);this.lrGrid.render(t),this.drRed.draw(t)}}var T,billboard_app_awaiter=function(t,e,r,i){return new(r||(r=Promise))((function(s,o){function fulfilled(t){try{step(i.next(t))}catch(t){o(t)}}function rejected(t){try{step(i.throw(t))}catch(t){o(t)}}function step(t){t.done?s(t.value):function adopt(t){return t instanceof r?t:new r((function(e){e(t)}))}(t.value).then(fulfilled,rejected)}step((i=i.apply(t,e||[])).next())}))};class BillboardApp extends App{constructor(t){super(t),this.params=[];let e=t.canvas;this.camera=new Camera(e,-2,!0),this.camera.set(-2,1,1),this.gs=new LineShader(t,[.3,.3,.3,1]),this.mr=DebugRenderer.new(t),this.ir=ImageRenderer.new(t),this.ir.scale=.2,this.br=new BillboardShader(t)}start(){return billboard_app_awaiter(this,void 0,void 0,(function*(){this.startGrid();let t=yield loadImageFromSrc("./data/textures/minecraft.png"),e=Bitmap_Bitmap.fromImageData(t);this.ir.add(e),this.ir.buffer();let r=e.width/16,i=e.height/16,s=Domain_Domain2.fromRadius(10).spawn(16,16).to3D(),o=Domain_Domain2.fromBounds(0,e.width-r,0,e.height-i).spawn(16,16),n=[];for(let t=0;t<o.count;t++)n.push(Vector2_Vector2.new(r,i));let a={positions:s,uvs:o,uvSizes:MultiVector2_MultiVector2.fromList(n),texture:e};this.br.load(a,g.StaticDraw)}))}ui(t){}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY().moveTo(Vector3_Vector3.new(0,0,-1)),100,2);this.gs.set(t,g.StaticDraw)}update(t){this.camera.update(t)}draw(){let t=new Scene(this.camera);this.gs.render(t),this.mr.render(t),this.ir.render(t),this.br.draw(t)}}class DotApp3 extends App{constructor(t){super(t),this.dots=[],this.dirs=[];let e=t.canvas;this.bounds=Domain3.fromBounds(-1,1,-1,1,-1,1),this.whiteDotRend=new DotShader(t,10,[1,1,1,1],!1),this.redDotRend=new DotShader(t,10,[1,0,0,1],!1),this.camera=new Camera(e)}start(){this.spawnSome(100,.001)}spawnSome(t,e){const r=Domain3.fromBounds(-e,e,-e,e,-e,e);let i=Random_Random.fromRandom();for(let e=0;e<t;e++)this.dots.push(this.bounds.elevate(Vector3_Vector3.fromRandom(i))),this.dirs.push(r.elevate(Vector3_Vector3.fromRandom(i)))}update(t){var e,r;this.camera.update(t),((null===(e=t.mouse)||void 0===e?void 0:e.leftPressed)||(null===(r=t.touch)||void 0===r?void 0:r.tab))&&this.spawnSome(100,.001);for(let t=0;t<this.dots.length;t++){let e=this.dots[t],r=this.dirs[t];this.bounds.x.includes(e.x)||(r.x=-r.x),this.bounds.y.includes(e.y)||(r.y=-r.y),this.bounds.z.includes(e.z)||(r.z=-r.z),e.add(r)}}draw(){let t=new Scene(this.camera);this.redDotRend.setAndRender(this.bounds.corners(Matrix4_Matrix4.newIdentity()),t),this.whiteDotRend.setAndRender(this.dots,t)}}class Stopwatch_Stopwatch{constructor(t,e){this.oldTime=t,this.newTime=e}static new(){let t=new Stopwatch_Stopwatch(0,0);return t.time(),t}time(){this.newTime=this.getTime();let t=this.newTime-this.oldTime;return this.oldTime=this.newTime,t}log(t){console.log(`${t} took: ${this.time()} ms`)}getTime(){return(new Date).getTime()}}function createGraph(t,e,r,i){let s=Mesh_Mesh.newIcosahedron(.5).toGraph(),o=new Vector3_Vector3(0,0,0);for(let r=0;r<e;r++)if(s.subdivide(),t>0){let e=s.getVertexCount();for(let r=0;r<e;r++){let e=s.getVertexPos(r),i=e,n=1-o.disTo(e);t>1?e.add(i.scaled(n)):e.add(i.normalized().scaled(n))}}1==i&&quadification(s);for(let t=0;t<r;t++)s.subdivideQuad();if(t>0){let e=s.getVertexCount();for(let r=0;r<e;r++){let e=s.getVertexPos(r),i=s.getVertexNormal(r),n=1-o.disTo(e);t>1?e.add(i.scaled(n)):e.add(i.normalized().scaled(n))}}return s}function createTileWorld(t,e){let r=new IntMatrix_IntMatrix(t,e);for(let t=0;t<r._height;t++){let e=(i=r._width+1,Math.floor(Math.random()*i));for(let i=0;i<r._width;i++)i<e?r.set(t,i,1):r.set(t,i,0)}var i;return r}function meshifyGraphSurface(t){let e=[],r=t.allVertLoopsAsInts();for(let i=0;i<r.length;i++){const s=r[i];if(s.length<4){console.log("invalids");continue}let o=s.map((e=>t.getVertexPos(e))),n=Mesh_Mesh.newQuad([o[0],o[3],o[1],o[2]]);e.push(n)}let i=Mesh_Mesh.fromJoin(e).ToShaderMesh();return i.calculateVertexNormals(),i}function meshifyTileWorld(t,e,r,i){let s=[],o=t.allVertLoopsAsInts();for(let n=0;n<o.length;n++){const a=o[n];if(a.length<4){console.log("invalids");continue}let h=a.map((e=>t.getVertexPos(e))),l=e.getRow(n);for(let t=0;t<e._width;t++){if(0==l[t])continue;let e=r+t*i,o=r+(t+1)*i,n=Mesh_Mesh.newOct([h[0].scaled(e),h[1].scaled(e),h[3].scaled(e),h[2].scaled(e),h[0].scaled(o),h[1].scaled(o),h[3].scaled(o),h[2].scaled(o)]);s.push(n)}}let n=Mesh_Mesh.fromJoin(s).ToShaderMesh();return n.calculateVertexNormals(),n}function averageEdgeLength(t){let e=0,r=0;return t.forEveryEdgeVerts(((t,i)=>{r+=t.disTo(i),e+=1})),r/e}function laPlacian(t){let e=t.getVertexCount(),r=[];for(let i=0;i<e;i++){if(t.getVert(i).dead)continue;let e=Vector3_Vector3.zero(),s=t.getVertNeighbors(i);for(let r of s)e.add(t.getVertexPos(r));e.scale(1/s.length),r.push(e)}for(let i=0;i<e;i++)t.getVertexPos(i).copy(r[i])}function squarification(t,e){let r=t.allVertLoopsAsInts(),i=r.length,s=new Array(i),o=new Array(t.verts.length),n=new Array(t.verts.length);for(let t=0;t<o.length;t++)o[t]=Vector3_Vector3.new(0,0,0),n[t]=0;let a=0;for(let h=0;h<i;h++){let i=s[h],l=r[h],d=l.length;if(0==l.length)throw"HELP, WE ARE NOT DEALING WITH QUADS HERE!";i=Vector3_Vector3.new(0,0,0);let c=new Array(d);for(let e=0;e<d;e++){let r=l[e];c[e]=t.getVertexPos(r),i.add(c[e])}i.scale(1/d);let u,m,f=0;for(let t=0;t<d;t++)f=i.disTo(c[t]);f/=d,a+=f,e?(u=e,m=e-f):(u=f,m=0);let g=Plane_Plane.from3pt(i,c[0],c[1]),p=new Array(l.length),w=Vector3_Vector3.new(0,0,0),x=2/d;for(let t=0;t<d;t++)p[t]=g.rotateVector(c[t],t*Math.PI*x),w.add(p[t]);w.scale(1/4);let _=w.subbed(i).normalize(),M=i.added(_.scaled(f)),v=1,V=200;v+=Math.max(-1*m*V,0);for(let t=0;t<d;t++){let e=l[t],r=g.rotateVector(M,t*Math.PI*x);o[e].add(r.scaled(v)),n[e]+=1}}for(let e=0;e<o.length;e++){let r=o[e],i=n[e];i<1||t.getVertexPos(e).add(r.scale(1/i))}return a/=i,a}function quadification(t){let e=t.edges.length,r=new Array(e),i=new Array(e);t.edges.forEach(((t,e)=>{r[e]=e,i[e]=!1}));r.sort(((t,e)=>.5-Math.random()));for(let s=0;s<e;s++){let e=r[s];if(t.edges[e].dead||i[e])continue;let o=t.getLoopsAdjacentToEdge(e);if(!(o[0].length>3||o[1].length>3)){for(let t of o)for(let e of t)i[e]=!0;t.deleteEdgeByIndex(e)}}}!function(t){t.createSphere=function createSphere(t=1,e=2,r=1,i=!0,s=!0){let o=Mesh_Mesh.newIcosahedron(.5).toGraph(),n=new Vector3_Vector3(0,0,0),a=1;a=2==t?1:o.getVertexPos(0).disTo(n);for(let r=0;r<e;r++)if(o.subdivide(),t>0){let e=o.getVertexCount();for(let r=0;r<e;r++){let e=o.getVertexPos(r),i=e,s=a-n.disTo(e);t>1?e.add(i.scaled(s)):e.add(i.normalized().scaled(s))}}i&&quadification(o);for(let t=0;t<r;t++)o.subdivideQuad();if(t>0){let e=o.getVertexCount();for(let r=0;r<e;r++){let e=o.getVertexPos(r),i=o.getVertexNormal(r),s=a-n.disTo(e);t>1?e.add(i.scaled(s)):e.add(i.normalized().scaled(s))}}return o}}(T||(T={}));class SphericalOneApp extends App{constructor(t){super(t,"setup for trying out different partitions of a sphere. Based on Oskar Stalberg's irregular quad grid"),this.radius=.1,this.smoothlimit=0;let e=t.canvas;this.camera=new Camera(e,1,!0),this.camera.set(-4.48,1.24,-.71),this.meshRend=new ShadedMeshShader(t),this.debugRend=new MeshDebugShader(t,[.5,0,0,1],[1,0,0,1],!1),this.graphRend=new GraphDebugShader(t,[.5,0,0,1],[1,69/255,0,1])}ui(t){let reset=()=>{this.start()};this.rotate=new Parameter("rotate",0,0,1,1),this.randomEdges=new Parameter("randomEdges",1,0,1,1),this.smooth=new Parameter("smooth",0,0,1,1),this.subCount=new Parameter("sub count",2,0,4,1),this.quadSubCount=new Parameter("sub count quad",1,0,2,1),this.liftType=EnumParameter.new("lift type",1,["none","sphere","buggy"]),t.addBooleanParameter(this.rotate),t.addBooleanParameter(this.randomEdges,reset),t.addBooleanParameter(this.smooth),t.addParameter(this.subCount,reset),t.addParameter(this.quadSubCount,reset),t.addParameter(this.liftType,reset),t.addButton("recalculate",reset)}start(){let t=this.liftType.get();const e=Mesh_Mesh.newIcosahedron(.5);let r=e.toGraph(),i=new Vector3_Vector3(0,0,0);this.smoothlimit=0,this.radius=2==t?1:r.getVertexPos(0).disTo(i),console.log("lets start subdivisions!");let s=Stopwatch_Stopwatch.new();for(let e=0;e<this.subCount.get();e++)if(r.subdivide(),t>0){let e=r.getVertexCount();for(let s=0;s<e;s++){let e=r.getVertexPos(s),o=e,n=i.disTo(e),a=this.radius-n;t>1?e.add(o.scaled(a)):e.add(o.normalized().scaled(a))}console.log("lift in ",s.time(),"ms")}console.log("subdivision in ",s.time(),"ms"),1==this.randomEdges.get()&&quadification(r),console.log("edge removal in ",s.time(),"ms");for(let t=0;t<this.quadSubCount.get();t++)r.subdivideQuad();if(console.log("quad subdivision in ",s.time(),"ms"),t>0){let e=r.getVertexCount();for(let s=0;s<e;s++){let e=r.getVertexPos(s),o=r.getVertexNormal(s),n=i.disTo(e),a=this.radius-n;t>1?e.add(o.scaled(a)):e.add(o.normalized().scaled(a))}console.log("lift in ",s.time(),"ms")}if(this.graph=r,1==t){let t=Mesh_Mesh.newSphere(Vector3_Vector3.zero(),.99*this.radius,6,10).ToShaderMesh();t.calculateVertexNormals(),this.meshRend.set(t,g.StaticDraw)}else if(0==t){let t=e.ToShaderMesh();t.transform(Matrix4_Matrix4.newScaler(.99,.99,.99)),t.calculateFaceNormals(),this.meshRend.set(t,g.StaticDraw)}this.graphRend.set(this.graph,g.DynamicDraw),this.average=averageEdgeLength(this.graph)}update(t){var e;if(this.camera.update(t),(null===(e=t.mouse)||void 0===e?void 0:e.rightDown)&&1==this.rotate.get()){let e=1e-4*t.time.tick,r=Matrix4_Matrix4.newXRotation(e).multiply(Matrix4_Matrix4.newYRotation(e));this.graph.transform(r)}1==this.smooth.get()?this.smoothlimit<1e3&&(this.cca=squarification(this.graph,this.cca),laPlacian(this.graph),this.graph.verts.forEach((t=>{let e=t.pos,r=this.radius-t.pos.length();t.pos.add(e.normalized().scaled(r))})),this.smoothlimit+=1):this.smoothlimit=0,this.graphRend.set(this.graph,g.DynamicDraw)}draw(){let t=new Scene(this.camera);this.meshRend.render(t),this.graphRend.render(t)}}class SphericalThreeApp extends App{constructor(t){super(t,"Multiple Layers of spherical geometry"),this.radius=1,this.smoothlimit=0;let e=t.canvas;this.camera=new Camera(e,1,!0),this.camera.set(-2,1.24,-.71),this.meshRend=new ShadedMeshShader(t),this.floorRend=new ShadedMeshShader(t),this.debugRend=new MeshDebugShader(t,[.5,0,0,1],[0,0,0,1],!1),this.graphRend=new GraphDebugShader(t,[.5,.5,.5,1],[1,1,1,1])}ui(t){let reset=()=>{this.start()};this.rotate=Parameter.newBoolean("rotate",!1),this.randomEdges=new Parameter("randomEdges",1,0,1,1),this.smooth=new Parameter("smooth",0,0,1,1),this.subCount=new Parameter("sub count",2,0,4,1),this.quadSubCount=new Parameter("sub count quad",1,0,2,1),t.addBooleanParameter(this.rotate),t.addBooleanParameter(this.randomEdges,reset),t.addBooleanParameter(this.smooth),t.addParameter(this.subCount,reset),t.addParameter(this.quadSubCount,reset),t.addButton("recalculate",reset)}start(){this.radius=1,this.smoothlimit=0,this.graph=createGraph(1,this.subCount.get(),this.quadSubCount.get(),this.randomEdges.get()),this.tiles=createTileWorld(this.graph.allVertLoopsAsInts().length,4),this.avEdgeLength=averageEdgeLength(this.graph),this.bufferWorld()}update(t){this.camera.update(t);Math.sin(t.time.newTime);if(1==this.rotate.get()){let e=Matrix4_Matrix4.newAxisRotation(Vector3_Vector3.unitZ(),1e-4*t.time.tick);this.world.position.multiply(e),this.worldFloor.position.multiply(e),this.meshRend.setShallow(this.gl,this.world),this.floorRend.setShallow(this.gl,this.worldFloor)}this.smoothWorld()}draw(){let t=new Scene(this.camera);this.meshRend.setShallow(this.gl,this.world),this.meshRend.render(t),this.meshRend.render(t),this.floorRend.render(t)}bufferWorld(){this.world=meshifyTileWorld(this.graph,this.tiles,this.radius,.1),this.world.calculateFaceNormals(),this.world.color=[.9,.9,.9,1],this.meshRend.set(this.world,g.StaticDraw),this.worldFloor=meshifyGraphSurface(this.graph),this.worldFloor.calculateFaceNormals(),this.worldFloor.color=[.3,.3,.3,1],this.floorRend.set(this.worldFloor,g.StaticDraw)}smoothWorld(){1==this.smooth.get()?this.smoothlimit<1e3&&(this.cca=squarification(this.graph,this.cca),laPlacian(this.graph),this.graph.verts.forEach((t=>{let e=t.pos,r=this.radius-t.pos.length();t.pos.add(e.normalized().scaled(r))})),this.smoothlimit+=1,this.bufferWorld()):this.smoothlimit=0}}class MeshInspectorApp extends App{constructor(t){super(t),this.plane=Plane_Plane.WorldXY(),this.geo=[],this.size=10,this.cellSize=.5,this.distance=new Parameter("distance",3,0,4,.01),this.radius=new Parameter("radius",1,0,4,.01),this.detail=new Parameter("detail",5,0,100,1),this.shademethod=EnumParameter.new("render method",3,["debug","vertex shaded","face shaded","ambient only"]);let e=t.canvas;this.camera=new Camera(e,void 0,!0),this.camera.zoom=-10,this.camera.angleAlpha=.4,this.camera.angleBeta=.5,this.dotRenderer=new DotShader(t,4,[0,1,0,1]),this.meshRenderer=new MeshDebugShader(t,[.6,0,0,1],[1,0,0,1]),this.lineRenderer=new LineShader(t,[.3,.3,.3,1]),this.shadedMeshRenderer=new ShadedMeshShader(t),this.ams=new AmbientMeshShader(t)}ui(t){t.addParameter(this.radius,(t=>{this.start()})),t.addParameter(this.distance,(t=>{this.start()})),t.addParameter(this.detail,(t=>{this.start()})),t.addParameter(this.shademethod,(t=>{this.start()}))}start(){let t=MultiLine.fromGrid(this.plane.clone().moveTo(new Vector3_Vector3(0,0,-this.radius.get())),100,2),e=2*this.detail.get(),r=this.radius.get(),i=this.distance.get(),s=this.detail.get(),o=Mesh_Mesh.fromJoin([Mesh_Mesh.newSphere(new Vector3_Vector3(i,0,0),this.radius.get(),this.detail.get(),e),Mesh_Mesh.newCone(new Vector3_Vector3(-i,0,-this.radius.get()),this.radius.get(),2*this.radius.get(),e),Mesh_Mesh.newCylinder(new Vector3_Vector3(0,0,-r),new Vector3_Vector3(0,0,r),r,s)]).ToShaderMesh();switch(o.calculateVertexNormals(),console.log("normal type",o.getNormalType()),this.shademethod.get()){case 0:this.meshRenderer.set(o);break;case 1:this.shadedMeshRenderer.set(o);break;case 2:o.calculateFaceNormals(),this.shadedMeshRenderer.set(o);break;case 3:this.ams.load(o.mesh,g.StaticDraw);break;case 4:Entity.new(Matrix4_Matrix4.newIdentity(),Model.new(o.mesh,Material.default()))}this.lineRenderer.set(t)}update(t){this.camera.update(t)}draw(){let t=new Scene(this.camera);switch(this.dotRenderer.render(t),this.shademethod.get()){case 0:this.meshRenderer.render(t);break;case 1:case 2:this.shadedMeshRenderer.render(t);break;case 3:this.ams.draw(t)}this.lineRenderer.render(t)}}var obj_loader_app_awaiter=function(t,e,r,i){return new(r||(r=Promise))((function(s,o){function fulfilled(t){try{step(i.next(t))}catch(t){o(t)}}function rejected(t){try{step(i.throw(t))}catch(t){o(t)}}function step(t){t.done?s(t.value):function adopt(t){return t instanceof r?t:new r((function(e){e(t)}))}(t.value).then(fulfilled,rejected)}step((i=i.apply(t,e||[])).next())}))};class ObjLoaderApp extends App{constructor(t){super(t);let e=t.canvas;this.dr=DebugRenderer.new(t),this.tr=TextureMeshShader.new(t),this.camera=new Camera(e,void 0,!0),addDropFileEventListeners(e,processFiles.bind(this))}start(){}update(t){this.camera.update(t)}draw(){let t=new Scene(this.camera);this.dr.render(t),this.tr.render(t)}}function processFiles(t){return obj_loader_app_awaiter(this,void 0,void 0,(function*(){let e,r;for(let i of t)i.name.includes(".obj")?e=i:i.name.includes(".jpg")||i.name.includes(".png")?r=i:console.warn(`dont know what to do with file: [${i.name}]`);if(!e)return void alert("no obj found");let i=function ShaderMesh_meshFromObj(t){let e=[],r=[],i=[],s=[];const o=/(\w*)(?: )*(.*)/,n=t.split("\n");for(let t=0;t<n.length;++t){const a=n[t].trim();if(""===a||a.startsWith("#"))continue;const h=o.exec(a);if(!h)continue;const[,l,d]=h,c=a.split(/\s+/).slice(1);switch(l){case"v":for(const t of c)e.push(parseFloat(t));break;case"vn":for(const t of c)r.push(parseFloat(t));break;case"vt":for(const t of c)i.push(parseFloat(t));break;case"f":for(const t of ProcessObjFace(c))s.push(t);break;default:console.warn("unhandled keyword:",l);continue}}return ShaderMesh_ShaderMesh.fromData(e,r,i,s)}(yield function loadTextFromFile(t){return new Promise(((e,r)=>{let i=new FileReader;i.readAsText(t),i.onload=()=>{e(i.result)},i.onerror=t=>r(t)}))}(e)),s=1/Domain3.fromInclude(i.mesh.verts).size().largestValue();if(i.mesh.verts.scale(Vector3_Vector3.new(s,s,s)),r){console.log("flipping texture");let t=yield function loadImageFromFile(t){return new Promise(((e,r)=>{let i=new FileReader;i.readAsDataURL(t),i.onload=()=>loadImageHelper1(i).then((t=>e(t)),(t=>r(t)))}))}(r);t=Bitmap_Bitmap.fromImageData(t).flipVer().toImageData(),i.setTexture(t),console.log("done flipping"),this.tr.set(i,g.StaticDraw)}else this.dr.set(i.mesh);console.log("done!")}))}class MultiRendererApp extends App{constructor(t){super(t),this.params=[];let e=t.canvas;this.camera=new Camera(e,-2,!0),this.camera.set(-2,1,1),this.gs=new LineShader(t,[.3,.3,.3,1]),this.mr=DebugRenderer.new(t),this.tms=TextureMeshShader.new(t)}start(){this.startGrid(),this.rng=Random_Random.fromSeed(10394),this.points=Domain3.fromRadius(10).populate(100,this.rng),this.mr.set(Domain3.fromRadius(10).populate(100,this.rng),"dots2",10,[0,1,0,1]),this.mr.set(this.points,"dots",10,[1,0,0,1]),this.points.forEach((t=>t.add(Vector3_Vector3.fromRandomUnit(this.rng))));let t=Bitmap_Bitmap.new(8,8);t.forEach(((t,e)=>[255*Math.random(),e,255,1])),this.mr.set(ImageMesh.new(t,Plane_Plane.WorldYZ().moveTo(Vector3_Vector3.new(4,0,0))),"image1"),t.forEach(((t,e)=>[255,255*Math.random(),255,1])),this.mr.set(ImageMesh.new(t,Plane_Plane.WorldYZ().moveTo(Vector3_Vector3.new(-4,0,0)),1),"image2"),t.forEach(((t,e)=>[255,255,255*Math.random(),1])),this.mr.set(ImageMesh.new(t,Plane_Plane.WorldXZ().moveTo(Vector3_Vector3.new(0,4,0)),1),"image3"),t.forEach(((t,e)=>[255*Math.random(),e,255,1])),this.mr.set(ImageMesh.new(t,Plane_Plane.WorldXZ().moveTo(Vector3_Vector3.new(0,-4,0)),1),"image4"),t.forEach(((t,e)=>[255,255*Math.random(),255,1])),this.mr.set(ImageMesh.new(t,Plane_Plane.WorldXY().moveTo(Vector3_Vector3.new(0,0,4)),1),"image5"),t.forEach(((t,e)=>[255,255,255*Math.random(),1])),this.mr.set(ImageMesh.new(t,Plane_Plane.WorldXY().moveTo(Vector3_Vector3.new(0,0,-4)),1),"image6"),this.mr.set(Polyline.new(this.points)),this.mr.set(Plane_Plane.WorldXZ().moveTo(this.points.get(0)),"plane"),this.mr.addUi(this.interface)}ui(t){this.interface=t}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY().moveTo(new Vector3_Vector3(0,0,-1)),100,2);this.gs.set(t,g.StaticDraw)}update(t){this.camera.update(t),this.points.forEach((t=>t.add(Vector3_Vector3.fromRandomUnit(this.rng)))),this.mr.set(this.points,"dots")}draw(){let t=new Scene(this.camera);this.gs.render(t),this.mr.render(t)}}class PhongApp extends App{constructor(t){super(t),this.material=Material.default(),this.plane=Plane_Plane.WorldXY(),this.geo=[],this.size=10,this.cellSize=.5,this.somePos=Vector3_Vector3.zero(),this.distance=new Parameter("distance",3,0,4,.01),this.radius=new Parameter("radius",1,0,4,.01),this.detail=new Parameter("detail",5,0,100,1),this.shademethod=EnumParameter.new("render method",3,["debug","vertex shaded","face shaded","ambient only","phong"]);let e=t.canvas;this.camera=new Camera(e,void 0,!0),this.camera.zoom=-10,this.camera.angleAlpha=.4,this.camera.angleBeta=.5,this.scene=new Scene(this.camera),this.lineRenderer=new LineShader(t,[.3,.3,.3,1]),this.phong=new PhongShader(t)}ui(t){t.addParameter(this.detail,(()=>{this.start()})),t.add3DParameter("sun",Domain3.fromRadius(50),1,this.scene.sun.pos),t.add3DParameter("position",Domain3.fromRadius(3),.01,this.somePos,(()=>{this.start()})),t.addParameter(Parameter.new("specular-dampner",.2,0,10,.001),(t=>{this.material.specularDampner=t,this.start()})),t.addColorParameter("ambient",this.material.ambient.toHex6(),(t=>{console.log(t);let e=Color.fromHex(t);e&&(this.material.ambient=e,this.phong.loadMaterial(this.material))})),t.addColorParameter("diffuse",this.material.diffuse.toHex6(),(t=>{console.log(t);let e=Color.fromHex(t);e&&(this.material.diffuse=e,this.phong.loadMaterial(this.material))})),t.addColorParameter("specular",this.material.specular.toHex6(),(t=>{console.log(t);let e=Color.fromHex(t);e&&(this.material.specular=e,this.phong.loadMaterial(this.material))})),t.addColorParameter("occluded",this.material.occluded.toHex6(),(t=>{console.log(t);let e=Color.fromHex(t);e&&(this.material.occluded=e,this.phong.loadMaterial(this.material))}))}start(){let t=MultiLine.fromGrid(this.plane.clone().moveTo(new Vector3_Vector3(0,0,-this.radius.get())),100,2),e=2*this.detail.get(),r=this.radius.get(),i=this.distance.get(),s=this.detail.get(),o=Mesh_Mesh.fromJoin([Mesh_Mesh.newSphere(new Vector3_Vector3(i,0,0),this.radius.get(),this.detail.get(),e),Mesh_Mesh.newCone(new Vector3_Vector3(-i,0,-this.radius.get()),this.radius.get(),2*this.radius.get(),e),Mesh_Mesh.newCylinder(new Vector3_Vector3(0,0,-r),new Vector3_Vector3(0,0,r),r,s)]);o.ensureUVs(),o.calcAndSetVertexNormals(),this.calcAmbientOcclusion(o,this.plane);let n=Model.new(o,this.material),a=Entity.new(Matrix4_Matrix4.newTranslate(this.somePos),n);this.phong.load(a,g.StaticDraw),this.lineRenderer.set(t)}calcAmbientOcclusion(t,e){let r=t.verts.count,i=new Float32Array(r);for(let s=0;s<r;s++){let r=t.verts.get(s).added(this.somePos),o=e.distanceTo(r);i[s]=Math.max(Math.min(.5-o/.5,.5),0)}this.phong.loadOcclusion(i,g.StaticDraw)}update(t){var e;this.camera.update(t),(null===(e=t.keys)||void 0===e?void 0:e.isPressed(m.K))&&(console.log(this.camera.worldMatrix.inverse().multiplyVector(Vector3_Vector3.new())),console.log(this.camera.pos),console.log(this.camera.getState()),console.log(this.camera.offset),this.camera.worldMatrix.print(),this.camera.worldMatrix.inverse().print())}draw(){this.phong.draw(this.scene),this.lineRenderer.render(this.scene)}}class CubesPhongApp extends App{constructor(t){super(t),this.plane=Plane_Plane.WorldXY(),this.dots=[],this.geo=[],this.mapGeo=[],this.size=50,this.cellSize=1,this.fov=new Parameter("fov",80,10,100,1);let e=new Camera(t.canvas,10,!0);this.scene=new Scene(e),this.phongShader=new PhongShader(t),this.dr=DebugRenderer.new(t),this.ds=new DepthMeshShader(t)}start(){this.map=new IntCube(this.size,this.size,this.size),this.map.fill(0),this.map.map(((t,e)=>Math.random()>.99?1:t)),this.bufferMap(),this.gridLarge=MultiLine.fromGrid(this.plane,this.size,this.cellSize),this.gridSmall=MultiLine.fromGrid(this.plane,10*this.size-1,this.cellSize/10)}ui(t){t.addParameter(this.fov,(t=>{this.scene.camera.fov=t}))}update(t){this.scene.camera.update(t),this.scene.sun.pos=this.scene.camera.getActualPosition(),this.updateCursor(t)}draw(){this.phongShader.draw(this.scene),this.dr.render(this.scene),this.ds.draw(this.scene)}addPreviewCube(t){let e=this.mapToWorld(t),r=this.createCube(e),i=Mesh_Mesh.fromCube(r).ToShaderMesh();i.calculateFaceNormals(),this.dr.set(i,"preview-cube")}flushPreviewCubes(){this.geo=[]}updateCursor(t){var e,r,i;let s=this.scene.camera.getMouseWorldRay(t.width,t.height);this.flushPreviewCubes();let[o,n]=this.voxelRaycast(s,40);if(-1==o)return;let a=this.map.getCoord(n);if(this.addPreviewCube(a),(null===(e=t.mouse)||void 0===e?void 0:e.leftPressed)||(null===(r=t.touch)||void 0===r?void 0:r.tab))if(console.log("click"),null===(i=t.keys)||void 0===i?void 0:i.isDown(m.Space)){if(0==this.map.data[o])return;this.map.data[o]=0,this.bufferMap()}else 1!=this.map.data[n]&&(this.map.data[n]=1,this.bufferMap())}voxelRaycast(t,e){let r=this.worldToMap(t.origin),i=this.mapToWorld(r),s=r.x,o=r.y,n=r.z,a=s,h=o,l=n,d=t.normal.x>0?1:-1,c=t.normal.y>0?1:-1,u=t.normal.z>0?1:-1,m=this.cellSize,f=m/Math.abs(t.normal.x),g=m/Math.abs(t.normal.y),p=m/Math.abs(t.normal.z);i.add(new Vector3_Vector3(m/2*d,m/2*c,m/2*u));let w=Matrix4_Matrix4.newTranslation(i.x,i.y,i.z),x=Plane_Plane.WorldXY();x._matrix.multiply(w);let _=Plane_Plane.WorldYZ();_._matrix.multiply(w);let M=Plane_Plane.WorldXZ();M._matrix.multiply(w);let v=t.xPlane(_),V=t.xPlane(M),y=t.xPlane(x);if(v<0||V<0||y<0)return console.log("something critical went wrong!"),[-1,-1];for(let t=0;t<e;t++){if(1==this.map.tryGet(s,o,n,-1))return[this.map.getIndex(s,o,n),this.map.getIndex(a,h,l)];a=s,h=o,l=n,v<V&&v<y?(v+=f,s+=d):V<y?(V+=g,o+=c):(y+=p,n+=u)}return[-1,-1]}bufferMap(){let t=[];this.map.iter(((e,r)=>{if(1==e){let e=this.map.getCoord(r),i=this.mapToWorld(e),s=this.createCube(i);t.push(Mesh_Mesh.fromCube(s))}}));let e=Mesh_Mesh.fromJoin(t);e=e.toLinearMesh(),e.ensureMultiFaceNormals(),e.ensureUVs();let r=Entity.new(void 0,Model.new(e,Material.newPurple()));r.model.material.specularDampner=2,r.model.mesh=e,this.phongShader.load(r,g.StaticDraw)}worldToMap(t){let e=this.size/2+this.cellSize/2;return t.added(new Vector3_Vector3(e,e,e)).floored()}mapToWorld(t){let e=this.size/2;return t.added(new Vector3_Vector3(-e,-e,-e))}createCube(t){let e=this.cellSize/2,r=Matrix4_Matrix4.newTranslation(t.x,t.y,t.z);return new Cube(Plane_Plane.WorldXY().transform(r),Domain3.fromBounds(-e,e,-e,e,-e,e))}}class ZebraApp extends App{constructor(t){super(t),this.material=Material.default(),this.plane=Plane_Plane.WorldXY(),this.geo=[],this.size=10,this.cellSize=.5,this.somePos=Vector3_Vector3.zero(),this.distance=new Parameter("distance",3,0,4,.01),this.radius=new Parameter("radius",1,0,4,.01),this.detail=new Parameter("detail",20,0,100,1),this.shademethod=EnumParameter.new("render method",3,["debug","vertex shaded","face shaded","ambient only","phong"]);let e=t.canvas;this.camera=new Camera(e,void 0,!0),this.camera.zoom=-10,this.camera.angleAlpha=.4,this.camera.angleBeta=.5,this.scene=new Scene(this.camera),this.lineRenderer=new LineShader(t,[.3,.3,.3,1]),this.phong=new ZebraShader(t,!0)}ui(t){t.addParameter(this.detail,(()=>{this.start()})),t.add3DParameter("sun",Domain3.fromRadius(50),1,this.scene.sun.pos),t.add3DParameter("position",Domain3.fromRadius(3),.01,this.somePos,(()=>{this.start()})),t.addParameter(Parameter.new("specular-dampner",.2,0,10,.001),(t=>{this.material.specularDampner=t,this.start()}))}start(){let t=MultiLine.fromGrid(this.plane.clone().moveTo(new Vector3_Vector3(0,0,-this.radius.get())),100,2),e=2*this.detail.get(),r=this.radius.get(),i=this.distance.get(),s=this.detail.get(),o=Mesh_Mesh.fromJoin([Mesh_Mesh.newSphere(new Vector3_Vector3(i,0,0),this.radius.get(),this.detail.get(),e),Mesh_Mesh.newCone(new Vector3_Vector3(-i,0,-this.radius.get()),this.radius.get(),2*this.radius.get(),e),Mesh_Mesh.newCylinder(new Vector3_Vector3(0,0,-r),new Vector3_Vector3(0,0,r),r,s)]);o.ensureUVs(),o.calcAndSetVertexNormals();let n=Model.new(o,this.material),a=Entity.new(Matrix4_Matrix4.newTranslate(this.somePos),n);this.phong.load(a,g.StaticDraw),this.lineRenderer.set(t)}update(t){this.camera.update(t)}draw(){this.phong.draw(this.scene),this.lineRenderer.render(this.scene)}}class TorusApp extends App{constructor(t){super(t),this.params=[];let e=t.canvas;this.gs=new LineShader(t,[.3,.3,.3,1]),this.dr=DebugRenderer.new(t),this.ps=PhongShader.new(t),this.entity=Entity.new(void 0,Model.new(void 0,Material.newPurple()));let r=new Camera(e,-2,!0);r.set(-50,1,1),this.scene=new Scene(r)}start(){this.startGrid();let t=Mesh_Mesh.newTorus(5,1,30,20);t.ensureUVs(),this.entity.model.mesh=t,this.ps.load(this.entity,g.StaticDraw)}ui(t){t.add3DParameter("sun",Domain3.fromRadius(5),.01,this.scene.sun.pos)}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY().moveTo(new Vector3_Vector3(0,0,-1)),100,2);this.gs.set(t,g.StaticDraw)}update(t){this.scene.camera.update(t);let e=5e-4*t.time.tick;this.entity.position.multiply(Matrix4_Matrix4.newYRotation(e)),this.entity.position.multiply(Matrix4_Matrix4.newZRotation(-e)),this.entity.position.multiply(Matrix4_Matrix4.newXRotation(e)),this.ps.loadPosition(this.entity.position)}draw(){this.gs.render(this.scene),this.dr.render(this.scene),this.ps.draw(this.scene)}}var canny_app_awaiter=function(t,e,r,i){return new(r||(r=Promise))((function(s,o){function fulfilled(t){try{step(i.next(t))}catch(t){o(t)}}function rejected(t){try{step(i.throw(t))}catch(t){o(t)}}function step(t){t.done?s(t.value):function adopt(t){return t instanceof r?t:new r((function(e){e(t)}))}(t.value).then(fulfilled,rejected)}step((i=i.apply(t,e||[])).next())}))};const z=["./data/textures/prague-darker.png","./data/textures/prague.png","./data/textures/prague-lighter.png"];class Settings{constructor(){this.parameters=new Map}get(t){return this.parameters.get(t).state}getParam(t){return this.parameters.get(t)}add(t){this.parameters.set(t.name,t)}publish(t,e){for(let r of this.parameters.values())t.addParameter(r,(t=>e()))}}class CannyApp extends App{constructor(t){super(t),this.guiPublished=!1;let e=t.canvas;this.dr=DebugRenderer.new(t);let r=new Camera(e,-2,!0);r.setState([493.3,-156.98,135.77,-50,1.5999999999999928,1.5707963267948966]),this.scene=new Scene(r),this.settings=new Settings,this.settings.add(EnumParameter.new("choose-image",0,z)),this.settings.add(Parameter.new("blur-size",3,3,7,2)),this.settings.add(Parameter.new("blur-sigma",1.4,.25,4,.01)),this.settings.add(Parameter.new("lower",130,1,255,1)),this.settings.add(Parameter.new("upper",246,1,255,1)),this.settings.add(Parameter.newBoolean("equalize-histogram",!0)),this.settings.add(Parameter.newBoolean("dynamic-threshold",!0))}start(){return canny_app_awaiter(this,void 0,void 0,(function*(){let t=this.settings,e=yield loadImageFromSrc(z[t.get("choose-image")]),r=Bitmap_Bitmap.fromImageData(e);i.canny(r,t.get("blur-sigma"),t.get("blur-size"),t.get("lower"),t.get("upper"),1===t.get("equalize-histogram"),1===t.get("dynamic-threshold"),this.dr),this.guiPublished||(this.gui.setContext("image-toggles-wrapper"),this.dr.addUi(this.gui),this.guiPublished=!0)}))}ui(t){this.gui=t,this.gui.addDiv("image-toggles-wrapper"),this.settings.publish(this.gui,(()=>{1==this.settings.get("auto-recalc")&&this.start()}));let e=Parameter.newBoolean("auto-recalc",!0);this.settings.add(e),this.gui.addBooleanParameter(e),this.gui.addButton("recalc",(()=>{this.start()}))}update(t){this.scene.camera.update(t)}draw(){this.dr.render(this.scene)}}class DrawTargetApp extends App{constructor(t){super(t),this.params=[];let e=t.canvas;this.gs=new LineShader(t,[.3,.3,.3,1]),this.ts=new TexturedMeshShader(t),this.ps=PhongShader.new(t),this.entity=Entity.new(),this.drawTarget=DrawTarget.createAndBind(t,e.width,e.height);let r=new Camera(e,-2,!0);r.set(-50,1,1),this.scene=new Scene(r)}start(){this.startGrid(),this.entity.model.mesh=this.entity.model.mesh.toLinearMesh();let t=this.entity.model.mesh;t.calcAndSetVertexNormals(),t.ensureUVs(),this.ps.load(this.entity,g.StaticDraw)}ui(t){t.add3DParameter("sun",Domain3.fromRadius(5),.01,this.scene.sun.pos)}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY().moveTo(new Vector3_Vector3(0,0,-1)),100,2);this.gs.set(t,g.StaticDraw),this.ts.load(Mesh_Mesh.fromRectDoubleSided(Rectangle3.new(Plane_Plane.WorldYZ().moveTo(Vector3_Vector3.new(3,0,3)),Domain_Domain2.fromRadius(4))))}update(t){this.scene.camera.update(t);let e=5e-4*t.time.tick;this.entity.position.multiply(Matrix4_Matrix4.newYRotation(e)),this.entity.position.multiply(Matrix4_Matrix4.newZRotation(-e)),this.entity.position.multiply(Matrix4_Matrix4.newXRotation(e)),this.ps.loadPosition(this.entity.position)}draw(){this.ts.loadTexture(this.drawTarget.width,this.drawTarget.height,null),this.drawTarget.bind(this.gl),this.gs.render(this.scene),this.ts.draw(this.scene),this.ps.draw(this.scene),this.drawTarget.unbind(this.gl),this.ts.loadTexture(this.drawTarget.width,this.drawTarget.height,this.drawTarget.texture),this.gs.render(this.scene),this.ts.draw(this.scene),this.ps.draw(this.scene)}}class LeastSquaresCircleApp extends App{constructor(t){super(t),this.params=[],this.points=[];let e=t.canvas,r=new Camera(e,10,!0);this.scene=new Scene(r),this.omni=DebugRenderer.new(t),this.ds=new DotShader(t),this.dsYellow=new DotShader(t,10,[0,1,1,1],!1)}ui(t){let e=Parameter.newBoolean("remove outliers",!1),r=Parameter.new("max allowed error",10,.5,100);this.params.push(e,r)}resetCamera(){this.scene.camera.zoom=-10,this.scene.camera.angleAlpha=.25*Math.PI,this.scene.camera.angleBeta=.25*Math.PI}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY(),100,1);this.omni.set(t,"grid",[.3,.3,.3,1])}start(){this.startGrid();let t=1e5*Math.random();Random_Random.fromSeed(t);console.log(t);let e=1==this.params[0].get(),r=this.params[1].get();this.lsa(e,r)}update(t){var e,r;if(this.scene.camera.update(t),(null===(e=t.mouse)||void 0===e?void 0:e.leftDown)||(null===(r=t.touch)||void 0===r?void 0:r.tab)){let t=this.scene.camera.getMouseWorldRay(this.gl.canvas.width,this.gl.canvas.height,!0),e=t.at(t.xPlane(Plane_Plane.WorldXY()));this.points.push(e),this.lsa()}}draw(){this.omni.render(this.scene),this.ds.render(this.scene),this.dsYellow.render(this.scene)}lsa(t=!1,e=5){if(this.ds.set(this.points,g.StaticDraw),this.points.length<5)return;let r=Plane_Plane.WorldXY(),i=MultiVector2_MultiVector2.fromList(this.points.map((t=>r.pullToPlane(t).to2D())));if(t){let t=o.circle2Progressive(i,e);if(!t)return;let{circle:r,included:s,excluded:n}=t;this.omni.set(MultiLine.fromCircle(Circle3.fromCircle2(r)),"circle",[1,0,1,1]),this.dsYellow.set(s,g.StaticDraw),this.ds.set(n,g.StaticDraw)}else{let t=Circle2.fromLSA(i);this.omni.set(MultiLine.fromCircle(Circle3.fromCircle2(t)),"circle",[1,0,1,1])}}}class SkyboxApp extends App{constructor(t){super(t),this.params=[];let e=t.canvas;this.camera=new Camera(e,-2,!0),this.camera.set(-2,1,1),this.gs=new LineShader(t,[.3,.3,.3,1]),this.skyboxShader=new SkyBoxShader(t)}start(){this.startGrid(),this.skyboxShader.load(["./data/textures/corona_ft.png","./data/textures/corona_bk.png","./data/textures/corona_up.png","./data/textures/corona_dn.png","./data/textures/corona_rt.png","./data/textures/corona_lf.png"])}ui(t){}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY().moveTo(new Vector3_Vector3(0,0,-1)),100,2);this.gs.set(t,g.StaticDraw)}update(t){this.camera.update(t)}draw(){let t=new Scene(this.camera);this.gs.render(t),this.skyboxShader.draw(t)}}class SphericalApp extends App{constructor(t){super(t,"Multiple Layers of spherical geometry"),this.radius=1,this.smoothlimit=0;let e=t.canvas;this.camera=new Camera(e,1,!0),this.camera.set(-2,1.24,-.71),this.meshRend=new ShadedMeshShader(t),this.floorRend=new ShadedMeshShader(t),this.debugRend=new MeshDebugShader(t,[.5,0,0,1],[0,0,0,1],!1),this.graphRend=new GraphDebugShader(t,[.5,.5,.5,1],[1,1,1,1]),this.skybox=new SkyBoxShader(t),this.scene=new Scene(this.camera),this.newMeshShader=new PhongShader(t)}ui(t){let reset=()=>{this.start()};this.rotate=Parameter.newBoolean("rotate",!1),this.randomEdges=new Parameter("randomEdges",1,0,1,1),this.smooth=new Parameter("smooth",0,0,1,1),this.subCount=new Parameter("sub count",2,0,4,1),this.quadSubCount=new Parameter("sub count quad",1,0,2,1),t.addBooleanParameter(this.rotate),t.addBooleanParameter(this.randomEdges,reset),t.addBooleanParameter(this.smooth),t.addParameter(this.subCount,reset),t.addParameter(this.quadSubCount,reset),t.addButton("recalculate",reset)}start(){this.radius=1,this.smoothlimit=0,this.graph=createGraph(1,this.subCount.get(),this.quadSubCount.get(),this.randomEdges.get()),this.tiles=createTileWorld(this.graph.allVertLoopsAsInts().length,1),this.avEdgeLength=averageEdgeLength(this.graph),this.bufferWorld()}update(t){this.camera.update(t),this.scene.sun.pos=this.scene.camera.getActualPosition();Math.sin(t.time.newTime);if(1==this.rotate.get()){let e=Matrix4_Matrix4.newAxisRotation(Vector3_Vector3.unitZ(),1e-4*t.time.tick);this.world.position.multiply(e),this.worldFloor.position.multiply(e),this.floorRend.setShallow(this.gl,this.worldFloor),this.newMeshShader.loadPosition(this.world.position)}this.smoothWorld()}draw(){this.floorRend.render(this.scene),this.newMeshShader.draw(this.scene),this.skybox.draw(this.scene)}bufferWorld(){this.world=meshifyTileWorld(this.graph,this.tiles,this.radius,.1);let t=this.world.mesh;t=t.toLinearMesh(),t.ensureMultiFaceNormals(),t.ensureUVs();let e=Model.new(t,Material.newPurple());this.newMeshShader.load(e.spawn()),this.world.color=[.9,.9,.9,1],this.meshRend.set(this.world,g.StaticDraw),this.worldFloor=meshifyGraphSurface(this.graph),this.worldFloor.calculateFaceNormals(),this.worldFloor.color=[.3,.3,.3,1],this.floorRend.set(this.worldFloor,g.StaticDraw)}smoothWorld(){1==this.smooth.get()?this.smoothlimit<1e3&&(this.cca=squarification(this.graph,this.cca),laPlacian(this.graph),this.graph.verts.forEach((t=>{let e=t.pos,r=this.radius-t.pos.length();t.pos.add(e.normalized().scaled(r))})),this.smoothlimit+=1,this.bufferWorld()):this.smoothlimit=0}}class MarchingCubeApp extends App{constructor(t){super(t),this.plane=Plane_Plane.WorldXY(),this.dots=[],this.geo=[],this.mapGeo=[],this.size=50,this.cellSize=1,this.perlinScale=.1,this.chunks=[];let e=new Camera(t.canvas,10,!0);e.zFar=1e7,this.scene=new Scene(e),this.chunkShaders=[],this.dr=DebugRenderer.new(t),this.ds=new DepthMeshShader(t),this.dotsShader=new DotShader(t),this.skyShader=new SkyBoxShader(t)}start(){this.terrain=VoxelTerrain.fromPerlin(this.size,this.cellSize,this.perlinScale),this.onTerrainChange(),this.skyShader.load(["./data/textures/corona_ft.png","./data/textures/corona_bk.png","./data/textures/corona_up.png","./data/textures/corona_dn.png","./data/textures/corona_rt.png","./data/textures/corona_lf.png"]);let t=Vector3_Vector3.new(-1e6,-1e6,0);this.scene.sun.pos.copy(t);let e=Mesh_Mesh.newSphere(t,5e4,20,20);this.sunShader=PhongShader.new(this.gl),this.sunShader.load(Entity.new(void 0,Model.new(e,Material.neutral())));let r=Vector3_Vector3.new(-1e4,1e4,1e3),i=Mesh_Mesh.newSphere(r,5e3,40,40);i.calcAndSetVertexNormals(),this.planetShader=PhongShader.new(this.gl);let s=Material.default();s.specularDampner=1e-4,s.specular=l.black,this.planetShader.load(Entity.new(void 0,Model.new(i,Material.default())))}update(t){this.scene.camera.update(t),this.scene.sun.pos=this.scene.camera.getActualPosition(),this.updateCursor(t)}draw(){this.dr.render(this.scene),this.ds.draw(this.scene),this.drawChunks(this.scene),this.skyShader.draw(this.scene),this.sunShader.draw(this.scene),this.planetShader.draw(this.scene)}drawChunks(t){for(let e of this.chunkShaders)e.draw(t)}onTerrainChange(){this.chunkShaders=[],this.chunks=this.terrain.bufferToMarchingCubesChunks();const t=Color.fromHex("7c5835"),e=Color.fromHex("66442c"),r=(Color.fromHex("4c2b21"),Color.fromHex("2e1915"),l.black),i=Color.fromHex("00000000");let s=new Material(r,t,e,i,10,1);for(let t of this.chunks){let e=new PhongShader(this.gl),r=Entity.new(void 0,Model.new(t,s));e.load(r),this.chunkShaders.push(e)}this.dotsShader.set(this.terrain.bufferToPoints())}addPreviewCube(t){let e=this.terrain.mapToWorld(t),r=Cube.fromRadius(e,this.terrain.cellSize/2),i=Mesh_Mesh.fromCube(r).ToShaderMesh();i.calculateFaceNormals(),this.dr.set(i,"preview-cube")}flushPreviewCubes(){this.geo=[]}updateCursor(t){var e;let r=this.scene.camera.getMouseWorldRay(t.width,t.height);this.flushPreviewCubes();let[i,s]=this.terrain.raycast(r,40);if(-1==i)return;let o=this.terrain.intCube.getCoord(s);if(this.addPreviewCube(o),t.mouse.leftPressed)if(null===(e=t.keys)||void 0===e?void 0:e.isDown(m.Space)){if(0==this.terrain.intCube.data[i])return;this.terrain.intCube.data[i]=0,this.onTerrainChange()}else 1!=this.terrain.intCube.data[s]&&(this.terrain.intCube.data[s]=1,this.onTerrainChange())}}class VoxelTerrain{constructor(t,e,r,i,s){this.intCube=t,this.size=e,this.cellSize=r,this.halfSize=i,this.halfSizePlus=s}static new(t,e){let r=IntCube.new(t,t,t),i=t/2;return new VoxelTerrain(r,t,e,i,i+e/2)}static fromPerlin(t,e,r=.2,i=Vector3_Vector3.zero()){let s=VoxelTerrain.new(t,e),o=new Perlin;return s.intCube.map(((t,e)=>{let n=s.intCube.getCoord(e);return s.intCube.isOnEdge(n.x,n.y,n.z)?0:o.noise(i.x+n.x*r,i.y+n.y*r,i.z+n.z*r)>.6?1:t})),s}worldToMap(t){return t.clone().addN(this.halfSizePlus).floored()}mapToWorld(t){return t.clone().addN(-this.halfSize)}bufferToPoints(){let t=[];return this.intCube.iter(((e,r)=>{if(1==e){let e=this.intCube.getCoord(r),i=this.mapToWorld(e);t.push(i)}})),t}bufferToVoxels(){let t=[];this.intCube.iter(((e,r)=>{if(1==e){let e=this.intCube.getCoord(r),i=this.mapToWorld(e),s=Cube.fromRadius(i,this.cellSize/2);t.push(Mesh_Mesh.fromCube(s))}}));let e=Mesh_Mesh.fromJoin(t);return e=e.toLinearMesh(),e.ensureMultiFaceNormals(),e.ensureUVs(),e}bufferToMarchingCubes(t=.5){let e=marchingCubes,r=[];this.intCube.iter(((i,s)=>{let o=this.intCube.getCoord(s);if(o.x>this.intCube._width-2||o.y>this.intCube._height-2||o.z>this.intCube._depth-2)return;let n=[Vector3_Vector3.new(o.x,o.y,o.z),Vector3_Vector3.new(o.x+1,o.y,o.z),Vector3_Vector3.new(o.x+1,o.y+1,o.z),Vector3_Vector3.new(o.x,o.y+1,o.z),Vector3_Vector3.new(o.x,o.y,o.z+1),Vector3_Vector3.new(o.x+1,o.y,o.z+1),Vector3_Vector3.new(o.x+1,o.y+1,o.z+1),Vector3_Vector3.new(o.x,o.y+1,o.z+1)],a=n.map((t=>this.intCube.tryGet(t.x,t.y,t.z,0))),h=n.map((t=>this.mapToWorld(Vector3_Vector3.new(t.x,t.y,t.z))));r.push(...e(h,a,t))}));let i=IntMatrix_IntMatrix.new(r.length/3,3,function getLongDefaultIndices(t){let e=new Uint32Array(t);for(let r=0;r<t;r++)e[r]=r;return e}(r.length)),s=Mesh_Mesh.new(MultiVector3_MultiVector3.fromList(r),i);return s=s.toLinearMesh(),s.ensureMultiFaceNormals(),s.ensureUVs(),s}bufferToMarchingCubesChunks(t=.5){let e=marchingCubes,r=[],i=[],createChunk=()=>{let t=IntMatrix_IntMatrix.new(r.length/3,3,getDefaultIndices(r.length)),e=Mesh_Mesh.new(MultiVector3_MultiVector3.fromList(r),t);e.calcAndSetFaceNormals(),e=e.toLinearMesh(),e.ensureUVs(),i.push(e)};return this.intCube.iter(((i,s)=>{r.length>6e4&&(createChunk(),r=[]);let o=this.intCube.getCoord(s);if(o.x>this.intCube._width-2||o.y>this.intCube._height-2||o.z>this.intCube._depth-2)return;let n=[Vector3_Vector3.new(o.x,o.y,o.z),Vector3_Vector3.new(o.x+1,o.y,o.z),Vector3_Vector3.new(o.x+1,o.y+1,o.z),Vector3_Vector3.new(o.x,o.y+1,o.z),Vector3_Vector3.new(o.x,o.y,o.z+1),Vector3_Vector3.new(o.x+1,o.y,o.z+1),Vector3_Vector3.new(o.x+1,o.y+1,o.z+1),Vector3_Vector3.new(o.x,o.y+1,o.z+1)],a=n.map((t=>this.intCube.tryGet(t.x,t.y,t.z,0))),h=n.map((t=>this.mapToWorld(Vector3_Vector3.new(t.x,t.y,t.z))));r.push(...e(h,a,t))})),createChunk(),i}raycast(t,e){let r=this.worldToMap(t.origin),i=this.mapToWorld(r),s=r.x,o=r.y,n=r.z,a=s,h=o,l=n,d=t.normal.x>0?1:-1,c=t.normal.y>0?1:-1,u=t.normal.z>0?1:-1,m=this.cellSize,f=m/Math.abs(t.normal.x),g=m/Math.abs(t.normal.y),p=m/Math.abs(t.normal.z);i.add(new Vector3_Vector3(m/2*d,m/2*c,m/2*u));let w=Matrix4_Matrix4.newTranslation(i.x,i.y,i.z),x=Plane_Plane.WorldXY();x._matrix.multiply(w);let _=Plane_Plane.WorldYZ();_._matrix.multiply(w);let M=Plane_Plane.WorldXZ();M._matrix.multiply(w);let v=t.xPlane(_),V=t.xPlane(M),y=t.xPlane(x);if(v<0||V<0||y<0)return console.log("something critical went wrong!"),[-1,-1];let b=this.intCube;for(let t=0;t<e;t++){if(1==b.tryGet(s,o,n,-1))return[b.getIndex(s,o,n),b.getIndex(a,h,l)];a=s,h=o,l=n,v<V&&v<y?(v+=f,s+=d):V<y?(V+=g,o+=c):(y+=p,n+=u)}return[-1,-1]}}var F,L,B,I,mic_app_awaiter=function(t,e,r,i){return new(r||(r=Promise))((function(s,o){function fulfilled(t){try{step(i.next(t))}catch(t){o(t)}}function rejected(t){try{step(i.throw(t))}catch(t){o(t)}}function step(t){t.done?s(t.value):function adopt(t){return t instanceof r?t:new r((function(e){e(t)}))}(t.value).then(fulfilled,rejected)}step((i=i.apply(t,e||[])).next())}))};class MicApp extends App{constructor(t){super(t);let e=t.canvas,r=new Camera(e,-2,!0);r.set(-2,1,1),this.grid=new LineShader(t,[.3,.3,.3,1]),this.debug=DebugRenderer.new(t),this.scene=new Scene(r),this.circles=[];for(let e=0;e<32;e++)this.circles[e]=new LineShader(t,Color.fromHSL(e/32).data)}start(){return mic_app_awaiter(this,void 0,void 0,(function*(){this.startGrid(),this.mic=yield Microphone.new(64)}))}ui(t){}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY().moveTo(new Vector3_Vector3(0,0,-1)),100,2);this.grid.set(t,g.StaticDraw)}update(t){if(this.scene.camera.update(t),!this.mic)return;let e=this.mic.getTimeDomainDelayed(),r=Plane_Plane.WorldXY();for(let t=0;t<32;t++){let i=Math.abs(e[t]);r.center=Vector3_Vector3.new(0,0,5*i),this.circles[t].set(Circle3.new(r,.1+t/32).buffer())}}draw(){this.grid.render(this.scene),this.debug.render(this.scene);for(let t=0;t<32;t++)this.circles[t].render(this.scene)}}!function(t){t[t.Left=0]="Left",t[t.Up=1]="Up",t[t.Right=2]="Right",t[t.Down=3]="Down"}(F||(F={})),function(t){t[t.PosX=0]="PosX",t[t.NegX=1]="NegX",t[t.PosY=2]="PosY",t[t.NegY=3]="NegY",t[t.PosZ=4]="PosZ",t[t.NegZ=5]="NegZ"}(L||(L={})),function(t){t[t.Left=0]="Left",t[t.UpLeft=1]="UpLeft",t[t.Up=2]="Up",t[t.UpRight=3]="UpRight",t[t.Right=4]="Right",t[t.DownRight=5]="DownRight",t[t.Down=6]="Down",t[t.DownLeft=7]="DownLeft"}(B||(B={})),function(t){t.Four=[B.Left,B.Up,B.Right,B.Down],t.Eight=[B.Left,B.UpLeft,B.Up,B.UpRight,B.Right,B.DownRight,B.Down,B.DownLeft],t.D8ToVector=function D8ToVector(t){switch(t){case B.Left:return Vector2_Vector2.new(-1,0);case B.UpLeft:return Vector2_Vector2.new(-1,-1);case B.Up:return Vector2_Vector2.new(0,-1);case B.UpRight:return Vector2_Vector2.new(1,-1);case B.Right:return Vector2_Vector2.new(1,0);case B.DownRight:return Vector2_Vector2.new(1,1);case B.Down:return Vector2_Vector2.new(0,1);case B.DownLeft:return Vector2_Vector2.new(-1,1)}},t.opposite=function opposite(t){switch(t){case B.Left:return B.Right;case B.UpLeft:return B.DownRight;case B.Up:return B.Down;case B.UpRight:return B.DownLeft;case B.Right:return B.Left;case B.DownRight:return B.UpLeft;case B.Down:return B.Up;case B.DownLeft:return B.UpRight}}}(I||(I={}));class GenMatrix{constructor(t,e,r){this.width=t,this.height=e,this.data=r}static new(t,e){let r=new Array(t*e);return new GenMatrix(t,e,r)}get(t,e){return this.data[e*this.width+t]}set(t,e,r){this.data[e*this.width+t]=r}tryGet(t,e){return this.inRange(t,e)?this.get(t,e):void 0}trySet(t,e,r){return this.inRange(t,e)?this.set(t,e,r):void 0}inRange(t,e){return!(t<0||t>=this.width||e<0||e>=this.height)}getNbCellsDelta(t){let e=new Array,r=this.width*this.height;if(t>=r)return e;let i=t%this.width!=0,s=(t+1)%this.width!=0,o=t-this.width>0,n=t+this.width<r;return s&&e.push(1),o&&e.push(-this.width),i&&e.push(-1),n&&e.push(this.width),e}getNbCells(t){return this.getNbCellsDelta(t).map((e=>t+e))}getNbCells8(t){return this.getNbCells8Delta(t).map((e=>t+e))}getNbCells8Delta(t){let e=new Array,r=this.width*this.height;if(t>=r)return e;let i=t%this.width!=0,s=(t+1)%this.width!=0,o=t-this.width>0,n=t+this.width<r;return s&&e.push(1),o&&s&&e.push(1-this.width),o&&e.push(-this.width),o&&i&&e.push(-this.width-1),i&&e.push(-1),n&&i&&e.push(this.width-1),n&&e.push(this.width),n&&s&&e.push(this.width+1),e}getDirectionFromDifference(t){return 1===t?B.Right:t===1-this.width?B.UpRight:t===-this.width?B.Up:t===-this.width-1?B.UpLeft:-1===t?B.Left:t===this.width-1?B.DownLeft:t===this.width?B.Down:t===this.width+1?B.DownRight:void 0}}class TileSolver{constructor(t,e,r){this.cells=t,this.atlas=e,this.random=r}static new(t,e,r){let i=t.prototypes.length,s=GenMatrix.new(e,r);for(let t=0;t<s.data.length;t++)s.data[t]=new Uint8Array(i),s.data[t].fill(1);return new TileSolver(s,t,Random_Random.fromRandom())}solve(){for(let t=0;t<1e7;t++){if(this.isCollapsed())return!0;this.solveStep()}return console.error("max iteration reached in solve!"),!1}solveStep(){let t=this.getCellsWithLeastEntrophy()[0],e=new Uint8Array(this.cells.data[t]),r=this.pickRandomOption(t),i=this.removeInvalidOptions(t);return i||(console.count("backing up..."),this.cells.data[t]=e,this.removeOption(t,r)),i}pickRandomOption(t){let e=this.cells.data[t],r=[],i=[];for(let t=0;t<e.length;t++)1==e[t]&&(r.push(t),i.push(this.atlas.prototypes[t].probability));let s=this.random.choose(r),o=this.random.chooseWeighted(r,i);return D.logTimes(10,{choice:s,choicew:o,options:r,weights:i}),this.setOption(t,o),s}removeInvalidOptions(t,e=1e7,r=!1){let i=new Array,s=new Set,o=new Array,restoreState=()=>{for(let t of o)this.addOption(t[0],t[1])};i.push(t);for(let t=0;t<e;t++){if(i.length<1)return!0;let t=i.pop();s.add(t),r&&(console.log("-----------------"),console.log("SOURCE:",t,"|",this.getOptions(t).length),this.atlas.printConcatConnections(this.getOptions(t)));for(let e of this.cells.getNbCells8(t)){if(s.has(e))continue;let n=this.getOptions(e),a=this.removeInvalidOptionsOfNeighbor(t,e,o,r);if(0==n.length)return restoreState(),!1;a&&i.push(e)}}return console.error("max iteration reached!"),restoreState(),!1}removeInvalidOptionsOfNeighbor(t,e,r,i=!1){let isTargetAllowed=(t,e,r)=>{for(let i of t)if(this.atlas.canBeConnected(i,e,r))return!0;return!1},s=!1,o=this.cells.getDirectionFromDifference(e-t),n=this.getOptions(t),a=this.getOptions(e),h=a.length;for(let t of a)isTargetAllowed(n,t,o)||(this.removeOption(e,t),r.push([e,t]),s=!0);if(i){let t=this.getOptions(e).length;console.log("NB",B[o],":",e,"|",h,"->",t)}return s}isCollapsed(t=!1){for(let e=0;e<this.cells.data.length;e++){let r=this.getOptions(e);if(t&&console.log(r),1!==r.length)return!1}return!0}getOptions(t){let e=[],r=this.cells.data[t];for(let t=0;t<r.length;t++)1==r[t]&&e.push(t);return e}getEntrophy(t){let e=0,r=this.cells.data[t];for(let t=0;t<r.length;t++)if(1==r[t]){let r=this.atlas.prototypes[t].probability;e+=r*Math.log(r)}return-e}setOption(t,e){let r=this.cells.data[t];r.fill(0),r[e]=1}removeOption(t,e){this.cells.data[t][e]=0}addOption(t,e){this.cells.data[t][e]=1}getTileOptions(t){return this.getOptions(t).map((t=>this.atlas.tiles[this.atlas.prototypes[t].tile]))}getCellsWithLeastOptions(){let t=[],e=1/0;for(let r=0;r<this.cells.data.length;r++){let i=this.getOptions(r);1!=i.length&&(i.length==e?t.push(r):i.length<e&&(t=[],t.push(r),e=i.length))}return t}getCellsWithLeastEntrophy(){let t=[],e=1/0;for(let r=0;r<this.cells.data.length;r++){let i=this.getOptions(r),s=this.getEntrophy(r);1!=i.length&&(s==e?t.push(r):s<e&&(t=[],t.push(r),e=s))}return t}renderResult(){let t=Bitmap_Bitmap.new(this.cells.width,this.cells.height);for(let e=0;e<t.pixelCount;e++){let r=this.getTileOptions(e);0==r.length?(console.warn("optionless cell encountered!"),t.setWithIndex(e,[255,0,0,255])):t.setWithIndex(e,getAverageCenterPixel(r))}return t}}function getAverageCenterPixel(t){let e=[0,0,0,0],r=1/t.length,i=Math.floor(t[0].width/2);for(let s of t){let t=s.get(i,i);for(let i=0;i<4;i++)e[i]+=t[i]*r}return e}class TileAtlas{constructor(t,e,r,i){this.tiles=t,this.prototypes=e,this.connections=r,this.connectionHash=i}static fromPeriodicSourceImage(t,e){let r=[],i=[],s=0;for(let o=0;o<t.height;o++)for(let n=0;n<t.width;n++){let a=t.periodicTrim(n,o,n+e,o+e),h=r.findIndex((t=>doImagesOverlap(t,a)));-1==h?(i.push(1),r.push(a)):i[h]+=1,s+=1}let o=[];for(let t=0;t<r.length;t++)o.push({tile:t,rotation:0,mirrored:!1,probability:i[t]/s});let n=[];for(let t=0;t<o.length;t++){let e=r[o[t].tile];for(let i=0;i<o.length;i++){if(t>i)continue;let s=r[o[i].tile];for(let r of I.Eight){doImagesOverlap(e,s,I.D8ToVector(r))&&(n.push({from:t,to:i,dir:r}),n.push({from:i,to:t,dir:I.opposite(r)}))}}}let a=new Set;for(let t of n)a.add(JSON.stringify(t));return new TileAtlas(r,o,n,a)}getConcatConnections(t){let e={};for(let t of I.Four)e[B[t]]=[];for(let r of this.connections)t.includes(r.from)&&(e[B[r.dir]].includes(r.to)||e[B[r.dir]].push(r.to));return e}printConcatConnections(t){console.log("connections of tiles ",t,":"),console.log(this.getConcatConnections(t))}printConnections(t){console.log("connections of tile ",t,":");let e={};for(let t of I.Four)e[B[t]]=[];for(let r of this.connections)r.from==t&&e[B[r.dir]].push(r.to);console.log(e)}canBeConnected(t,e,r){return this.connectionHash.has(JSON.stringify({from:t,to:e,dir:r}))}printAllConnections(){for(let t of this.prototypes)this.printConnections(t.tile)}}function doImagesOverlap(t,e,r=Vector2_Vector2.zero(),i=!1){let s=Vector2_Vector2.zero();r.x>0&&(s.x+=r.x),r.y>0&&(s.y+=r.y);let o=Vector2_Vector2.zero();r.x<0&&(o.x+=-1*r.x),r.y<0&&(o.y+=-1*r.y);for(let n=0;n<t.height-Math.abs(r.y);n++)for(let a=0;a<t.width-Math.abs(r.x);a++){if(i){console.log("a_coords",a+s.x,n+s.y),console.log("b_coords",a+o.x,n+o.y);let r=t.get(a+s.x,n+s.y),i=e.get(a+o.x,n+o.y);console.log("a",r,"b",i,"same",Color.isTheSame(r,i))}if(!Color.isTheSame(t.get(a+s.x,n+s.y),e.get(a+o.x,n+o.y)))return!1}if(i)for(let r=0;r<t.height;r++)for(let i=0;i<t.width;i++){let s=t.get(i,r);e.get(i,r);console.log("a",s)}return!0}var wave_app_awaiter=function(t,e,r,i){return new(r||(r=Promise))((function(s,o){function fulfilled(t){try{step(i.next(t))}catch(t){o(t)}}function rejected(t){try{step(i.throw(t))}catch(t){o(t)}}function step(t){t.done?s(t.value):function adopt(t){return t instanceof r?t:new r((function(e){e(t)}))}(t.value).then(fulfilled,rejected)}step((i=i.apply(t,e||[])).next())}))};class WaveApp extends App{constructor(t){super(t);let e=t.canvas,r=new Camera(e,-2,!0);r.setState([-25.673,-.51242,-6.2,-2,1.4800000000000004,4.699999999999986]),this.grid=new LineShader(t,[.3,.3,.3,1]),this.debug=DebugRenderer.new(t),this.scene=new Scene(r)}customTiles(){}start(){return wave_app_awaiter(this,void 0,void 0,(function*(){this.startGrid();let t=Plane_Plane.WorldYZ().moveTo(Vector3_Vector3.new(-10,0,4)),e=l.white.toInt(),r=l.black.toInt(),i=l.blue.toInt(),s=Bitmap_Bitmap.new(4,4);s.fillWithColors([e,r,r,r,e,r,i,r,e,r,r,r,e,e,e,e]),this.debug.set(ImageMesh.new(s,Plane_Plane.WorldXY().moveTo(Vector3_Vector3.new(1,0,0)),1,!1,!0),"sample2"),s.fillWithColors([e,i,r,i,e,r,e,r,e,i,r,i,e,e,e,e]);let o=TileAtlas.fromPeriodicSourceImage(s,2);console.log(o.prototypes);let n=TileSolver.new(o,32,32);for(;!n.isCollapsed();)n.solveStep(),this.debug.set(ImageMesh.new(n.renderResult(),t),"result"),yield E.sleep(10);for(let t=0;t<n.atlas.tiles.length;t++){let e=Plane_Plane.WorldXY().moveTo(Vector3_Vector3.new(3*t,5,0));this.debug.set(ImageMesh.new(n.atlas.tiles[t],e))}}))}ui(t){}startGrid(){let t=MultiLine.fromGrid(Plane_Plane.WorldXY().moveTo(new Vector3_Vector3(0,0,-1)),100,2);this.grid.set(t,g.StaticDraw)}update(t){this.scene.camera.update(t)}draw(){this.grid.render(this.scene),this.debug.render(this.scene)}}window.addEventListener("load",(function main(){let t=document.getElementById("canvas"),e=document.getElementById("interface"),r=p.initWebglContext(t),i=new Core(t,r,e);p.resizeViewportToCanvas(r),window.core=i;let s=new SwapApp(r,i,[WaveApp,MicApp,MarchingCubeApp,SkyboxApp,LeastSquaresCircleApp,DrawTargetApp,CannyApp,TorusApp,ZebraApp,CubesPhongApp,PhongApp,MultiRendererApp,BillboardApp,PerlinApp,SurfaceApp,BezierApp,BezierCpApp,SurfaceCpApp,SplineApp,LoftApp,SphericalApp,SphericalThreeApp,SphericalOneApp,IcosahedronApp,DotApp3,LeastSquaresApp,MeshInspectorApp,ObjLoaderApp]);i.addApp(s),s.swapFromUrl(location.hash,0);let o=0,n=FpsCounter.new();requestAnimationFrame((function loop(t){let e=t-o;o=t,n._update(e),document.title="fps: "+n.getFps(),i.update(e),i.draw(),requestAnimationFrame(loop)}))}),!1)})();